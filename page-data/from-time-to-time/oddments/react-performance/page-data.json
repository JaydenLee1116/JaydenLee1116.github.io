{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/oddments/react-performance/","result":{"data":{"cur":{"id":"37aacdfa-b658-53ba-afe6-6b839123cf54","html":"<h2 id=\"-잡동사니\" style=\"position:relative;\"><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\" aria-label=\" 잡동사니 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📦 잡동사니</h2>\n<p>하나의 키워드를 잡고 좀 편하게 정리하고 싶어 만든 <code class=\"language-text\">잡동사니</code><br/></p>\n<blockquote>\n<p>잡동사니는 조선 후기 학자 <code class=\"language-text\">안정복</code>이 편찬한 <code class=\"language-text\">잡동산이(雜同散異)</code>에서 유래된 말이다.<br/>\n잡동산이는 <code class=\"language-text\">잡기(雜記)</code>의 형태를 빌려온 책으로 구체적인 체계가 잡혀있지 않은 형식이다.<br/>\n항목이 다소 난잡하고 내용의 구분이 혼동되어있다고 한다. 🤣</p>\n</blockquote>\n<h2 id=\"️-useeffect-vs-usememo-vs-usecallback-vs-useref-vs-reactmemo\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-useeffect-vs-usememo-vs-usecallback-vs-useref-vs-reactmemo\" aria-label=\"️ useeffect vs usememo vs usecallback vs useref vs reactmemo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ useEffect vs useMemo vs useCallback vs useRef vs React.memo</h2>\n<ul>\n<li>훅들을 다시 복습하는데… 이 녀석들 정말 묘하게 아주 묘하게 다르다.</li>\n<li>각각의 목적 그리고 이름에 담긴 의미, 활용을 간단하게 기록해두려 한다.</li>\n</ul>\n<h3 id=\"useeffect\" style=\"position:relative;\"><a href=\"#useeffect\" aria-label=\"useeffect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect</h3>\n<ul>\n<li>여기서 Effect란 <code class=\"language-text\">Side Effect</code>를 의미한다.</li>\n<li>리액트는 렌더링 결과물을 화면에 반영하는 것이 주목적이다.</li>\n<li>이 때, 렌더링과 무관한 작업들을 <code class=\"language-text\">Side Effect</code>라고 할 수 있다.</li>\n<li><code class=\"language-text\">useEffect</code>는 이러한 <code class=\"language-text\">Side Effect</code>를 수행하기 위해 사용한다.</li>\n<li>예를 들어 <code class=\"language-text\">useEffect</code>를 사용하여 <code class=\"language-text\">fetch</code> 요청을 보내거나, <code class=\"language-text\">로그</code>를 남기거나, <code class=\"language-text\">타이머</code>를 설정할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.example.com/items'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// cleanup</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 예시 코드에서 useEffect 내의 함수는 <code class=\"language-text\">fetch</code> 요청을 보내고, <code class=\"language-text\">cleanup</code> 함수를 반환한다.\n이 때, x가 없이 빈 배열이라면 첫 mount 때 fetch 함수가 실행되고 unmount 때 cleanup 함수가 실행된다.\nx가 있을 경우, 첫 마운트 때 그리고 x가 변경될 때마다 fetch 함수가 실행되고, x가 변경되기 직전에 그리고 unmount 때 cleanup 함수가 실행된다.</p>\n<p>즉, useEffect는 렌더링과 무관한 작업을 수행하기 위해 사용되는 hook이다.</p>\n<h3 id=\"usememo\" style=\"position:relative;\"><a href=\"#usememo\" aria-label=\"usememo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useMemo</h3>\n<ul>\n<li>Memo란 Memory의 약자로, <code class=\"language-text\">메모리</code>를 의미한다. 즉, 잠시 기억해두기 위한 용도로 사용된다.</li>\n<li>useMemo는 전달되는 함수의 반환값을 기억한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> memoValue <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'memo value!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>x의 값이 변경되기 전까지는 ‘memo value!’를 기억하고 있다가, x의 값이 변경되면 다시 함수를 실행하여 반환값을 기억한다.</li>\n<li>파라미터로 전달된 <code class=\"language-text\">콜백 함수가 실행되어 반환하는 값</code>을 기억한다.</li>\n</ul>\n<h3 id=\"usecallback\" style=\"position:relative;\"><a href=\"#usecallback\" aria-label=\"usecallback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useCallback</h3>\n<ul>\n<li>Callback이란 <code class=\"language-text\">함수</code>를 의미한다. 즉, 함수를 기억하기 위한 용도로 사용된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> callback <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'callback function!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>x의 값이 변경되기 전까지는 <code class=\"language-text\">전달된 콜백 함수 자체를 기억</code>하고 있다가, x의 값이 변경되면 다시 그 콜백 함수를 기억한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> memoCallback <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'callback function!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>useMemo를 통해 콜백 함수를 기억하고, 그 콜백 함수를 useCallback을 통해 기억하는 것과 동일하다.</li>\n</ul>\n<h3 id=\"useref\" style=\"position:relative;\"><a href=\"#useref\" aria-label=\"useref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useRef</h3>\n<ul>\n<li>Ref란 <code class=\"language-text\">참조</code>를 의미한다. 즉, 참조를 위한 용도로 사용된다.</li>\n<li>useRef는 전달되는 값의 <code class=\"language-text\">참조</code>를 기억한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ref value!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ref.current === 'ref value!'</span></code></pre></div>\n<ul>\n<li>ref.current는 전달된 값의 참조를 기억한다.</li>\n<li>ref.current는 변경되지 않는다.(디펜던시가 없다.)</li>\n<li>주로 <code class=\"language-text\">DOM</code>을 참조하기 위해 사용된다.</li>\n</ul>\n<h3 id=\"reactmemo\" style=\"position:relative;\"><a href=\"#reactmemo\" aria-label=\"reactmemo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.memo</h3>\n<ul>\n<li>컴포넌트를 화살표 함수로 작성했을 때 사용 가능하다.</li>\n<li>해당 컴포넌트 자체의 <code class=\"language-text\">렌더링 결과물</code>을 기억한다.</li>\n<li>변수가 변경되지 않는 한, 해당 컴포넌트는 다시 렌더링되지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> MemoComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> handleFunction <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">MemoComponent</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>value와 handleFunction이 변경되지 않는 한, MemoComponent는 다시 렌더링되지 않는다.</li>\n<li>value는 변경되지 않지만, handleFunction은 변경될 수 있으므로, handleFunction은 useCallback을 통해 기억해두도록 한다.</li>\n</ul>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://react.dev/reference/react\">리액트 공식문서 업데이트 버전 - hooks</a></li>\n<li><a href=\"https://react.dev/reference/react/memo\">리액트 공식문서 업데이트 버전 - memo</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\">📦 잡동사니</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-useeffect-vs-usememo-vs-usecallback-vs-useref-vs-reactmemo\">🗂️ useEffect vs useMemo vs useCallback vs useRef vs React.memo</a></p>\n<ul>\n<li><a href=\"#useeffect\">useEffect</a></li>\n<li><a href=\"#usememo\">useMemo</a></li>\n<li><a href=\"#usecallback\">useCallback</a></li>\n<li><a href=\"#useref\">useRef</a></li>\n<li><a href=\"#reactmemo\">React.memo</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"📦 잡동사니 하나의 키워드를 잡고 좀 편하게 정리하고 싶어 만든  잡동사니는 조선 후기 학자 이 편찬한 에서 유래된 말이다.\n잡동산이는 의 형태를 빌려온 책으로 구체적인 체계가 잡혀있지 않은 형식이다.\n항목이 다소 난잡하고 내용의 구분이 혼동되어있다고 한다. 🤣 🗂️ useEffect vs useMemo vs useCallback vs useRef vs React.memo 훅들을 다시 복습하는데… 이 녀석들 정말 묘하게 아주 묘하게 다르다. 각각의 목적 그리고 이름에 담긴 의미, 활용을 간단하게 기록해두려 한다. useEffect 여기서 Effect란 를 의미한다. 리액트는 렌더링 결과물을 화면에 반영하는 것이 주목적이다. 이 때, 렌더링과 무관한 작업들을 라고 할 수 있다. 는 이러한 를 수행하기 위해 사용한다. 예를 들어 를 사용하여  요청을 보내거나, 를 남기거나, 를 설정할 수 있다. 위의 예시 코드에서 useEffect 내의 함수는  요청을 보내고,  함수를 반환한다.\n이 …","frontmatter":{"date":"May 02, 2023","title":"useEffect vs useMemo vs useCallback vs useRef vs React.memo","categories":"잡동사니","author":"제이든","emoji":"📦"},"fields":{"slug":"/from-time-to-time/oddments/react-performance/"}},"next":{"id":"0abd2f13-3876-54a1-ad71-23e5266f93eb","html":"<h1 id=\"-월간회고-v10\" style=\"position:relative;\"><a href=\"#-%EC%9B%94%EA%B0%84%ED%9A%8C%EA%B3%A0-v10\" aria-label=\" 월간회고 v10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚪 월간회고 v1.0</h1>\n<ul>\n<li>너무나 빠르게 가는 시간을 조금이라도 뒤돌아보고자 작성하는 한달 단위의 회고</li>\n<li>다른 카테고리들보다 아직 정해진 게 없다. 천천히 정리해나아가는 걸로! 최대한 러프하게 생각나는 핵심들을 적어보도록 하자!</li>\n</ul>\n<h2 id=\"동료들\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EB%A3%8C%EB%93%A4\" aria-label=\"동료들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동료들</h2>\n<p>오프라인으로 동료들과 함께 공부한지 2개월. 확실히 함께 옆에서 바로 소통하면서 배우니 도움이 많이 된다. 최대한 동료들에게 도움이 많이 될 수 있는 동료가 되자라는\n목표와는 무색하게 내가 되려 배우는 게 많다. 지금 이렇게 동료들과 공부하듯이 개발자로 회사를 다닐 수 있다면 얼마나 행복하고 좋을까 생각이 많이 든다. 이런 좋은\n자극들마저 하나하나 너무 소중하다. :)</p>\n<h2 id=\"프로젝트-설계-공부\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84-%EA%B3%B5%EB%B6%80\" aria-label=\"프로젝트 설계 공부 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 설계 공부</h2>\n<p>저번 3월의 컨셉이 <code class=\"language-text\">새로운 기술 스택에 대한 두려움 없애기</code>였다. 새로운 기술을 배우는 재미를 알게 되었지만, 한편으로는 새로운 것을 배우는 것에 집중한 나머지 코드\n자체가 너무 지저분한 사단이 났다. 기획, 설계 등의 문제를 떠나서 내가 봐도 내 코드가 너무 지저분하고 리팩토링하기가 버거웠다. 그래서 이번 4월은 프로젝트를 들어가기에 앞서\n기획부터 설계까지 정말 정말 열심히 했다. 내가 해보고 싶은 설계도 이래저래 다 해보고 아키텍처 패턴부터 디자인 패턴까지 공부해볼 수 있는 좋은 기회였다. 다만… 이번엔\n처음에 많은 공을 들이다보니 기능 구현하는데 집중을 많이 못했다. ㅠㅠㅠㅠㅠ 기능을 구현해야 보이는 게 있다보니 개인적으로 너무 아쉬웠다. 해서 이번에 진행한 프로젝트를\n살려서 더 진행해보려한다!!!</p>\n<h2 id=\"무릎-나아가는-중\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EB%A6%8E-%EB%82%98%EC%95%84%EA%B0%80%EB%8A%94-%EC%A4%91\" aria-label=\"무릎 나아가는 중 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무릎 나아가는 중</h2>\n<p>처음에 정말 많이 안좋았던 무릎이 많이 나아졌다. 아직 온전히 다 나은 건 아니지만, 어느정도 달릴 수 있게 되었다. 작다면 작고 크다면 큰 부상이지만, 이번 기회에 다시 한번\n건강의 소중함을 느낄 수 있었다. 내 삶의 모든 것의 기저에는 건강이 깔려있다는 것. 다시 한번 기억하자! :)</p>\n<h2 id=\"공부를-할수록\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EB%B6%80%EB%A5%BC-%ED%95%A0%EC%88%98%EB%A1%9D\" aria-label=\"공부를 할수록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공부를 할수록</h2>\n<p>공부를 하면 할수록 새로운 내용들이 보이고, 부족한 부분들이 생겨나고, 자연스럽게 더 욕심이 나면서 조급해진다. 욕심… 긍정적인 욕심까지만 생기도록 나를 잘 다스리자.\n조급해지지는 않게 하자. 조급해지는 것도 정말 자연스러운 현상이겠지만 조급함으로 인해서 놓칠 수 있는 것들이 생겨날 수 있으니까. 나를 행복하게 하는 공부를 하고 즐기면서\n살아가자.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%8F%99%EB%A3%8C%EB%93%A4\">동료들</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84-%EA%B3%B5%EB%B6%80\">프로젝트 설계 공부</a></li>\n<li><a href=\"#%EB%AC%B4%EB%A6%8E-%EB%82%98%EC%95%84%EA%B0%80%EB%8A%94-%EC%A4%91\">무릎 나아가는 중</a></li>\n<li><a href=\"#%EA%B3%B5%EB%B6%80%EB%A5%BC-%ED%95%A0%EC%88%98%EB%A1%9D\">공부를 할수록</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 01, 2023","title":"23년 4월","categories":"월간회고","author":"제이든","emoji":"🖼️"},"fields":{"slug":"/steadily/monthly-review/2023/4/"}},"prev":{"id":"e7b5102d-84af-540e-9cd3-9008fd35dbc8","html":"<h2 id=\"-성장일지-40\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\" aria-label=\" 성장일지 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 4.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 (1.0)키워드<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 (2.0)경험 위주로<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ (3.0)정해진 템플릿에 맞춰서<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성<br/>\n(3.1)230102부터 시작되는 학습에 관한 내용 추가<br/>\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!<br/>\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/></p>\n</blockquote>\n<h2 id=\"-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 학습 키워드</h2>\n<h3 id=\"useeffect-vs-usememo-vs-usecallback-vs-useref-vs-reactmemo\" style=\"position:relative;\"><a href=\"#useeffect-vs-usememo-vs-usecallback-vs-useref-vs-reactmemo\" aria-label=\"useeffect vs usememo vs usecallback vs useref vs reactmemo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect vs useMemo vs useCallback vs useRef vs React.Memo</h3>\n<p>이 묘하게 다른 훅 녀석들… 알고보면 굉장히 다른 목적과 용도를 갖고 있지만 처음 보면 뭔가 얼추 비스무리한 느낌이 든다.\n해서 잡동사니에 이 녀석들을 정리해두었다. ☀️ <a href=\"https://jaydenlee1116.github.io/from-time-to-time/oddments/react-performance/\">참고</a></p>\n<h2 id=\"-오늘의-고민-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 고민 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍀 오늘의 고민 키워드</h2>\n<h3 id=\"usereducer와-context-api를-사용한-전역-상태-관리-feat-redux\" style=\"position:relative;\"><a href=\"#usereducer%EC%99%80-context-api%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-feat-redux\" aria-label=\"usereducer와 context api를 사용한 전역 상태 관리 feat redux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useReducer와 context API를 사용한 전역 상태 관리 feat. Redux</h3>\n<p>아직 이 둘의 활용법에 대해서 자세히 와닿지가 않는다. 개념적으로는 둘다 전역으로 상태를 관리할 수 있고 데이터에 대한 로직을 따로 분리할 수 있다는 장점이 있다는 것\n정도..?는 알겠지만, 실제로 언제 어떤 걸 사용하는 게 효율적인지 아직 감이 덜 온다. 여기에 redux까지 생각하면 각각의 용도와 역할 그리고 이게 왜 나왔는지 에 대한 개념을\n정리해둘 필요가 있을 것 같다.</p>\n<ul>\n<li><a href=\"https://velog.io/@dae_eun2/Context-API-%EC%99%80-Redux-%EB%B9%84%EA%B5%90\">Context API와 Redux 비교</a></li>\n</ul>\n<p>위의 글을 참고해서 언제 한 번 비교 정리를 해야겠다.</p>\n<h2 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h2>\n<p>방학이 시작되었다. 빠르게 리액트를 복습(사실 거의 학습… vanilla JS를 오래하니 새롭게 보이는 게 많다.)하고 있다. 일단 너무 재미있다.ㅋㅋㅋㅋㅋ 다른 의미로\nvanilla JS보다 복잡하기도 하지만, 확실히 라이브러리(사실상 프레임워크)라 그런가 원하는 게 뚝딱 만들어지는 기분이라 좋다. 거기에 내가 사랑하는 tailwindCSS가\nCRA 기본으로 설치된다니 ㅠㅠ 감격… 사실 styled component같은 CSS in JS를 사용해봤을 때 불편한 점이 더 많다고 느꼈는데, 마침 성능상으로도 좋지 않다고 하니\n나에겐 오히려 희소식이다. 그렇다고 너무 tailwindCSS에만 의존하지 않고 Post CSS와 같은 좀더 기본적인(?) css module도 사용하도록 하자.</p>\n<h3 id=\"오늘의-잘한-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\" aria-label=\"오늘의 잘한 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 잘한 점</h3>\n<ul>\n<li>빠르게 원하는 양만큼 공부한 점</li>\n<li>재미있게 즐기면서 공부하고 있는 점</li>\n</ul>\n<h3 id=\"오늘의-아쉬운-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\" aria-label=\"오늘의 아쉬운 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 아쉬운 점</h3>\n<ul>\n<li>내가 계획한만큼 다 공부하진 못한 점(너무 계획을 많이 짰나…?)</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://jaydenlee1116.github.io/from-time-to-time/oddments/react-performance/\">훅 정리</a></li>\n<li><a href=\"https://velog.io/@dae_eun2/Context-API-%EC%99%80-Redux-%EB%B9%84%EA%B5%90\">Context API와 Redux 비교</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\">🎄 성장일지 4.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 학습 키워드</a></p>\n<ul>\n<li><a href=\"#useeffect-vs-usememo-vs-usecallback-vs-useref-vs-reactmemo\">useEffect vs useMemo vs useCallback vs useRef vs React.Memo</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC-%ED%82%A4%EC%9B%8C%EB%93%9C\">🍀 오늘의 고민 키워드</a></p>\n<ul>\n<li><a href=\"#usereducer%EC%99%80-context-api%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC-feat-redux\">useReducer와 context API를 사용한 전역 상태 관리 feat. Redux</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></p>\n<ul>\n<li><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\">오늘의 잘한 점</a></li>\n<li><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\">오늘의 아쉬운 점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"May 02, 2023","title":"230502(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/5/2-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/oddments/react-performance/","nextSlug":"/steadily/monthly-review/2023/4/","prevSlug":"/steadily/growth-diary/2023/5/2-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}