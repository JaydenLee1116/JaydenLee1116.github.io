{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/oddments/proxy/","result":{"data":{"cur":{"id":"cde92928-5d2d-51cf-b78a-442a63b7b310","html":"<h2 id=\"-잡동사니\" style=\"position:relative;\"><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\" aria-label=\" 잡동사니 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📦 잡동사니</h2>\n<p>하나의 키워드를 잡고 좀 편하게 정리하고 싶어 만든 <code class=\"language-text\">잡동사니</code><br/></p>\n<blockquote>\n<p>잡동사니는 조선 후기 학자 <code class=\"language-text\">안정복</code>이 편찬한 <code class=\"language-text\">잡동산이(雜同散異)</code>에서 유래된 말이다.<br/>\n잡동산이는 <code class=\"language-text\">잡기(雜記)</code>의 형태를 빌려온 책으로 구체적인 체계가 잡혀있지 않은 형식이다.<br/>\n항목이 다소 난잡하고 내용의 구분이 혼동되어있다고 한다. 🤣</p>\n</blockquote>\n<h2 id=\"️-작성하게-된-이유\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%9E%91%EC%84%B1%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"️ 작성하게 된 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ 작성하게 된 이유</h2>\n<p>바닐라 JS로 간단한 기능을 구현하다가 Proxy 객체를 알게 되었다. 이전에도 살짝 공부는 했었지만, 개념은 기억이 나도 객체 자체의 사용방법은 기억이 나질 않아서 정리하게 되었다.</p>\n<h2 id=\"️-proxy\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-proxy\" aria-label=\"️ proxy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ Proxy</h2>\n<p>Proxy는 주로 <code class=\"language-text\">대리하다.</code>, <code class=\"language-text\">가로채다.</code>, <code class=\"language-text\">훔치다.</code> 등의 의미를 갖는다. 흔히 우리가 <code class=\"language-text\">쁘락지</code>라고 부르는 스파이 느낌의 단어도 Proxy에서 유래된 것이다.</p>\n<p>IT 용어로 Proxy(프록시)가 사용되는 다양항 상황이 있다.\n우선 Proxy 서버라고 하면 <code class=\"language-text\">대리 서버</code>라고 생각하면 된다. 클라이언트가 서버에 요청을 보내면 Proxy 서버가 요청을 받아서 서버에 요청을 보내고, 서버가 응답을 보내면 Proxy 서버가 응답을 받아서 클라이언트에게 응답을 보내는 방식이다. 이렇게 Proxy 서버를 두는 이유는 여러가지가 있지만, 주로 보안과 성능을 위해 사용한다.</p>\n<p>그렇다면 JS에서의 Proxy는 어떤 역할을 할지 알아보자!</p>\n<h3 id=\"️-proxy-in-js\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-proxy-in-js\" aria-label=\"️ proxy in js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ Proxy in JS</h3>\n<p>JS에서의 Proxy는 객체의 기본적인 동작(JS의 객체에서 값을 읽어오는 것은 get, 값을 변경하는 것은 set이라고 한다.)을 가로채서 다른 동작을 할 수 있게 해준다. 이를 통해 객체의 동작을 수정하거나, 객체에 접근하는 방식을 변경할 수 있다.</p>\n<p>아래와 같은 상황을 가정해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'jayden'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ntarget<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// jayden</span></code></pre></div>\n<p>알다시피 <code class=\"language-text\">target.name</code>으로 name 프로퍼티의 값을 <code class=\"language-text\">get</code>할 수 있다. 그런데 여기서 만약에 이 값을 읽어올 때, 어떤 무언가를 추가적으로 작업해주고 싶다면 어떻게 해야할까..? Proxy를 알지 못한다면 아래와 같이 코드를 작성할 수 있을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'jayden'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">doSomething</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// jayden</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">doSomething</code>에 target과 어떤 콜백을 전달하여 name에 해댕하는 값을 반환함과 동시에 해당 값을 log로 찍는 행위를 할 수 있다.\n이제 Proxy를 사용해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'jayden'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handleTarget <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이렇게 반환하는 게 기본적인 getter 동작</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> newValue <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이게 setter의 기본 동작</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> proxyObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handleTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Proxy 객체에 target과 handler를 전달하면, handler에 정의된 동작을 수행하게 된다. 위의 코드에서는 get과 set을 정의했기 때문에 target의 값을 읽어오거나 변경할 때, handler에 정의된 동작을 수행하게 되는 것이다.</p>\n<p>처음 보면 복잡해보이지만 코드를 한 번 작성해보면 생각보다 간단한 것을 알 수 있다.</p>\n<p>Proxy라는 객체가 있음을 기억하고 코드를 작성하다가 필요한 상황이 생기면 Proxy를 사용해보자!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\">📦 잡동사니</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%9E%91%EC%84%B1%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\">🗂️ 작성하게 된 이유</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-proxy\">🗂️ Proxy</a></p>\n<ul>\n<li><a href=\"#%EF%B8%8F-proxy-in-js\">🗂️ Proxy in JS</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"📦 잡동사니 하나의 키워드를 잡고 좀 편하게 정리하고 싶어 만든  잡동사니는 조선 후기 학자 이 편찬한 에서 유래된 말이다.\n잡동산이는 의 형태를 빌려온 책으로 구체적인 체계가 잡혀있지 않은 형식이다.\n항목이 다소 난잡하고 내용의 구분이 혼동되어있다고 한다. 🤣 🗂️ 작성하게 된 이유 바닐라 JS로 간단한 기능을 구현하다가 Proxy 객체를 알게 되었다. 이전에도 살짝 공부는 했었지만, 개념은 기억이 나도 객체 자체의 사용방법은 기억이 나질 않아서 정리하게 되었다. 🗂️ Proxy Proxy는 주로 , ,  등의 의미를 갖는다. 흔히 우리가 라고 부르는 스파이 느낌의 단어도 Proxy에서 유래된 것이다. IT 용어로 Proxy(프록시)가 사용되는 다양항 상황이 있다.\n우선 Proxy 서버라고 하면 라고 생각하면 된다. 클라이언트가 서버에 요청을 보내면 Proxy 서버가 요청을 받아서 서버에 요청을 보내고, 서버가 응답을 보내면 Proxy 서버가 응답을 받아서 클라이언트에게 응답을 보내…","frontmatter":{"date":"July 26, 2023","title":"Proxy in JS","categories":"잡동사니","author":"제이든","emoji":"📦"},"fields":{"slug":"/from-time-to-time/oddments/proxy/"}},"next":{"id":"4b722064-f4a3-5e6f-9b69-a09b67acc457","html":"<h2 id=\"-성장일지-60\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\" aria-label=\" 성장일지 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 6.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/>\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!<br/>\n🍉 (6.0)&#x3C;완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기.<br/></p>\n<ul>\n<li>🍉 (6.1)&#x3C;수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자</li>\n</ul>\n</blockquote>\n<h2 id=\"-오늘의-감정\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\" aria-label=\" 오늘의 감정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈 오늘의 감정</h2>\n<p>흐… 오늘은 뭔가 이것저것 많이 한 것 같으면서도 안한 느낌이다. 저녁 전까지 빡세게 공부하다가 webstorm의 메모리 점유율을 보고 그냥 넘길 수가 없었다. 무엇보다 아주 느린 건 아닌데\n미묘하게 느려진 속도가 너무 거슬렸다. 그래서 vsc로 갈아타면서 기존에 잊고 있던 단축키부터 익스텐션들까지 어느정도 세팅을 했다.(난 왜 맨날 이런 세팅하면 시간 가는 줄 모르고 하는지…)\n덕분에 보람차긴 한데… 내가 생각한 것보다 개발을 하진 못한 느낌이다. 따흑… 좀더 잘하자!!!</p>\n<h2 id=\"-오늘의-고민\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-label=\" 오늘의 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫧 오늘의 고민</h2>\n<h3 id=\"스택-큐-구현보다-양방향-연결리스트-나중에도-구현할-수-있을까\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%9D-%ED%81%90-%EA%B5%AC%ED%98%84%EB%B3%B4%EB%8B%A4-%EC%96%91%EB%B0%A9%ED%96%A5-%EC%97%B0%EA%B2%B0%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%82%98%EC%A4%91%EC%97%90%EB%8F%84-%EA%B5%AC%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"스택 큐 구현보다 양방향 연결리스트 나중에도 구현할 수 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스택, 큐 구현보다 양방향 연결리스트… 나중에도 구현할 수 있을까?</h3>\n<p>오늘은 기존에 구현해두었던 연결리스트를 사용해서 스택과 큐를 구현했다. 솔직히 스택과 큐 둘 다 개념 자체는 어렵지 않아서 쉬웠다. 문제는 큐를 구현할 때, 기존의 연결리스트에서 양방향 연결리스트를\n구현하는 것이었다. 하나하나 생각해보면 이해가 되긴 하는데, 나중에 다시 구현하라고 하면 할 수 있을지 조금 의문이다.(ㅎㅎ) 그래도 단방향 연결리스트, 스택, 큐는 구현할 수 있으니..! 그리고 참고로\n그럼 언제든 양방향이 단방향보다 좋은가 싶었는데, 양방향 연결리스트는 노드 하나에 대해 포인터가 두 개가 있는 만큼 메모리를 더 사용한다. 역시 개발은 뭐든지 trade-off가 있는 것 같다.</p>\n<h2 id=\"️-오늘의-경험\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\" aria-label=\"️ 오늘의 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️ 오늘의 경험</h2>\n<h3 id=\"바닐라-js로-구현하기\" style=\"position:relative;\"><a href=\"#%EB%B0%94%EB%8B%90%EB%9D%BC-js%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"바닐라 js로 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바닐라 JS로 구현하기</h3>\n<p>요즘 JS를 복습 겸 공부하려고 시나브로 JS 강의를 듣고 있다. 처음 강의 때부터 어느정도 JS를 알고 리액트도 해본 분들을 대상으로 한다고 하셨다. 와… 나름 JS 공부를 했다고 느끼는데\n강의해주시는 은재님께서 기존 JS로 간단한 코드를 작성하시고 하나하나 리액트스럽게 바꿔나가는 과정은 정말 감탄을 금치 못했다. 속도도 속도지만, 아직 작성하지도 않은 함수를 미리 만들어두고\n틀을 잡은 뒤에 하나하나 구현하시는데… 이게 시니어구나 싶더라. 당장 내가 저 정도가 되는 건 말도 안되는 욕심이지만, 언젠가 저 정도의 실력을 갖추고 싶다. 솔직히 처음에는 조금 강의가 지루했는데\n이제는 그런 생각이 하나도 들지가 않는다. 또 어떤 새로운 것을 배울 수 있을까 기대가 된다.</p>\n<h2 id=\"-오늘의-교훈\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\" aria-label=\" 오늘의 교훈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐾 오늘의 교훈</h2>\n<p>공부하고 개발하고 계획 세우는 거 다 좋다. 매일 꾸준히 하는 것도 좋다. 근데 일단 이력서 작성해서 얼른 지원해보자. 그래야 지금 내 위치도 알 수 있고 어떤 공부를 해야할지도 알 수 있을 것 같다.\n얼른 작성해서 지원해보자!!!</p>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪵 참고</h2>\n<ul>\n<li><a href=\"https://learnwitheunjae.dev/\">시나브로 JS</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\">🚤 성장일지 6.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\">🌈 오늘의 감정</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\">🫧 오늘의 고민</a></p>\n<ul>\n<li><a href=\"#%EC%8A%A4%ED%83%9D-%ED%81%90-%EA%B5%AC%ED%98%84%EB%B3%B4%EB%8B%A4-%EC%96%91%EB%B0%A9%ED%96%A5-%EC%97%B0%EA%B2%B0%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%82%98%EC%A4%91%EC%97%90%EB%8F%84-%EA%B5%AC%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\">스택, 큐 구현보다 양방향 연결리스트… 나중에도 구현할 수 있을까?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\">☀️ 오늘의 경험</a></p>\n<ul>\n<li><a href=\"#%EB%B0%94%EB%8B%90%EB%9D%BC-js%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\">바닐라 JS로 구현하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\">🐾 오늘의 교훈</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B0%B8%EA%B3%A0\">🪵 참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 25, 2023","title":"230725(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/7/25-gl/"}},"prev":{"id":"0f329fc8-adc0-525d-b194-927d733d4112","html":"<h2 id=\"-성장일지-60\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\" aria-label=\" 성장일지 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 6.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/>\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!<br/>\n🍉 (6.0)&#x3C;완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기.<br/></p>\n<ul>\n<li>🍉 (6.1)&#x3C;수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자</li>\n</ul>\n</blockquote>\n<h2 id=\"-오늘의-감정\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\" aria-label=\" 오늘의 감정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈 오늘의 감정</h2>\n<p>그 동안 뭔가 조금 계속 답답하다는 느낌을 받았는데, 이제 그 방향을 조금 알 것 같다. input이 아닌 output을 중심으로 계획을 세우자. 지금까지 내가 세운 계획들은 대부분 input을 중심으로\n세웠다. 이제부터는 input이 아닌 <code class=\"language-text\">output</code>에 집중해서 계획을 세워보려 한다. 그리고 그 output이 그 날의 목표가 되는 것이다.</p>\n<h2 id=\"-오늘의-고민\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-label=\" 오늘의 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫧 오늘의 고민</h2>\n<h3 id=\"proxy-객체-활용-방법\" style=\"position:relative;\"><a href=\"#proxy-%EA%B0%9D%EC%B2%B4-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"proxy 객체 활용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proxy 객체 활용 방법</h3>\n<p>Proxy 객체를 통해서 객체의 getter, setter 시 특정 동작을 추가할 수 있음을 알았다. 다만, 이를 실제 프로젝트에서는 어떻게 활용할 수 있을지 모르겠다. Proxy 패턴으로 구현된 라이브러리나\n프레임워크가 있는지 찾아보려 한다. 지금 드는 활용은 어떤 콜백을 인자로 받는 함수에서 객체를 반환하고 그 객체의 프로퍼티를 사용할 때 특정 동작(인자로 받은 콜백)을 추가하는 방법이 있지 않을까 싶다.</p>\n<h2 id=\"️-오늘의-경험\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\" aria-label=\"️ 오늘의 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️ 오늘의 경험</h2>\n<h3 id=\"deque-자료구조\" style=\"position:relative;\"><a href=\"#deque-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"deque 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deque 자료구조</h3>\n<p>Deque는 Double-ended Queue의 약자로, 양방향으로 데이터를 삽입하거나 삭제할 수 있는 자료구조이다. 즉, 스택과 큐를 합친 자료구조라고 생각하면 된다. head에서 데이터를 삽입, 제거가 가능하고\ntail에서도 데이터를 삽입, 제거가 가능하다. 이 자료구조를 구현하기 위해서는 양방향 리스트가 필요하다. 양방향 리스트를 구현하고 Deque를 구현하면 스택과 큐는 정말 쉽게 구현할 수 있다.</p>\n<h2 id=\"-오늘의-교훈\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\" aria-label=\" 오늘의 교훈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐾 오늘의 교훈</h2>\n<p>앞으로 계획은 output을 위주로 작성한다. input보다 output에 집중하고 그 날의 성과를 output으로 측정해서 기억하자.</p>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪵 참고</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy 객체</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\">🚤 성장일지 6.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\">🌈 오늘의 감정</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\">🫧 오늘의 고민</a></p>\n<ul>\n<li><a href=\"#proxy-%EA%B0%9D%EC%B2%B4-%ED%99%9C%EC%9A%A9-%EB%B0%A9%EB%B2%95\">Proxy 객체 활용 방법</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\">☀️ 오늘의 경험</a></p>\n<ul>\n<li><a href=\"#deque-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\">Deque 자료구조</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\">🐾 오늘의 교훈</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B0%B8%EA%B3%A0\">🪵 참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 26, 2023","title":"230726(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/7/26-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/oddments/proxy/","nextSlug":"/steadily/growth-diary/2023/7/25-gl/","prevSlug":"/steadily/growth-diary/2023/7/26-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}