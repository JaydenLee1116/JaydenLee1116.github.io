{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/newspaper/2023/2/22-np/","result":{"data":{"cur":{"id":"2ba4c082-65a0-57d3-b563-72df5e7b57a0","html":"<h2 id=\"️-신문스크랩-21\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\" aria-label=\"️ 신문스크랩 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞️ 신문스크랩 2.1</h2>\n<p>기존 티스토리 블로그에서 매일 작성하던 신문 스크랩을 다시 시작하기로 했다.<br/>\n개발자는 문제를 해결하는 사람이다. 그러니 항상 세상에서 일어나는 일(문제)에 관심을 가져야 한다.<br/>\n인상깊은 기사의 헤드라인을 적고 모르는 단어에 대한 정리, 그리고 내 생각을 간단하게 덧붙이는 것으로 가볍게 시작해보자.<br/>\n(v2.1 추가) 기사의 핵심 키워드를 추가해보자.</p>\n<h2 id=\"-주요-기사\" style=\"position:relative;\"><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\" aria-label=\" 주요 기사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌻 주요 기사</h2>\n<p><code class=\"language-text\">학생 문해력 OECD 평균 미달, 신문 읽기가 답이다</code></p>\n<ul>\n<li>글을 읽고도 무슨 의미인지를 모르는 젊은 층 급증</li>\n<li>‘심심한 사과’, ‘사흘’, ‘무운’ 등의 표현을 몰라</li>\n<li>유아 시절부터 스마트폰, 유튜브 등 디지털 기기와 영상 매체 노출 영향</li>\n<li>문해력을 키우는 가장 쉽고 효과적인 방법은 신문 읽기</li>\n</ul>\n<h3 id=\"-키워드\" style=\"position:relative;\"><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞 키워드</h3>\n<ul>\n<li>문해력, 신문 읽기</li>\n</ul>\n<h3 id=\"-단어-정리\" style=\"position:relative;\"><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\" 단어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔤 단어 정리</h3>\n<ul>\n<li>무운: 전쟁의 승패에 관한 운수</li>\n</ul>\n<h3 id=\"-내-생각\" style=\"position:relative;\"><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\" aria-label=\" 내 생각 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 내 생각</h3>\n<p>흔히 ‘무운을 빈다.‘라는 표현을 사용하곤 하는데, 그냥 대충 잘하고 오길 기원하는 정도로만 알았다. 위와 같은 뜻이 있는 줄은 이제 알았다.<br/>\n내가 처음 신문을 읽게 된 계기는 이전에 근무했던 부서가 기획, 투자 부서였었기 때문이다. 선임님들이 신문을 꼭 보라고 하셨던 게 지금까지 이어져서 2년 정도 되어간다.\n신문을 읽으면 문해력이 올라가는 것은 기본이고 얕게라도 세상이 돌아가는 걸 알게 된다. 가장 큰 장점은 <code class=\"language-text\">세상의 흐름을 자연스럽게 느끼게 해준다는 점</code>이다.\n지면이 30 페이지가 넘어가는 신문을 모두 꼼꼼히 읽을 수는 없다. 빠르게 속독하는 것만으로도 세상이 어디로 어떻게 향하고 있는지 느낄 수 있다. 어떤 일을 하더라도, 어떤 삶을 살더라도\n신문을 통해 세상과 닿아있는 것은 반드시 도움이 된다. 한편, 어떤 사람들은 말한다. “신문사마다 정치적인 편향이 너무 심해서 한쪽으로 치우친 시각, 사고가 자리잡게 된다.” 나도 이 말에\n전적으로 동의한다. 내가 읽고 있는 매일경제만 해도 가끔은 너무 대놓고 편향된 기사 내용, 배치가 눈에 보이니 말이다. 이를 방지하기 위해 본인이 시간적 여유가 된다면 상반된 성향의 신문을 동시에 읽는 것이\n가장 좋은 방법일 것이다. 그렇지 않다면 본인이 보고 있는 신문사의 성향을 인지하고 감안해서 읽는 것이 필요하다. 그러면서 본인만의 주관을 하나하나 만들어가는 재미가 있는게 또 신문의 큰 매력이 아닐까\n생각한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\">🗞️ 신문스크랩 2.1</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\">🌻 주요 기사</a></p>\n<ul>\n<li><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\">🗞 키워드</a></li>\n<li><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\">🔤 단어 정리</a></li>\n<li><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\">🤔 내 생각</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🗞️ 신문스크랩 2.1 기존 티스토리 블로그에서 매일 작성하던 신문 스크랩을 다시 시작하기로 했다.\n개발자는 문제를 해결하는 사람이다. 그러니 항상 세상에서 일어나는 일(문제)에 관심을 가져야 한다.\n인상깊은 기사의 헤드라인을 적고 모르는 단어에 대한 정리, 그리고 내 생각을 간단하게 덧붙이는 것으로 가볍게 시작해보자.\n(v2.1 추가) 기사의 핵심 키워드를 추가해보자. 🌻 주요 기사  글을 읽고도 무슨 의미인지를 모르는 젊은 층 급증 ‘심심한 사과’, ‘사흘’, ‘무운’ 등의 표현을 몰라 유아 시절부터 스마트폰, 유튜브 등 디지털 기기와 영상 매체 노출 영향 문해력을 키우는 가장 쉽고 효과적인 방법은 신문 읽기 🗞 키워드 문해력, 신문 읽기 🔤 단어 정리 무운: 전쟁의 승패에 관한 운수 🤔 내 생각 흔히 ‘무운을 빈다.‘라는 표현을 사용하곤 하는데, 그냥 대충 잘하고 오길 기원하는 정도로만 알았다. 위와 같은 뜻이 있는 줄은 이제 알았다.\n내가 처음 신문을 읽게 된 계기는 이전에 …","frontmatter":{"date":"February 22, 2023","title":"230222(수) 문해력과 신문 읽기","categories":"신문스크랩","author":"제이든","emoji":"📰"},"fields":{"slug":"/from-time-to-time/newspaper/2023/2/22-np/"}},"next":{"id":"c162b639-2768-5bc8-ae60-533926b4df3f","html":"<h2 id=\"-성장일지-31\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\" aria-label=\" 성장일지 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 3.1</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드 (1.0)<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 경험 위주로 (2.0)<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ 정해진 템플릿에 맞춰서 (3.0)<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1) 230102부터 시작되는 학습에 관한 내용 추가</p>\n</blockquote>\n<h2 id=\"-오늘의-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 키워드</h2>\n<h3 id=\"도커로-mysql-컨테이너-띄우고-ts로-간단하게-연결하는-과정-복기\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4%EB%A1%9C-mysql-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%9D%84%EC%9A%B0%EA%B3%A0-ts%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%97%B0%EA%B2%B0%ED%95%98%EB%8A%94-%EA%B3%BC%EC%A0%95-%EB%B3%B5%EA%B8%B0\" aria-label=\"도커로 mysql 컨테이너 띄우고 ts로 간단하게 연결하는 과정 복기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커로 mysql 컨테이너 띄우고 ts로 간단하게 연결하는 과정 복기</h3>\n<ol>\n<li>먼저 docker를 웹에서 다운로드 받는다.(본인의 OS에 맞게 잘 받아야한다.)</li>\n</ol>\n<ul>\n<li>\n<p>도커 버전 확인</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">docker</span> -v</code></pre></div>\n</li>\n</ul>\n<ol start=\"2\">\n<li>docker를 통해 mysql 이미지를 가져와서 컨테이너를 띄운다. 이 때, 원하는 환경변수를 설정하는 건 덤이다!</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">docker</span> run -d -p <span class=\"token number\">3307</span>:3306 --platform linux/amd64 -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">1116</span> --name mysql-container mysql:5.7 --character-set-server<span class=\"token operator\">=</span>utf8mb4 --collation-server<span class=\"token operator\">=</span>utf8mb4_unicode_ci</code></pre></div>\n<ul>\n<li>3307포트로 root 비번은 1116인 mysql-container라는 이름을 가진 5.7 버전의 mysql 컨테이너를 띄운다. 이 때, character-set-server와 collation-server은 각각 utf8mb4로 설정한다.(한글 및 이모지 사용하기 위해)</li>\n</ul>\n<ol start=\"3\">\n<li>실행 중인 컨테이너에 명령어를 실행할 수 있게 한다.(bash 사용)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -it mysql-container <span class=\"token function\">bash</span></code></pre></div>\n<ol start=\"4\">\n<li>루트 권한으로 mysql 서버(?) 혹은 컨테이너에 접속한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">mysql -u root -p</code></pre></div>\n<ul>\n<li>그러면 아까 위에서 설정한 root의 비밀번호를 입력하고 엔터를 입력한다.</li>\n</ul>\n<ol start=\"5\">\n<li>Database를 생성한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"db\"><pre class=\"language-db\"><code class=\"language-db\">CREATE DATABASE dbname;</code></pre></div>\n<ol start=\"6\">\n<li>생성한 Database를 선택한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"db\"><pre class=\"language-db\"><code class=\"language-db\">USE dbname; </code></pre></div>\n<ol start=\"7\">\n<li>이제 데이터베이스에 원하는 형태의 테이블을 만들어준다.</li>\n</ol>\n<ul>\n<li>NOT NULL, PRIMARY KEY, FOREIGN KEY, UNIQUE 등의 제약 조건을 할당해줄 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"db\"><pre class=\"language-db\"><code class=\"language-db\">CREATE TABLE tablename (field1 field1-type PRIMARY KEY, field2 field2-type NOT NULL);</code></pre></div>\n<ol start=\"8\">\n<li>root 권한은 예상치 못한 위험을 초래할 수 있으므로, 새로운 User를 만들고 권한을 할당해준다.</li>\n</ol>\n<ul>\n<li>\n<p>예제는 모든 권한을 넘겨준 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"db\"><pre class=\"language-db\"><code class=\"language-db\">CREATE USER &#39;userID&#39;@&#39;%&#39; identified by &#39;userpassword&#39;;\nFLUSH PRIVILEGES;\nGRANT ALL PRIVILEGES ON dbname.* to userID@&#39;%&#39;;</code></pre></div>\n</li>\n</ul>\n<ol start=\"9\">\n<li>mysql에서 exit하고 위에 지정해준 User로 접속한다.(위에서 지정한 패스워드로!)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">mysql -u userID -p</code></pre></div>\n<p>여기까지가 아주 기초적인 과정이다! docker를 통해 mysql을 갖고 있는 컨테이너를 띄우고 그 안에서 마치 다른 서버에 database를 두는 것처럼 사용할 수 있다.<br/>\n그럼 이제 로컬에서 간단하게 js 혹은 ts 코드로 mysql 라이브러리를 다운받아, 통신하듯이 사용할 수 있다.(위에 키워드 정리 중 MySQL 키워드의 예시처럼!)</p>\n<h3 id=\"bulk-insert\" style=\"position:relative;\"><a href=\"#bulk-insert\" aria-label=\"bulk insert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bulk Insert</h3>\n<ul>\n<li>db에 데이터를 insert할 때, insert 쿼리를 계속 날리면 쿼리 오픈과 클로즈에도 또 수많은 작업들이 발생한다.</li>\n<li>그래서 그런 과정을 좀 한번에 처리하고 우리가 원하는 아주 많은 데이터를 한번에 뙇 하고 넣는 게 Bulk Insert이다.</li>\n</ul>\n<p>예제) 아래와 같은 느낌으로 전달한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 이 때, `dataGenerator.allData`의 타입은 {nickname: string, money: number, last_visit: Date}[] 형태이다.</span>\n<span class=\"token comment\">// 해서 map으로 각 요소들을 배열 형태로 만들어주고 그 요소들을 또 한번 배열에 감싸서 전달해야한다.</span>\nconnection<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'INSERT INTO user_log (nickname, money, last_visit) VALUES ?'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n      dataGenerator<span class=\"token punctuation\">.</span>allData<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        item<span class=\"token punctuation\">.</span>nickname<span class=\"token punctuation\">,</span>\n        item<span class=\"token punctuation\">.</span>money<span class=\"token punctuation\">,</span>\n        item<span class=\"token punctuation\">.</span>last_visit<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>err<span class=\"token operator\">:</span> QueryError<span class=\"token punctuation\">,</span> results<span class=\"token operator\">:</span> RowDataPacket<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'완료되었습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 때, 한번에 너무 많은 데이터를 INSERT하게 되면 에러가 발생한다.</p>\n<blockquote>\n<p><code class=\"language-text\">SQL 오류(1153): Got a packet bigger than 'max_allowed_packet' bytes</code></p>\n</blockquote>\n<p>이를 해결하기 위해, mysql의 전송 packet 용량을 늘려주는 쿼리를 쓴다.(기본적으로 4MB)</p>\n<div class=\"gatsby-highlight\" data-language=\"db\"><pre class=\"language-db\"><code class=\"language-db\">SET GLOBAL max_allowed_packet=1000000000;\nSET GLOBAL net_buffer_length=1000000;</code></pre></div>\n<p>또한, INSERT 시 발생하는 transaction(트랜잭션)을 생략하기 위해 아래의 쿼리를 실행한다.(그러면 데이터 추가 속도가 빨라진다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"db\"><pre class=\"language-db\"><code class=\"language-db\">SET autocommit = 1;</code></pre></div>\n<p>말그대로 INSERT 시에도 commit(데이터베이스에 방금 한 쿼리를 반영하겠다는 뜻)를 자동으로 해준다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"http://www.tcpschool.com/mysql/mysql_intro_intro\">TCP School - MySQL 소개</a></li>\n<li><a href=\"https://hongong.hanbit.co.kr/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-databasedb-dbms-sql%EC%9D%98-%EA%B0%9C%EB%85%90/\">DB, DBMS, SQL 개념</a></li>\n<li><a href=\"https://developerbee.tistory.com/236\">MySQL, 도커로 띄우기</a></li>\n<li><a href=\"http://www.tcpschool.com/mysql/mysql_basic_create\">TCP School - MySQL 쿼리들</a></li>\n<li><a href=\"https://asufi.tistory.com/entry/SQL-%EC%98%A4%EB%A5%981153-Got-a-packet-bigger-than-maxallowedpacket-bytes\">mysql 최대 용량 에러 해결</a></li>\n</ul>\n<h2 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h2>\n<p>오늘은 정말 다양한 에러를 만났다. bulk insert 중 mysql 패킷 제한 오류, primary key 중복 오류 이외에도 잡다한 docker 환경변수 설정 오류까지…<br/>\n그래도 확실히 오류가 나니까 구글링하기도 좋고 해결하기 너무 좋다. 보자마자 스트레스 받긴 하지만 해결하고보면 이정표같은 고마운 역할을 한다. 제품 개발 시에\n테스트 코드를 왜 작성하고 왜 error, 예외 처리를 하는지 알 것 같다.</p>\n<h2 id=\"오늘의-잘한-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\" aria-label=\"오늘의 잘한 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 잘한 점</h2>\n<ul>\n<li>미션 구현 완료 및 개념 정리 정말 열심히 함!!!</li>\n</ul>\n<h2 id=\"오늘의-아쉬운-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\" aria-label=\"오늘의 아쉬운 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 아쉬운 점</h2>\n<ul>\n<li>(추가 미션) data insert하는 과정을 시각적으로 progress bar 만드는 부분…</li>\n<li>뭔가 비동기적으로 insert할 때마다 console.log로 점점 길어지게 만들어주면 될 것 같다.(그렇게 어렵진 않을지도..?)</li>\n<li>근데 아마 내 코드는 bulk insert에서 bulk 단위를 커스텀하게 나누지 않아서, 이 부분을 분할하고</li>\n<li>계속 SELECT COUNT(*) 로 갯수 가져오면서 전체 데이터 수에 대비해 %로 log를 찍는 방식으로 해야할듯하다.</li>\n<li>아! 추가로 TypeORM을 써보고 싶었는데, 다음에 써보기로 한 점… 아쉽다! 뭔가 쿼리문을 ts 객체로 편하게 작성할 수 있게 해주는 거 같은데..!</li>\n<li>다음에 꼭 써봐야지</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\">🎄 성장일지 3.1</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 키워드</a></p>\n<ul>\n<li><a href=\"#%EB%8F%84%EC%BB%A4%EB%A1%9C-mysql-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%9D%84%EC%9A%B0%EA%B3%A0-ts%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%97%B0%EA%B2%B0%ED%95%98%EB%8A%94-%EA%B3%BC%EC%A0%95-%EB%B3%B5%EA%B8%B0\">도커로 mysql 컨테이너 띄우고 ts로 간단하게 연결하는 과정 복기</a></li>\n<li><a href=\"#bulk-insert\">Bulk Insert</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\">오늘의 잘한 점</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\">오늘의 아쉬운 점</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 21, 2023","title":"230221(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/2/21-gl/"}},"prev":{"id":"79bf0184-f00e-5913-a319-e6ce60a4fb1a","html":"<h1 id=\"-보름칼럼\" style=\"position:relative;\"><a href=\"#-%EB%B3%B4%EB%A6%84%EC%B9%BC%EB%9F%BC\" aria-label=\" 보름칼럼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌕 보름칼럼</h1>\n<p>단순 기록보단 좀 더 양질의, 정리된 글을 쓰고자 시작하는 <code class=\"language-text\">보름칼럼</code><br/>\n부담없이 매 보름 하나의 주제를 깊게 들여다볼 수 있는 기회가 되었으면 좋겠다.<br/>\n가수 윤종신님이 월간 윤종신을 통해 꾸준히 음악을 내시는 것과 같이 보름칼럼을 적어보자!</p>\n<blockquote>\n<p>보름칼럼 규칙</p>\n<ol>\n<li>매일을 기록하는 성장일지보다 좀더 깊은 내용의 글을 작성할 수 있도록 하자.</li>\n<li>너무 욕심부리지말고 하나의 주제(키워드)에 집중한다.</li>\n<li>2주에 한 번 다듬어진 칼럼 형태의 글을 작성한다.</li>\n<li>마감은 매주 일요일을 기준으로 한다.</li>\n</ol>\n</blockquote>\n<h2 id=\"-글또-8기\" style=\"position:relative;\"><a href=\"#-%EA%B8%80%EB%98%90-8%EA%B8%B0\" aria-label=\" 글또 8기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📃 글또 8기</h2>\n<p>개발자들이 모여 함께 글을 쓰고 피드백하는 커뮤니티인 <a href=\"https://www.notion.so/zzsza/ac5b18a482fb4df497d4e8257ad4d516\">글또(글쓰는 또라이가 세상을 바꾼다.)</a>에서\n활동하게 되어 보름칼럼의 규칙은 글또의 규칙을 따르기로 한다.<br/>\n2주마다 글을 작성하는 규칙은 동일하며, 그 마감 날짜는 아래와 같다. 마감 날짜를 체크하며 매번 글 작성에 대해 인지하도록 하자!<br/></p>\n<h2 id=\"-들어가기에-앞서\" style=\"position:relative;\"><a href=\"#-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\" 들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚈 들어가기에 앞서…</h2>\n<ul>\n<li><a href=\"https://jaydenlee1116.github.io/steadily/full-moon-column/2-object-oriented-in-js-1-object/\">JS로 보는 객체지향 - 1.객체편</a></li>\n<li><a href=\"https://jaydenlee1116.github.io/steadily/full-moon-column/3-object-oriented-in-js-2-inheritance-composition/\">JS로 보는 객체지향 - 2.상속합성편</a></li>\n</ul>\n<p>처음 프로그래밍을 배우고 가장 이해가 안되고 공감되지 않았던 개발자분들의 말이 있었다. <code class=\"language-text\">어떤 실체화된 현실 세계의 것을 코드로 구현하고 현실의 문제를 해결하는 게 개발자다.</code>와 같은 말들이었다.\n당장 화면에 <code class=\"language-text\">Hello, Wolrd!</code>를 찍어내고, 몇몇 계산을 편하게 하는 정도의 나에겐 전혀 공감이 되질 않았다. 이후 공부를 하며 그 말을 따라가다보니 <code class=\"language-text\">객체지향</code>에 도달했다.<br/>\n처음 책 <code class=\"language-text\">객체지향의 사실과 오해</code>를 읽었을 때, 읽다가 중간에 포기했었다. 너무 좋은 책이라고 이야기는 들었지만, 기본적인 객체에 대한 개념이 없는 상태에서\n읽었기 때문이다. 내용이 너무 추상적으로 다가왔고 읽을수록 더 헷갈리는 느낌이었다. 그렇게 시간이 조금 더 흐르고 어느정도 절차지향에서 함수, 모듈을 나누고 클래스를\n사용하기 시작하면서 다시 이 책을 펼쳐들었다. 그리고 이 책은 짧은 개발자로서의 인생에서 내 최애 서적이 되었다. 정말 정말 재미있게 마치 빨려들어가듯이 읽었고 다 읽고 난 뒤,\n정말 현실에 있는 모든 걸 다 코드로 구현할 수 있을 것만 같았다.(물론 실제로 그렇진 않다. 🤪)<br/>\n처음 <code class=\"language-text\">객체</code>라는 개념으로 코드를 작성했던 기쁨을 기억하고 동시에 이제 처음 <code class=\"language-text\">객체지향</code>에 궁금증이 생기신 분들이 쉽게 그 느낌(?)을 받으셨으면 하는 마음으로 이 글을 작성한다.</p>\n<h2 id=\"-사전적-객체지향-프로그래밍\" style=\"position:relative;\"><a href=\"#-%EC%82%AC%EC%A0%84%EC%A0%81-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\" 사전적 객체지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐜 사전적 객체지향 프로그래밍</h2>\n<p><code class=\"language-text\">객체지향 프로그래밍</code>이란 뭘까? 먼저 단어를 분리해보자. <code class=\"language-text\">객체</code>와 <code class=\"language-text\">지향</code> 그리고 <code class=\"language-text\">프로그래밍</code>. 사전에서 이 3가지 단어의 정의를 찾아보면 아래와 같다.</p>\n<ul>\n<li>객체: (명사) 행위가 미치는 대상</li>\n<li>지향: (명사) 어떤 목표로 뜻이 쏠리어 향함</li>\n<li>프로그래밍: (명사) 컴퓨터 프로그램을 작성하는 일. 프로그램 작성 방법 및 코딩 등 일련의 작업을 아우른다.</li>\n</ul>\n<p>단순하게 사전적 의미이다보니 아주 직관적으로 와닿지는 않는다. 다만, 대략적으로 <code class=\"language-text\">어떤 대상이라는 것을 목표로 하며 코딩하는 것</code> 정도로 정리해볼 수 있다. 조금더 나아가서\n<code class=\"language-text\">무언가 각각의 역할을 하는 대상들로 나누는 것을 목표로 코드를 작성하는 방법</code>이라고도 생각해볼 수 있을 것이다. 사전적으로 최대한 유추해보는 것은 여기까지가 한계인 것 같다.\n그렇다면 컴퓨터공학적으로(?) 객체지향이라는 것은 무엇일까?</p>\n<h2 id=\"-컴퓨터공학적-객체지향-프로그래밍\" style=\"position:relative;\"><a href=\"#-%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B3%B5%ED%95%99%EC%A0%81-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\" 컴퓨터공학적 객체지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐜 컴퓨터공학적(?) 객체지향 프로그래밍</h2>\n<p>일단 잘모르겠으니 위키백과에서의 설명을 찾아보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">객체지향 프로그래밍(Object-Oriented Programming, OOP)은 컴퓨터 프로그래밍의 패러다임 중 하나이다.\n객체지향 프로그래밍은 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러 개의 독립된 단위, 즉 \"객체\"들의 모임으로 파악하고자 하는 것이다.\n각각의 객체는 메시지를 주고받고, 데이터를 처리할 수 있다.\n객체지향 프로그래밍은 프로그램을 유연하고 변경이 쉽게 만들기 때문에 대규모 소프트웨어 개발에 많이 사용된다.\n또한 프로그래밍을 더 배우기 쉽게 하고 소프트웨어 개발과 보수를 간편하게 하며, 보다 직관적인 코드 분석을 가능하게 하는 장점이 있다.\n그러나 지나친 프로그램의 객체화 경향은 실제 세계의 모습을 그대로 반영하지 못한다는 비판을 받기도 한다.</code></pre></div>\n<p>위의 내용을 조금 쉽고 간단하게 정리해보자.</p>\n<blockquote>\n<p>객체지향 프로그래밍은 프로그래밍을 하는 하나의 방법이다.<br/>\n한 줄 한 줄 명령어를 작성하는 것이 아닌, “객체”라는 하나의 단위이자 덩어리로 나눈다.<br/>\n이 단위들은 서로 영향을 주고 받을 수 있으며 데이터를 처리할 수 있다.<br/>\n코드 변경(수정)이 쉽기 때문에 큰 프로그램을 개발할 때 많이 사용한다.<br/>\n프로그래밍을 더 배우기 쉽게 하고 유지보수를 간편하게 하며, 좀더 직관적으로 코드를 분석할 수 있게 해준다.<br/>\n하지만 너무 지나치게 객체를 나누는 것은 실제 세계의 모습을 그대로 반영하지 못한다.</p>\n</blockquote>\n<p>위의 문장이 객체지향을 전부 설명해주지는 못한다. 다만, 아주 대략적으로라도 그 느낌은 뭔지 알 것 같다. 뭔가 코드를 하나하나 명령 내리듯이 짜는 게 아니라, 하나의 객체라는\n덩어리로 나눠서 작성하는 느낌 정도로만 이해하면 된다. 그렇다면 코드로 아주 간단하게 작성해보면 어떨까?</p>\n<h2 id=\"-javascript-코드로-보는-객체지향-프로그래밍\" style=\"position:relative;\"><a href=\"#-javascript-%EC%BD%94%EB%93%9C%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\" javascript 코드로 보는 객체지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐜 JavaScript 코드로 보는 객체지향 프로그래밍</h2>\n<p>먼저 <code class=\"language-text\">개미(ant)</code>를 코드로 구현해보고 싶다고 해보자. 시작은 정말 단순하게 해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> ant<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이게 뭐지..? 할 수 있지만, 말 그대로 ant를 구현했다. 그렇지만 현재 ant라는 변수는 어떠한 유의미한 값을 갖고 있지 않다. 천천히 이 ant에게 생기를 불어넣어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> ant <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'ant1'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제는 어떤가? ant를 name, age를 프로퍼티(속성)로 갖는 object로 표현함으로써 개미가 이름과 나이를 갖게 됐다.<br/>\n헌데 여기서 또 욕심이 난다. 지금 이 개미는 정적인 상태(프로퍼티)만 갖고 있을 뿐 뭔가 어떤 동적인 행동(메서드)을 갖고 있지 않다.<br/>\n좀더 살아있는(?) 개미를 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> ant <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'ant1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant is moving!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ant의 메서드로 move를 작성해줌으로써 ant가 마치 움직이는 듯한 동작을 할 수 있게 됐다. 다만, 여기서 move 메서드는 단순히 ‘ant is moving!’이라는 문자열만 console에 출력해주는 역할을 한다.\n즉, 개미의 move 행동이 개미 스스로에게 어떠한 영향도 주지 않는다.(개미의 상태가 변하지 않는다.) 일단 이 점은 넘어가고 개미를 좀더 동적인 어떤 무언가(객체)로 만들었음을 기억하자.<br/></p>\n<p>자, 그럼 이제 또다른 욕심이 스물스물 생긴다. 세상에 개미는 단 1마리만 존재하지 않는다.(추정상 지구에 개미는 약 2경 마리 서식한다고 한다. ㅎㄷㄷ) 그런데 우리가 구현한 코드로는 개미를 하나 하나\n작성하며 생성해야한다. 여간 번거로운 일이 아닐 수 없다. 이제 여기서 생성자 함수가 등장할 수 있지만, 객체를 구현하는 대표적인 방법인 class를 써보려고 한다.</p>\n<blockquote>\n<p>자바스크립트의 class는 2015년 ES6에서 도입되었다. 그 내부의 구현이 결국엔 자바스크립트의 prototype을 기반으로 하기에 비꼬는 이야기를 많이 듣는다.(찐 class로 인정할 수 없다는 뭐 그런 이야기…)</p>\n</blockquote>\n<p>거두절미하고 class를 이용해서 ant를 표현해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 보통 class는 첫글자를 대문자로 쓴다.</span>\n<span class=\"token comment\">// (소문자로 쓴다고 뭐 큰일나는건 아니지만, 하나의 약속이라 생각하자.)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Ant</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant is moving!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ant1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ant2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ant3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant3'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>짠! 이제 우리는 Ant라는 class를 선언해줌으로써, 정말 간단하게 여러마리의 ant를 구현할 수 있게 되었다. 개미들은 각자의 name이 있고, age가 있으며 move 메서드를 통해 움직일 수 있다.<br/>\n여기서 잠깐 쉬어가기 위해 위의 코드를 살펴보자.</p>\n<ul>\n<li>Ant class가 갖는 name과 age, 즉 프로퍼티는 개미의 <code class=\"language-text\">상태</code>를 나타내며 instance 생성 시, 우리가 원하는 값(이름, 나이)을 전달해줄 수 있다.</li>\n<li>Ant class가 갖는 move는 메서드, 즉 개미의 <code class=\"language-text\">행동(동작)</code>을 나타내며 instance 생성 시, 모든 개미 instance는 move를 갖고 있다.</li>\n</ul>\n<p>다시 말해서 우리는 <code class=\"language-text\">개미</code>라는 곤충을 표현할 수 있는 어떤 추상적인 개념의 class를 만들고 이 class를 통해서 실체화된 하나 하나의 개미를 만들어낼 수 있는 것이다.<br/>\n여기서 한가지 실제 우리가 살아가는 세상에서의 개념과 차이를 생각해보자. 우리가 아직 <code class=\"language-text\">개미</code>라는 단어가 존재하지 않았던 시절, 우리는 주위에 돌아다니는 실제 검고 3등신의 다리가 달린 아주 작은 곤충들(현재의\n우리가 개미라고 부르는)을 보면서 “이런 애들을 개미라고 부르자”했을 것이다. 하지만 객체지향 프로그래밍에서는 이 접근이 반대라고 생각하면 된다. 먼저 우리가 큰 개념인 Ant class 라는 개념을 만들어두고\n그 class에서 실체화된 하나하나의 개미들을 만들어내는 것이다. 이런 관점으로 생각하면 조금은 객체지향으로 무언가를 만들어내는 행위가 이해될 것이다.<br/></p>\n<p>그럼 이제 아까 언급했던 어딘가 아쉬운 move 메서드를 좀더 현실과 맞게 바꿔보자. 우선, 이를 위해 개미의 초기 위치를 받고 move할 때마다 그 위치에서 랜덤으로 +1 혹은 -1만큼 이동하게 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ant</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> position</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 개미의 위치는 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>position<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 지점 입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ant1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ant2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ant3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ant3'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자, 이제 move라는 메서드(행동)를 통해 각각의 개미 객체의 position 프로퍼티(상태)를 변경하면서, 마치 실제 개미가 이리저리 움직이는 걸 표현할 수 있다. 아주 간단한 예시지만, 처음 만들었던 어떤 값도\n들어있지 않은(물론 undefined로 초기화되겠지만) ant 변수에 비하면 많은 걸 할 수 있는 개미가 만들어졌다.</p>\n<h2 id=\"-글을-마치며\" style=\"position:relative;\"><a href=\"#-%EA%B8%80%EC%9D%84-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\" 글을 마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚉 글을 마치며…</h2>\n<p>요즘 정말 정말 글을 잘 쓰고 싶은 욕심이 많이 든다. 글 작성과 코드 작성은 언어만 다르지 그 행위 자체는 정말 똑같은 것 같다. 특히 요즘은 사람이 읽기 편한, 가동성 좋은 코드를\n많이 강조하는만큼 더 그런 것 같다. 조금 웃긴 건 코드를 최대한 분리하고 재활용 가능하게 하고 좀더 나은 문법을 체크하다보니 이상하게 글을 작성할 때도 그런 습관이 생긴다.\n어떻게 좀더 파트를 잘 나누고, 흐름을 잘 가져가면서 좀더 좋은 표현을 쓸까 생각하면서 써내려가게 된다. 아주 아주 좋은 시너지라고 생각한다. 🥳</br></p>\n<p>이번 글은 각각의 파트들을 개미 이모지로 표현해봤다. 개미 파트 하나하나가 모여서 이 글 전체를 완성해주는 것을 통해 객체지향에서 여러 객체들이 모여 큰 소프트웨어가 완성되는 느낌을\n표현해보고 싶었다.(잘 전달되었을지는 모르겠다.) 이렇듯 객체지향에선 객체들이 그들만의 <code class=\"language-text\">역할</code>과 <code class=\"language-text\">책임</code>을 갖고 서로를 도와가며(<code class=\"language-text\">협동</code>하며) 거대한 프로그램을 만들어간다. 이번 글을 통해\n<code class=\"language-text\">객체</code> 하나에 대해 집중했다면, 다음 편에선 각 객체들이 어떻게 서로 도와가며 좀더 스케일업된 무언가를 만들어가는지 살펴보려 한다.</p>\n<blockquote>\n<p>아직 많이 부족한 개발자입니다. 내용에 대한 오류가 있다면, 언제든 편하게 말씀해주세요! 감사합니다!</p>\n</blockquote>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎁 참고</h2>\n<ul>\n<li><a href=\"https://ko.dict.naver.com/#/main\">네이버 국어사전</a></li>\n<li><a href=\"https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">위키백과 - 객체지향 프로그래밍</a></li>\n<li><a href=\"https://product.kyobobook.co.kr/detail/S000001628109\">책 - 객체지향의 사실과 오해</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EA%B8%80%EB%98%90-8%EA%B8%B0\">📃 글또 8기</a></li>\n<li><a href=\"#-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\">🚈 들어가기에 앞서…</a></li>\n<li><a href=\"#-%EC%82%AC%EC%A0%84%EC%A0%81-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">🐜 사전적 객체지향 프로그래밍</a></li>\n<li><a href=\"#-%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B3%B5%ED%95%99%EC%A0%81-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">🐜 컴퓨터공학적(?) 객체지향 프로그래밍</a></li>\n<li><a href=\"#-javascript-%EC%BD%94%EB%93%9C%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">🐜 JavaScript 코드로 보는 객체지향 프로그래밍</a></li>\n<li><a href=\"#-%EA%B8%80%EC%9D%84-%EB%A7%88%EC%B9%98%EB%A9%B0\">🚉 글을 마치며…</a></li>\n<li><a href=\"#-%EC%B0%B8%EA%B3%A0\">🎁 참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 22, 2023","title":"JS로 보는 객체지향 - 1.객체편","categories":"보름칼럼","author":"제이든","emoji":"🌑"},"fields":{"slug":"/steadily/full-moon-column/2-object-oriented-in-js-1-object/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/newspaper/2023/2/22-np/","nextSlug":"/steadily/growth-diary/2023/2/21-gl/","prevSlug":"/steadily/full-moon-column/2-object-oriented-in-js-1-object/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}