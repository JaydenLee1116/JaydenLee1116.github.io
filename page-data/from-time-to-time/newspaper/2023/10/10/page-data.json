{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/newspaper/2023/10/10/","result":{"data":{"cur":{"id":"4f0e42c3-9836-5dab-a26b-3e6e5de33526","html":"<h2 id=\"️-신문스크랩-21\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\" aria-label=\"️ 신문스크랩 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞️ 신문스크랩 2.1</h2>\n<p>기존 티스토리 블로그에서 매일 작성하던 신문 스크랩을 다시 시작하기로 했다.<br/>\n개발자는 문제를 해결하는 사람이다. 그러니 항상 세상에서 일어나는 일(문제)에 관심을 가져야 한다.<br/>\n인상깊은 기사의 헤드라인을 적고 모르는 단어에 대한 정리, 그리고 내 생각을 간단하게 덧붙이는 것으로 가볍게 시작해보자.<br/>\n(v2.1 추가) 기사의 핵심 키워드를 추가해보자.</p>\n<h2 id=\"-주요-기사\" style=\"position:relative;\"><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\" aria-label=\" 주요 기사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌻 주요 기사</h2>\n<p><code class=\"language-text\">피의 지상전 일촉즉발... 국제유가 급등</code></p>\n<ul>\n<li>50년 만에 <code class=\"language-text\">신중동전쟁</code>이 벌어질 위기</li>\n<li>이스라엘에 선 미국, 팔레스타인에 선 이란 둘의 대리전으로 흘러갈 수도…</li>\n<li>글로벌 금융 시장 - 주요 원유 산지 중동에 지정학적 리스크가 불거지자 유가 급등</li>\n</ul>\n<h3 id=\"-키워드\" style=\"position:relative;\"><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞 키워드</h3>\n<ul>\n<li>국제 정세, 전쟁, 유가</li>\n</ul>\n<h3 id=\"-단어-정리\" style=\"position:relative;\"><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\" 단어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔤 단어 정리</h3>\n<ul>\n<li>Proxy War: 대리전. 두 단체가 충돌했을 때, 이 두 단체를 지원하는 더 큰 규모의 단체의 충돌로 이어지는 경우</li>\n</ul>\n<h3 id=\"-내-생각\" style=\"position:relative;\"><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\" aria-label=\" 내 생각 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 내 생각</h3>\n<p>팔레스타인 하마스의 선제공격으로 700여 명의 사망자, 이에 대한 이스라엘의 보복으로 400여 명의 사망자가 발생했다고 한다. 전쟁이라는 건 항상 그렇다. 국가, 이념, 인종, 종교 등등 상대적으로 거대한 개념이 충돌하면서 발생한다. 그런데 그 충돌의 여파를 지독하게 짊어져야하는 건 앞의 것들보다 훨씬 작은 개인이다. 그 거대한 흐름에 직접적으로 뛰어든 사람이 아니어도 정말 수많은 사람들이 전쟁으로 인해 삶을 잃고 남은 자들은 그 아픔을 끌어안고 살게 된다.</p>\n<p>세상에 이로운 서비스를 개발하고 다양한 문제를 해결할 수 있는 개발자가 되기로 마음 먹은 뒤로 신문을 볼 때 <code class=\"language-text\">해결할 수 있는 문제가 있을까?</code> 생각하며 읽는 편이다. 하지만 앞선 문제는 뭐랄까… <code class=\"language-text\">이런 거대하고, 근본적이고 파괴적인 문제도 해결할 수가 있을까..?</code> 하는 생각이 든다. 감히 개발이라는 도구로서 저 참혹한 문제를 해결하겠다는 오만한 생각이 아니다. 그저 개발자로서 세상에 이로운 변화를 가져오고 싶다는 마음에서 나온 생각이다. 부디 얼른 전쟁이 끝나고 무고한 사람들이 편안한 삶을 살 수 있기를 바란다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\">🗞️ 신문스크랩 2.1</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\">🌻 주요 기사</a></p>\n<ul>\n<li><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\">🗞 키워드</a></li>\n<li><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\">🔤 단어 정리</a></li>\n<li><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\">🤔 내 생각</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🗞️ 신문스크랩 2.1 기존 티스토리 블로그에서 매일 작성하던 신문 스크랩을 다시 시작하기로 했다.\n개발자는 문제를 해결하는 사람이다. 그러니 항상 세상에서 일어나는 일(문제)에 관심을 가져야 한다.\n인상깊은 기사의 헤드라인을 적고 모르는 단어에 대한 정리, 그리고 내 생각을 간단하게 덧붙이는 것으로 가볍게 시작해보자.\n(v2.1 추가) 기사의 핵심 키워드를 추가해보자. 🌻 주요 기사  50년 만에 이 벌어질 위기 이스라엘에 선 미국, 팔레스타인에 선 이란 둘의 대리전으로 흘러갈 수도… 글로벌 금융 시장 - 주요 원유 산지 중동에 지정학적 리스크가 불거지자 유가 급등 🗞 키워드 국제 정세, 전쟁, 유가 🔤 단어 정리 Proxy War: 대리전. 두 단체가 충돌했을 때, 이 두 단체를 지원하는 더 큰 규모의 단체의 충돌로 이어지는 경우 🤔 내 생각 팔레스타인 하마스의 선제공격으로 700여 명의 사망자, 이에 대한 이스라엘의 보복으로 400여 명의 사망자가 발생했다고 한다. 전쟁이라는 …","frontmatter":{"date":"October 10, 2023","title":"이스라엘과 팔레스타인","categories":"신문스크랩","author":"제이든","emoji":"📰"},"fields":{"slug":"/from-time-to-time/newspaper/2023/10/10/"}},"next":{"id":"6b0d5511-f733-5982-8552-5e1aeeecda72","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"next-컴포넌트-구성하기\" style=\"position:relative;\"><a href=\"#next-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"next 컴포넌트 구성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>next 컴포넌트 구성하기</h2>\n<p>어느정도 프로젝트 시작 전 여러 세팅은 마무리하고 컴포넌트 구성을 하려니 생각보다 많은 고민이 필요했다. 13버전부터는 컴포넌트 별로 클라이언트, 서버 컴포넌트를 분리해서 사용할 수 있게 되었다. 그래서 컴포넌트를 구성할 때 어떤 컴포넌트를 사용할지 고민이 필요했다. 기본적으로는 최대한 SSG로 구성하고 그 뒤에 유저와의 인터렉션이 있는 경우에는 클라이언트 컴포넌트, 데이터가 자주 변경되는 경우에는 SSR로 구성하기로 했다. 물론 그럼에도 헷갈리는 부분들이 존재하기는 한다. 예를 들어, 서버에게 이미지들을 가져와서 그 이미지를 나열하고 그 이미지를 유저가 선택해서 어떤 UI 변경을 준다고 해보자. 이 경우에는 이미지들을 가져오는 부분은 서버 컴포넌트로 두고, 유저가 선택하는 부분은 클라이언트 컴포넌트로 두는 것이 맞는 것 같다.(아직 이 부분은 제대로 구현해보지 않아서 확실하지는 않다. 해봐야알듯..!)</p>\n<h2 id=\"next-유저의-브라우저-설정에-따라-다크모드-적용하기\" style=\"position:relative;\"><a href=\"#next-%EC%9C%A0%EC%A0%80%EC%9D%98-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%84%A4%EC%A0%95%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"next 유저의 브라우저 설정에 따라 다크모드 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>next 유저의 브라우저 설정에 따라 다크모드 적용하기</h2>\n<p>현재 다크모드 유무와 다크/라이트를 변경하는 토글함수를 context API로 관리하고 있다. 코드는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token string\">'use client'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createContext<span class=\"token punctuation\">,</span> useContext<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ThemeContext <span class=\"token operator\">=</span> <span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> ToggleThemeContext <span class=\"token operator\">=</span> <span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Forgot to wrap component in `ThemeProvider`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useToggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ToggleThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Props</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ThemeProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// NOTE: 현재 유저 브라우저 설정 테마를 가져온다.</span>\n  <span class=\"token keyword\">const</span> isBrowser <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> initialTheme <span class=\"token operator\">=</span>\n    isBrowser <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span>matchMedia <span class=\"token operator\">&amp;&amp;</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches\n      <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span>\n      <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleTheme</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ToggleThemeContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>toggleTheme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ToggleThemeContext.Provider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그런데 문제는 클라이언트 컴포넌트여도 서버에서 프리렌더링을 하기 때문에 그 때는 <code class=\"language-text\">window</code> 객체가 undefined인 문제가 발생했다. 그러던 중 next.js에서 제공하는 <code class=\"language-text\">dynamic</code>을 이용하면 해결할 수 있다는 것을 알게 되었다. 아래와 같이 사용하면 된다. 위의 코드에서 <code class=\"language-text\">ThemeProvider</code>를 import할 때 <code class=\"language-text\">dynamic</code>으로 감싸주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> dynamic <span class=\"token keyword\">from</span> <span class=\"token string\">'next/dynamic'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ThemeProvider <span class=\"token operator\">=</span> <span class=\"token function\">dynamic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'components/ThemeProvider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> ssr<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 되면 서버에서 프리렌더링이 되지 않고 클라이언트에서만 렌더링이 되기 때문에 <code class=\"language-text\">window</code> 객체가 undefined가 되지 않는다.</p>\n<h3 id=\"그런데-또다른-문제-발생\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%B0%EB%8D%B0-%EB%98%90%EB%8B%A4%EB%A5%B8-%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D\" aria-label=\"그런데 또다른 문제 발생 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그런데… 또다른 문제 발생</h3>\n<p>처음엔 해결한 줄 알았다. 하… 그런데 문제는 어플리케이션 가장 상위에 <code class=\"language-text\">ThemeProvider</code>를 감싸두었기 때문에, 그 하위 모든 컴포넌트가 <code class=\"language-text\">dynamic</code>으로 인한 <code class=\"language-text\">lazy loading</code> 처리가 되어버린다는 것이다. 즉, 웹 페이지 처음 접속 시 네트워크 탭에서 첫번째 html을 <code class=\"language-text\">Preview</code>로 보아도 그냥 빈 화면만 보인다. 이러면 Next에서의 SSR(혹은 SSG)의 의미가 사라져버린다…ㅠ 후… useEffect를 사용해봤지만, 그러면 처음에 바로 라이트 모드로 렌더링되었다가 그 이후에 다크 모드로 변경된다. 일단은 initialTheme을 <code class=\"language-text\">light</code>로 고정해두고, 나중에 다시 고민해봐야겠다.(애초에 서버 렌더링에서 유저의 설정을 알고 렌더링하는 방법이 말이 되나 싶기도 하다.)</p>\n<h2 id=\"react-icon-with-tailwind\" style=\"position:relative;\"><a href=\"#react-icon-with-tailwind\" aria-label=\"react icon with tailwind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>react icon with tailwind</h2>\n<p>정말 별 거 아니지만, react icon의 className에 tailwindcss가 적용된다는 사실…!!!!!\n심지어 <code class=\"language-text\">text-</code> prefix를 붙이면 icon의 content의 색생이 변경되고 <code class=\"language-text\">bg-</code> prefix를 붙이면 icon의 배경색이 변경된다. 사실 아이콘들 하나하나 찾아가면서 쓰는게 너무 불편하다고 투덜거렸는데 이건 쫌 인정</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>생각보다 빠르진 않지만 생각보다 재미있넹</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://tailwindcss.com/docs/theme\">Tailwind theme 파트</a></li>\n<li><a href=\"https://nextjs.org/docs/app/building-your-application/optimizing/lazy-loading#nextdynamic\">Next dynamic 파트</a></li>\n<li><a href=\"https://react-icons.github.io/react-icons\">react-icons</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#next-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0\">next 컴포넌트 구성하기</a></p>\n</li>\n<li>\n<p><a href=\"#next-%EC%9C%A0%EC%A0%80%EC%9D%98-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%84%A4%EC%A0%95%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">next 유저의 브라우저 설정에 따라 다크모드 적용하기</a></p>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%9F%B0%EB%8D%B0-%EB%98%90%EB%8B%A4%EB%A5%B8-%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D\">그런데… 또다른 문제 발생</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#react-icon-with-tailwind\">react icon with tailwind</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"October 09, 2023","title":"231009(월) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/9/"}},"prev":{"id":"e6d00945-f1c1-591c-bf5b-736002afa887","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"swiper-사용-후기\" style=\"position:relative;\"><a href=\"#swiper-%EC%82%AC%EC%9A%A9-%ED%9B%84%EA%B8%B0\" aria-label=\"swiper 사용 후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swiper 사용 후기</h2>\n<p>기존 react로 프로젝트를 할 때는 열심히 적용해보려다가 계속 ui가 깨져서 포기하고 직접 Carousel 컴포넌트를 구현했다. 직접 구현한 것까진 좋은데, 아무래도 touch slide나 확장성면에서 완성도가 많이 떨어졌다.(조금만 건드려도 부서질 것만 같은 컴포넌트…) 그래서 이번엔 다시 각잡고!!! swiper를 열심히 뜯어보면서 적용해보았다. 하… 이렇게 편하고 쉬운 건 줄 알았더라면… 허허</p>\n<p>우선 swiper에서는 다양한 기능을 가진 module들을 지원하고 있다. 아래와 같이 사용하면 된다.</p>\n<p>추가 1) 보통 slide가 변경될 때마다 콜백을 실행하려고 <code class=\"language-text\">onSlideChange</code>를 사용했는데, 이건 slide가 변경될 때마다 실행되는 것이 아니라 유저가 slide를 변경하고 마우스를 떼는 순간에만 실행된다. 그래서 <code class=\"language-text\">onRealIndexChange</code>를 사용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 생략</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Swiper</span></span>\n  <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>h-full w-full<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">modules</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>Autoplay<span class=\"token punctuation\">,</span> A11y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">autoplay</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> delay<span class=\"token operator\">:</span> <span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DELAY</span><span class=\"token punctuation\">,</span> disableOnInteraction<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">spaceBetween</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>bodyWidth <span class=\"token operator\">&lt;</span> <span class=\"token number\">390</span> <span class=\"token operator\">?</span> bodyWidth <span class=\"token operator\">:</span> <span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SPACE_BETWEEN</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">slidesPerView</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SLIDES_PER_VIEW</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loop</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loopedSlides</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LOOPED_SLIDES</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">onRealIndexChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>swiper <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCurrentSlideIndex</span><span class=\"token punctuation\">(</span>swiper<span class=\"token punctuation\">.</span>realIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n// 생략</span></code></pre></div>\n<p>그리고 또 하나 기억하면 좋을 것! swiper 컴포넌트에 tailwindcss의 className으로 <code class=\"language-text\">display</code> 속성을 적용하는 건 되지 않는다. 아마 기본적인 설정 자체가 <code class=\"language-text\">block</code>으로 되어있는 것 같다. 그래서 <code class=\"language-text\">display</code> 속성을 적용하고 싶다면 <code class=\"language-text\">style</code> 속성으로 직접 적용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SwiperSlide</span></span>\n  <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex h-full w-full items-center justify-center<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token comment\">// NOTE: Swiper 컴포넌트의 display는 테일윈드 클래스를 적용할 수 없다.</span>\n  <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> <span class=\"token string\">'flex'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentSlideIndex <span class=\"token operator\">!==</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clickedSlideIndex <span class=\"token operator\">!==</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setClickedSlideIndex</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setClickedSlideIndex</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n// 생략</span></code></pre></div>\n<h2 id=\"httpclient로-확장성-생각하기추후-의존성-주입도-고려해보기\" style=\"position:relative;\"><a href=\"#httpclient%EB%A1%9C-%ED%99%95%EC%9E%A5%EC%84%B1-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0%EC%B6%94%ED%9B%84-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%EB%8F%84-%EA%B3%A0%EB%A0%A4%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"httpclient로 확장성 생각하기추후 의존성 주입도 고려해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>httpClient로 확장성 생각하기(추후 의존성 주입도 고려해보기)</h2>\n<p>아래와 같이 api 통신하는 로직을 관리하면 더 깔끔하게 추상화가 될뿐만 아니라 나중에 다른 의존성을 주입받아 사용하기 좋아진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> baseUrl<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">=</span> baseUrl<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>options<span class=\"token punctuation\">,</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>아래는 위의 HttpClient 클래스를 사용하는 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../http'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getRecommendations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEXT_PUBLIC_BASE_API_URL</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'존재하지 않는 환경변수입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> httpClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEXT_PUBLIC_BASE_API_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/recommendations'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"고민-여러-기기에-대응하기\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EB%AF%BC-%EC%97%AC%EB%9F%AC-%EA%B8%B0%EA%B8%B0%EC%97%90-%EB%8C%80%EC%9D%91%ED%95%98%EA%B8%B0\" aria-label=\"고민 여러 기기에 대응하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고민: 여러 기기에 대응하기</h2>\n<p>swiper를 통해 Carousel 컴포넌트를 구현하는데, 현재 slide의 양 옆 slide에 대한 style을 변경하는 작업을 했다. 그런데 다양한 화면크기에 따라 Carousel 컴포넌트의 ui를 세밀하게 조정하는 게 정말 어려웠다.(지금도 어느정도만 대응했지… 완벽하게는 못했다.) 기기마다 다른 화면에 대해서는 실제 현업에선 어떻게 대응할지 너무 알고싶다. 그저 media query를 사용하기에는 스마트폰의 화면이 너무 다양한데… 흠 계속 이 부분을 어떻게 효율적으로 처리할지 찾아봐야겠다.</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>사실 위의 내용말고도 Carousel에서 사용되는 image 크기 조절부터 짜잘한 tailwind 오류까지… 많았지만 이건 Carousel 컴포넌트를 정리할 때 한번에 작성해야겠다. 그나저나 오늘은 진짜 일찍 자려했는데… 얼른 자야지!!!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://swiperjs.com/react\">Swiper react</a></li>\n<li><a href=\"https://github.com/nolimits4web/swiper/issues/3344\">Multiple slideChange events triggered when looping</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#swiper-%EC%82%AC%EC%9A%A9-%ED%9B%84%EA%B8%B0\">Swiper 사용 후기</a></li>\n<li><a href=\"#httpclient%EB%A1%9C-%ED%99%95%EC%9E%A5%EC%84%B1-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0%EC%B6%94%ED%9B%84-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%EB%8F%84-%EA%B3%A0%EB%A0%A4%ED%95%B4%EB%B3%B4%EA%B8%B0\">httpClient로 확장성 생각하기(추후 의존성 주입도 고려해보기)</a></li>\n<li><a href=\"#%EA%B3%A0%EB%AF%BC-%EC%97%AC%EB%9F%AC-%EA%B8%B0%EA%B8%B0%EC%97%90-%EB%8C%80%EC%9D%91%ED%95%98%EA%B8%B0\">고민: 여러 기기에 대응하기</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 10, 2023","title":"231010(화) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/10/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/newspaper/2023/10/10/","nextSlug":"/steadily/growth-diary/2023/10/9/","prevSlug":"/steadily/growth-diary/2023/10/10/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}