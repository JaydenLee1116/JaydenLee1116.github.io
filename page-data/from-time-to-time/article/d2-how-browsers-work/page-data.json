{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/article/d2-how-browsers-work/","result":{"data":{"cur":{"id":"61898f88-051e-588d-bab0-dd92d88459ac","html":"<h2 id=\"-naver-d2의-code-classlanguage-text브라우저는-어떻게-동작하는가code\" style=\"position:relative;\"><a href=\"#-naver-d2%EC%9D%98-code-classlanguage-text%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EA%B0%80code\" aria-label=\" naver d2의 code classlanguage text브라우저는 어떻게 동작하는가code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📚 NAVER D2의 <code class=\"language-text\">브라우저는 어떻게 동작하는가?</code></h2>\n<p>이 글은 <a href=\"https://d2.naver.com/helloworld/59361\">브라우저는 어떻게 동작하는가?</a>를 한국어로 요약한 정리 글입니다. 공부 목적으로 요약한 주관적인 내용입니다. 😀</p>\n<h2 id=\"브라우저의-주요-기능\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5\" aria-label=\"브라우저의 주요 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저의 주요 기능</h2>\n<ul>\n<li>유저가 선택한 자원을 서버에 요청하고 브라우저에 표시하는 것</li>\n<li>자원은 보통 HTML 문서이고 떄로는 PDF, 이미지, 기타 등등일 수 있다.</li>\n<li>브라우저는 웹 표준화 기구인 W3C에서 정한 명세에 따라 HTML, CSS를 해석하여 표시한다.</li>\n</ul>\n<h2 id=\"브라우저의-기본-구조\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"브라우저의 기본 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저의 기본 구조</h2>\n<h2 id=\"브라우저의-주요-구성-요소\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"브라우저의 주요 구성 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저의 주요 구성 요소</h2>\n<ul>\n<li>\n<p>사용자 인터페이스(UI): 주소 표시줄, 이전/다음 버튼 등 요청 페이지를 보여주는 창을 제외한 나머지 부분</p>\n</li>\n<li>\n<p>브라우저 엔진: 사용자 인터페이스와 렌더링 엔진 사이 동작 제어</p>\n</li>\n<li>\n<p>렌더링 엔진: 요청한 콘텐츠를 표시.(HTML 요청시 HTML과 CSS를 파싱하여 화면에 표시)</p>\n</li>\n<li>\n<p>통신: HTTP 요청과 같은 네트워크 호출에 사용됨.</p>\n</li>\n<li>\n<p>UI 백엔드: select/input 등의 기본적인 위젯을 그린다. OS UI를 사용</p>\n</li>\n<li>\n<p>자바스크립트 해석기: 자바스크립트 코드를 해석/실행</p>\n</li>\n<li>\n<p>자료 저장소: 자료를 저장하는 계층.</p>\n</li>\n<li>\n<p>(추가) 크롬은 대부분의 브라우저와 달리 각 탭마다 별도의 렌더링 엔진 인스턴스를 유지한다. 즉, 각 탭은 독립된 프로세스로 처리된다.</p>\n</li>\n</ul>\n<h3 id=\"렌더링-엔진\" style=\"position:relative;\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%97%94%EC%A7%84\" aria-label=\"렌더링 엔진 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더링 엔진</h3>\n<ul>\n<li>\n<p>크롬의 경우는 웹킷(Webkit) 엔진을 사용한다.</p>\n<ul>\n<li>웹킷은 최초 리눅스 플랫폼에서 동작하기 위해 제작된 오픈소스 엔진이다.(사파리도 웹킷을 변형해서 사용한다.)</li>\n</ul>\n</li>\n<li>\n<p>동작 과정: <code class=\"language-text\">HTML 파싱</code> -> <code class=\"language-text\">렌더 트리 구축</code> -> <code class=\"language-text\">레이아웃</code> -> <code class=\"language-text\">페인트</code></p>\n<ul>\n<li>파싱을 통해 DOM 노드 트리로 변환한다. 다음 스타일 요소들도 CSSOM으로 변환한다. 이후 이 둘을 통해 <code class=\"language-text\">렌더 트리</code>를 생성한다.</li>\n<li>모든 과정들이 점진적으로 진행된다. 좀더 나은 UX를 위해서 가능하면 빠르게 표시하며 모든 HTML을 파싱할 때까지 기다리지 않고 배치와 그리기 과정을 시작한다.</li>\n<li>네트워크로부터 나머지 내용이 전송되기를 기다리는 동시에 받은 내용의 일부를 먼저 화면에 표시한다.</li>\n<li>크롬에서는 페인트 다음 각 레이어를 나눠서 합성하는 <code class=\"language-text\">합성(composite)</code> 단계가 있다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"파싱과-dom-트리-구축\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%8B%B1%EA%B3%BC-dom-%ED%8A%B8%EB%A6%AC-%EA%B5%AC%EC%B6%95\" aria-label=\"파싱과 dom 트리 구축 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파싱과 DOM 트리 구축</h4>\n<ul>\n<li>작성 예정</li>\n</ul>\n<h2 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h2>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://d2.naver.com/helloworld/59361\">NAVER D2 - 브라우저는 어떻게 동작하는가?</a></li>\n<li><a href=\"https://pks2974.medium.com/website%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B2%8C-%EB%90%A0%EA%B9%8C-f1193c844480\">website는 어떻게 보여주게 될까?</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-naver-d2%EC%9D%98-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EA%B0%80\">📚 NAVER D2의 <code class=\"language-text\">브라우저는 어떻게 동작하는가?</code></a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5\">브라우저의 주요 기능</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%A1%B0\">브라우저의 기본 구조</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\">브라우저의 주요 구성 요소</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%97%94%EC%A7%84\">렌더링 엔진</a></p>\n<ul>\n<li><a href=\"#%ED%8C%8C%EC%8B%B1%EA%B3%BC-dom-%ED%8A%B8%EB%A6%AC-%EA%B5%AC%EC%B6%95\">파싱과 DOM 트리 구축</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0\">회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","excerpt":"📚 NAVER D2의  이 글은 브라우저는 어떻게 동작하는가?를 한국어로 요약한 정리 글입니다. 공부 목적으로 요약한 주관적인 내용입니다. 😀 브라우저의 주요 기능 유저가 선택한 자원을 서버에 요청하고 브라우저에 표시하는 것 자원은 보통 HTML 문서이고 떄로는 PDF, 이미지, 기타 등등일 수 있다. 브라우저는 웹 표준화 기구인 W3C에서 정한 명세에 따라 HTML, CSS를 해석하여 표시한다. 브라우저의 기본 구조 브라우저의 주요 구성 요소 사용자 인터페이스(UI): 주소 표시줄, 이전/다음 버튼 등 요청 페이지를 보여주는 창을 제외한 나머지 부분 브라우저 엔진: 사용자 인터페이스와 렌더링 엔진 사이 동작 제어 렌더링 엔진: 요청한 콘텐츠를 표시.(HTML 요청시 HTML과 CSS를 파싱하여 화면에 표시) 통신: HTTP 요청과 같은 네트워크 호출에 사용됨. UI 백엔드: select/input 등의 기본적인 위젯을 그린다. OS UI를 사용 자바스크립트 해석기: 자바스크립트 …","frontmatter":{"date":"November 09, 2022","title":"How-Browsers-Work-D2","categories":"아티클","author":"제이든","emoji":"📖"},"fields":{"slug":"/from-time-to-time/article/d2-how-browsers-work/"}},"next":{"id":"09b55300-793b-58bf-bf34-79fde928d60b","html":"<h2 id=\"-taniarascia의-getting-started-with-react\" style=\"position:relative;\"><a href=\"#-taniarascia%EC%9D%98-getting-started-with-react\" aria-label=\" taniarascia의 getting started with react permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📚 Taniarascia의 getting-started-with-react</h2>\n<p>이 글은 <a href=\"https://www.taniarascia.com/getting-started-with-react/\">Taniarascia의 getting-started-with-react</a>를 한국어로 요약한 정리 글입니다. 공부 목적으로 요약한 주관적인 내용입니다. 😀</p>\n<h3 id=\"리액트란\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8%EB%9E%80\" aria-label=\"리액트란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트란?</h3>\n<ul>\n<li>리액트는 자바스크립트 라이브러리이다.(프레임워크가 아니다.)</li>\n<li>리액트는 페이스북(현 메타)에서 개발된 오픈소스 프로젝트이다.</li>\n<li>리엑트는 프론트엔드에서 User Interface(UI)를 제작하기위해 사용된다.</li>\n<li>리액트는 MVC(Model View Controller) 어플리케이션에서 View를 담당한다.</li>\n</ul>\n<blockquote>\n<p>리액트의 가장 중요한 측면은 당신이 당신만의, 재사용가능한 HTML 요소인 <code class=\"language-text\">컴포넌트</code>를 빠르고 효과적으로 만들 수 있다는 것이다. 또한 리액트는 <code class=\"language-text\">state</code>와 <code class=\"language-text\">props</code>를 사용하여 데이터의 저장과 조작을 유연하게 할 수 있다.</p>\n</blockquote>\n<h3 id=\"리액트-앱-만드는-방법\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%95%B1-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"리액트 앱 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 앱 만드는 방법</h3>\n<p>npm과 yarn 모두 리액트 어플리케이션 제작을 지원한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sudo\"><pre class=\"language-sudo\"><code class=\"language-sudo\">npx create-react-app [어플리케이션 이름]\nyarn create react-app [어플리케이션 이름]</code></pre></div>\n<p>기본적으로 index.html 내부에 id가 root인 div 태그가 리액트의 시작점이 된다. 또한, index.js를 보면</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> React<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 위는 클래스 컴포넌트 기준이다. 최근에는 함수 컴포넌트를 주로 사용하며 이는 직접 찾아보길!</span></code></pre></div>\n<p>즉, App 컴포넌트는 root 요소에 렌더링 되며, 우리는 이 App 컴포넌트에 코드를 작성하면 된다.</p>\n<h3 id=\"리액트-devtools\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-devtools\" aria-label=\"리액트 devtools permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 DevTools</h3>\n<p><img src=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\" alt=\"리액트 DevTools\"></p>\n<p>리액트와 관련된 개발도구를 확장시켜주는 크롬 extension이다. 컴포넌트에 대한 내용과 props, state의 흐름을 보기 쉽게 도와준다.</p>\n<h3 id=\"jsx--javascript--xml\" style=\"position:relative;\"><a href=\"#jsx--javascript--xml\" aria-label=\"jsx  javascript  xml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX : JavaScript + XML</h3>\n<p>리액트 코드에서 HTML과 유사한 코드를 보았을 것이다. 이 부분은 HTML과 유사하긴 하지만, 엄밀히 말하면 JSX로 JavaScript의 확장 문법이라고 생각하면 된다.</p>\n<p>아래와 같이 JavaScript에서 HTML을 다룰 수 있게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> heading <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"site-heading\"</span><span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> React<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>또한, JSX를 사용하지 않고 아래와 같이 써도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> heading <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">className</span><span class=\"token operator\">:</span> <span class=\"token string\">'site-heading'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello, React!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>(그러나 위의 코드는 가독성이 떨어져 직관적이지 않다. 사실상 JSX는 리액트를 사용하면서 필수적인 녀석이다.)</p>\n<h4 id=\"jsx의-특징-및-주의사항\" style=\"position:relative;\"><a href=\"#jsx%EC%9D%98-%ED%8A%B9%EC%A7%95-%EB%B0%8F-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"jsx의 특징 및 주의사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX의 특징 및 주의사항</h4>\n<p>JSX는 보이기엔 HTML이지만 실상 JavaScript 코드이다.</p>\n<ul>\n<li>CSS 스타일을 위한 <code class=\"language-text\">class</code>는 <code class=\"language-text\">className</code>으로 표기한다. 왜냐하면 JavaScript에는 이미 <code class=\"language-text\">class</code>라는 예약어가 존재하기 때문이다.</li>\n<li>속성과 메서드는 CamelCase로 작성한다. ex) onclick => onClick</li>\n<li>Self-closing tags는 반드시 슬래쉬가 뒤에 온다. ex) <code class=\"language-text\">&lt;img /></code></li>\n<li>JSX 내에서 자바스크립트 표현은 {}로 할 수 있다.(마치 문자 리터럴내에서 ${} 사용하듯이)</li>\n</ul>\n<h3 id=\"components컴포넌트\" style=\"position:relative;\"><a href=\"#components%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"components컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Components(컴포넌트)</h3>\n<p>리액트는 모두 컴포넌트로 구성되어있다. 컴포넌트 안에 더 작은 컴포넌트들이 들어있고, 그 컴포넌트들 내부도 더더더 작은 컴포넌트들로 구성된다.</p>\n<ul>\n<li>class component</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ClassComponent<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>simple component(함수 컴포넌트)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SimpleComponent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SimpleComponent<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"props\" style=\"position:relative;\"><a href=\"#props\" aria-label=\"props permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Props</h3>\n<p>리액트에서 데이터를 처리하는 방법으로 porps라고 하는 속성과 상태를 사용하여 처리합니다.<br/>\n(기존 글에서는 class component 예시이지만, 저는 함수 컴포넌트로 작성하였습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">ParentComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> characters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Charlie'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">job</span><span class=\"token operator\">:</span> <span class=\"token string\">'Janitor'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mac'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">job</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bouncer'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Dee'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">job</span><span class=\"token operator\">:</span> <span class=\"token string\">'Aspring actress'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Dennis'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">job</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bartender'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>ChildComponent characterData<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>characters<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ChildComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>characterData<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>v<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>위와 같이 배열 함수(map)을 사용하여 데이터에 대한 여러 JSX 요소를 반환할 때는 데이터마다의 고유한 값을 통해 key값을 지정해주어야합니다.(랜더링 시 각 항목을 식별하는데 도움이 되기 때문이며 사실 위와같이 배열의 순서인 i를 주는 것도 효율적인 방법은 아닙니다.)</li>\n<li>여기서 의문이 생깁니다. props를 통해 상위 컴포넌트의 데이터를 하위 컴포넌트에 전달하는 건 좋았는데, 그렇다면 해당 컴포넌트에서 다루는 데이터는 어떻게 제어할 수 있을까요?</li>\n</ul>\n<h3 id=\"state\" style=\"position:relative;\"><a href=\"#state\" aria-label=\"state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State</h3>\n<p>state를 사용하면 헤당 컴포넌트에서 데이터를 수정(추가 혹은 삭제 등)을 할 수 있게 됩니다. 함수 컴포넌트는 useState()라는 훅을 사용하여 이러한 상태를 저장하고 조작할 수 있습니다.</p>\n<h3 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h3>\n<p>아무래도 오래전에 리액트의 큰 개념을 정리한 글이라서 함수 컴포넌트로 설명하는 내용이 없었다. 리액트를 사용하는 사람 입장에서는 정말 당연하고 기본적인 내용이지만, 막연하게 ‘리액트에서 상태가 뭐지??’와 같은 의문이 드는 사람들에게는 좋은 글인 것 같다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-taniarascia%EC%9D%98-getting-started-with-react\">📚 Taniarascia의 getting-started-with-react</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8%EB%9E%80\">리액트란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%95%B1-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\">리액트 앱 만드는 방법</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-devtools\">리액트 DevTools</a></p>\n</li>\n<li>\n<p><a href=\"#jsx--javascript--xml\">JSX : JavaScript + XML</a></p>\n<ul>\n<li><a href=\"#jsx%EC%9D%98-%ED%8A%B9%EC%A7%95-%EB%B0%8F-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\">JSX의 특징 및 주의사항</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#components%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\">Components(컴포넌트)</a></p>\n</li>\n<li>\n<p><a href=\"#props\">Props</a></p>\n</li>\n<li>\n<p><a href=\"#state\">State</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0\">회고</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 09, 2022","title":"Getting Started With React","categories":"아티클","author":"제이든","emoji":"📖"},"fields":{"slug":"/from-time-to-time/article/taniarascia-getting-started-react/"}},"prev":{"id":"376f1033-5b73-57f2-8bd0-7788061f4746","html":"<h2 id=\"-프로젝트-일지\" style=\"position:relative;\"><a href=\"#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%BC%EC%A7%80\" aria-label=\" 프로젝트 일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔨 프로젝트 일지</h2>\n<blockquote>\n<p>정보 전달보단 프로젝트를 진행하며 겪은 점들, 느낀 점들을 기록한 일지</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textprojectcode-jayden-design-systemfeat-challengers\" style=\"position:relative;\"><a href=\"#code-classlanguage-textprojectcode-jayden-design-systemfeat-challengers\" aria-label=\"code classlanguage textprojectcode jayden design systemfeat challengers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Project</code>: Jayden-Design-System(feat. Challengers)</h3>\n<p>프론트엔드 취준생의 뭣도 모르고 시작해보는 디자인 시스템 프로젝트.<br/></p>\n<h4 id=\"시작하게-된-이유\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"시작하게 된 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하게 된 이유?</h4>\n<p>본론부터 말하자면 <code class=\"language-text\">챌린져스</code> 앱을 웹으로 리브랜딩해보는 프로젝트를 진행 중 멘토님께서 디자인 시스템에 대한 이야기를 해주신 것에서 시작되었다. 백엔드 없이 api를 어떻게라도 짜는 게 쉽지 않았고, 이에 좀더 프론트엔드 개발에 포커싱을 둘 수 있는 디자인 시스템을 시작으로 챌린져스 모킹 웹까지 진행하는 프로젝트를 시작하게 되었다.<br/>\n이 프로젝트의 1차적인 최종 목표는 나만의 디자인 시스템을 구현하고 npm 라이버르러로 배포까지 하는 것!!!<br/></p>\n<p>목표 설정</p>\n<blockquote>\n<p>primary : 나만의 디자인 시스템 구축 및 배포<br/>\nsecondary : 디자인 시스템 및 mock data를 사용하여 challengers 웹 서비스 구현</p>\n</blockquote>\n<h3 id=\"디자인-시스템이란\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80\" aria-label=\"디자인 시스템이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인 시스템이란?</h3>\n<p>재사용 가능한 UI 구성 요소의 <code class=\"language-text\">모음</code>이며 버튼과 같은 UI 컴포넌트를 재사용할 수 있게 정의해두는 것이다.<br/>\n디자인 시스템은 결과물이 아닌, 결과물들의 집합으로 잘 만들어 놓은 디자인 시스템은 디자이너와 개발자간의 협업을 원활하게 하며, 일관된 규칙을 정의하며 회사의 브랜딩을 유지할 수 있다.</p>\n<h4 id=\"왜-사용하는가\" style=\"position:relative;\"><a href=\"#%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B0%80\" aria-label=\"왜 사용하는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>왜 사용하는가?</h4>\n<ul>\n<li>일관성 : 서비스의 UI 일관성이 지속적으로 유지될 수 있다.</li>\n<li>디자인, 개발의 워크플로우 : 디자인 시스템이 구축된다면, 디자이너와 개발자의 협업이 매우 용이해진다. 즉, 개발자의 컴포넌트 개발 시 굉장히 큰 이점이 된다.</li>\n</ul>\n<h4 id=\"atomic-디자인-시스템이란\" style=\"position:relative;\"><a href=\"#atomic-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80\" aria-label=\"atomic 디자인 시스템이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Atomic 디자인 시스템이란?</h4>\n<p>Atoms(원자), Molecules(분자), Organisms(조직), Templates(템플릿), Pages(페이지) 순서로 구성되는 디자인 시스템 워크플로우(컴포넌트 개발의 구조)</p>\n<h4 id=\"디자인-시스템의-사용자\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EC%82%AC%EC%9A%A9%EC%9E%90\" aria-label=\"디자인 시스템의 사용자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인 시스템의 사용자</h4>\n<p>일반적인 B2C 혹은 B2B 서비스와는 다르게 디자인 시스템을 구축하는 것은 개발자, 디자이너를 위한 것이라는 점을 인지해야한다.</p>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p><a href=\"https://team.modusign.co.kr/%EC%82%AC%EB%9E%8C%EC%9D%84-%ED%96%A5%ED%95%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%A4%80%EB%B9%84%ED%95%98%EA%B8%B0-b7848638fb8\">모두싸인(디자이너의 디자인 시스템)</a>\n<a href=\"https://team.modusign.co.kr/%EC%9E%98-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-7387b40f547a\">모두싸인(개발자의 디자인 시스템)</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%BC%EC%A7%80\">🔨 프로젝트 일지</a></p>\n<ul>\n<li>\n<p><a href=\"#project-jayden-design-systemfeat-challengers\"><code class=\"language-text\">Project</code>: Jayden-Design-System(feat. Challengers)</a></p>\n<ul>\n<li><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0\">시작하게 된 이유?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80\">디자인 시스템이란?</a></p>\n<ul>\n<li><a href=\"#%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B0%80\">왜 사용하는가?</a></li>\n<li><a href=\"#atomic-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EB%9E%80\">Atomic 디자인 시스템이란?</a></li>\n<li><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EC%82%AC%EC%9A%A9%EC%9E%90\">디자인 시스템의 사용자</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#reference\">Reference</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 09, 2022","title":"Jayden-Design-System(1)","categories":"프로젝트","author":"제이든","emoji":"🔨"},"fields":{"slug":"/from-time-to-time/project/jayden-design-system/1/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/article/d2-how-browsers-work/","nextSlug":"/from-time-to-time/article/taniarascia-getting-started-react/","prevSlug":"/from-time-to-time/project/jayden-design-system/1/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}