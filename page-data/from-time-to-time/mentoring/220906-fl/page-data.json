{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/mentoring/220906-fl/","result":{"data":{"cur":{"id":"22e72f72-c318-5fea-9cd6-6d561d961162","html":"<h2 id=\"-f-lab-멘토링-기록\" style=\"position:relative;\"><a href=\"#-f-lab-%EB%A9%98%ED%86%A0%EB%A7%81-%EA%B8%B0%EB%A1%9D\" aria-label=\" f lab 멘토링 기록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌕 F-lab 멘토링 기록</h2>\n<p>멘토링 이후 부족한 부분을 채우기 위한 기록</p>\n<h3 id=\"code-classlanguage-textjavascriptcode-프로토타입-체인\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8\" aria-label=\"code classlanguage textjavascriptcode 프로토타입 체인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 프로토타입 체인</h3>\n<ul>\n<li>프로토타입: 자바스크립트의 기반이 되는 개념으로 각 함수의 상위 객체를 참조할 수 있는 프로퍼티</li>\n<li>프로토타입 체인: 어떤 객체의 프로토타입 또한 프로토타입을 갖고 있으며 이를 통해 스코프 체인 처럼 상위 프로토타입을 참조하며 프로토타입이 갖고 있는 메서드를 활용할 수 있는 방법</li>\n</ul>\n<h3 id=\"code-classlanguage-textjavascriptcode-클로저와-정보은닉\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-%EC%A0%95%EB%B3%B4%EC%9D%80%EB%8B%89\" aria-label=\"code classlanguage textjavascriptcode 클로저와 정보은닉 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 클로저와 정보은닉</h3>\n<ul>\n<li>클로저: 어떤 함수의 변수를 참조하는 내부 함수가 외부로 전달될 때, 참조된 그 변수가 메모리에서 제거되지 않는 현상</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">counterFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 위와 같은 방식은 객체를 생성해도 count가 계속 0으로 초기화된다. 또한, 만들어진 객체의 외부에서 count값에 접근이 가능하며 변경 가능</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">counterFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> _count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>_count<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 클로저를 이용하면 _count가 메모리에 계속 남아있기에 호출 시 계속 1이 더해지며, 외부에서 직접 _count에 접근할 수 없다.</span></code></pre></div>\n<h3 id=\"code-classlanguage-textjavascriptcode-code-classlanguage-textreactcode-불변성\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-code-classlanguage-textreactcode-%EB%B6%88%EB%B3%80%EC%84%B1\" aria-label=\"code classlanguage textjavascriptcode code classlanguage textreactcode 불변성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> <code class=\"language-text\">React</code> 불변성</h3>\n<ul>\n<li>불변성: 객체가 최초로 생성되었을 때의 값이 변하지 않고 유지되는 것 -> 메모리 영역에서 값을 변경할 수 없다는 의미</li>\n</ul>\n<blockquote>\n<p>원시형은 데이터를 할당할 때, 데이터를 메모리에 저장하고 그 주소를 변수에 할당\n이후 같은 변수에 새로운 데이터를 재할당하게 되면, 그 새로운 데이터에 대한 메모리가 새롭게 생기고 그 주소를 변수에 할당한다.\n즉, 데이터 자체가 바뀌는 것이 아니라 새로운 공간에 새로운 데이터를 넣고 그 주소를 할당하므로 이를 <code class=\"language-text\">불변성</code>이라고 하며 기존 데이터의 메모리는\n가비지 콜렉터에 의해 제거된다.\n그러나 객체의 경우, 그 객체 내부의 변수가 존재하고 그 변수가 데이터의 주소를 참조하기에 그 변수의 주소를 참조하는 객체는 프로퍼티의 값을 재할당해도\n프로퍼티의 주소를 그대로 갖고 있으면서 값만 바뀌게 된다. 이를 <code class=\"language-text\">가변성</code>이라고 한다.</p>\n</blockquote>\n<h4 id=\"현대-모던-자바스크립트-불변성의-중요성\" style=\"position:relative;\"><a href=\"#%ED%98%84%EB%8C%80-%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B6%88%EB%B3%80%EC%84%B1%EC%9D%98-%EC%A4%91%EC%9A%94%EC%84%B1\" aria-label=\"현대 모던 자바스크립트 불변성의 중요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현대 모던 자바스크립트 불변성의 중요성</h4>\n<p>불변성이 중요한 이유는 단순하게 생각하면 <code class=\"language-text\">전역변수를 지양</code>하는 이유와 비슷하다.<br/>\n코드의 길이와 복잡도가 증가할수록 특정 변수의 값을 바꾸게 될 수도 있고 이후 발생한 에러를 추적하기에도 버거워진다.<br/>\n어떤 객체의 참조값을 여러 곳에서 공유하면 그 값이 계속 변경되어 의도치않은 상황이 일어날 수 있기에 객체의 불변성은 굉장히 중요하다.</p>\n<blockquote>\n<p>또한 리액트에서 상태(state)의 불변성을 유지해야하는데</p>\n<ol>\n<li>리액트는 이전 상태와 비교해서 변경된 부분만 리렌더링해야하기에 이전 상태의 원본이 유지가 되어야한다.(그래야 비교가능)</li>\n<li>state는 객체이기에 내부 프로퍼티값을 변경하면 이전과 이후의 값이 둘다 변경되어 <code class=\"language-text\">변경되었음</code>을 나타날 수 없고\n그렇게 되면 상태가 변경되지 않은 것으로 판단하고 리랜더링되지 않는다.</li>\n</ol>\n</blockquote>\n<h3 id=\"code-classlanguage-texthtmlcode-시멘틱-마크업\" style=\"position:relative;\"><a href=\"#code-classlanguage-texthtmlcode-%EC%8B%9C%EB%A9%98%ED%8B%B1-%EB%A7%88%ED%81%AC%EC%97%85\" aria-label=\"code classlanguage texthtmlcode 시멘틱 마크업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">HTML</code> 시멘틱 마크업</h3>\n<ul>\n<li>의미를 갖는 마크업이라는 뜻</li>\n<li>단순히 div를 활용한 마크업이 아닌, header, main, footer등과 같이 그 역할을 나타낼 수 있는 마크업을 지향해야한다.\n<ul>\n<li>검색 엔진 최적화(SEO; Search Engine Optimization)\n<ul>\n<li>태그의 의미(역할)을 부여함으로써 크롤링 시 더 유의미하고 효율적인 방법이 가능</li>\n</ul>\n</li>\n<li>웹 접근성\n<ul>\n<li>장애인, 고령자분들이 웹에 접근 시 음성 혹은 키보드만으로 접근할 수 있게 하는 서비스 등은 HTML 태그를 기반으로 작동한다.</li>\n</ul>\n</li>\n<li>가독성\n<ul>\n<li>개발 시 각각의 태그들에 대한 가독성이 더 좋아진다.(웹의 구조를 파악하기 용이하다.)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"code-classlanguage-textjavascriptcode-모듈\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EB%AA%A8%EB%93%88\" aria-label=\"code classlanguage textjavascriptcode 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 모듈</h3>\n<ul>\n<li>\n<p>모듈: 단순히 생각하면 코드 조각, 점점 애플리케이션의 크기가 커지면서 파일을 여러 개로 분리하게 되는데, 이 때 분리된 각각이 모듈이다.</p>\n<blockquote>\n<p>점점 스크립트의 크기도 커지고 복잡해지면서 코드를 모듈 단위로 쪼개는 방법이 필요해졌다.</p>\n</blockquote>\n<ul>\n<li>모듈은 항상 <code class=\"language-text\">use strict(엄격모드)</code>로 실행된다.</li>\n<li>모듈은 자신만의 <code class=\"language-text\">모듈 스코프</code>가 존재한다.(스코프를 공유하기 위해 export, import 사용)</li>\n<li>동일한 모듈은 여러 곳에서 사용되더라도 최초 호출 시 단 한 번만 실행된다. 실행 후의 결과는 이 모듈을 가져가려는 모든 모듈에 반영된다.</li>\n<li>모듈 스크립트는 항상 <code class=\"language-text\">지연 실행</code>된다. 마치 defer 속성을 붙인 것처럼!</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-f-lab-%EB%A9%98%ED%86%A0%EB%A7%81-%EA%B8%B0%EB%A1%9D\">🌕 F-lab 멘토링 기록</a></p>\n<ul>\n<li>\n<p><a href=\"#javascript-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8\"><code class=\"language-text\">JavaScript</code> 프로토타입 체인</a></p>\n</li>\n<li>\n<p><a href=\"#javascript-%ED%81%B4%EB%A1%9C%EC%A0%80%EC%99%80-%EC%A0%95%EB%B3%B4%EC%9D%80%EB%8B%89\"><code class=\"language-text\">JavaScript</code> 클로저와 정보은닉</a></p>\n</li>\n<li>\n<p><a href=\"#javascript-react-%EB%B6%88%EB%B3%80%EC%84%B1\"><code class=\"language-text\">JavaScript</code> <code class=\"language-text\">React</code> 불변성</a></p>\n<ul>\n<li><a href=\"#%ED%98%84%EB%8C%80-%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B6%88%EB%B3%80%EC%84%B1%EC%9D%98-%EC%A4%91%EC%9A%94%EC%84%B1\">현대 모던 자바스크립트 불변성의 중요성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#html-%EC%8B%9C%EB%A9%98%ED%8B%B1-%EB%A7%88%ED%81%AC%EC%97%85\"><code class=\"language-text\">HTML</code> 시멘틱 마크업</a></p>\n</li>\n<li>\n<p><a href=\"#javascript-%EB%AA%A8%EB%93%88\"><code class=\"language-text\">JavaScript</code> 모듈</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🌕 F-lab 멘토링 기록 멘토링 이후 부족한 부분을 채우기 위한 기록  프로토타입 체인 프로토타입: 자바스크립트의 기반이 되는 개념으로 각 함수의 상위 객체를 참조할 수 있는 프로퍼티 프로토타입 체인: 어떤 객체의 프로토타입 또한 프로토타입을 갖고 있으며 이를 통해 스코프 체인 처럼 상위 프로토타입을 참조하며 프로토타입이 갖고 있는 메서드를 활용할 수 있는 방법  클로저와 정보은닉 클로저: 어떤 함수의 변수를 참조하는 내부 함수가 외부로 전달될 때, 참조된 그 변수가 메모리에서 제거되지 않는 현상   불변성 불변성: 객체가 최초로 생성되었을 때의 값이 변하지 않고 유지되는 것 -> 메모리 영역에서 값을 변경할 수 없다는 의미 원시형은 데이터를 할당할 때, 데이터를 메모리에 저장하고 그 주소를 변수에 할당\n이후 같은 변수에 새로운 데이터를 재할당하게 되면, 그 새로운 데이터에 대한 메모리가 새롭게 생기고 그 주소를 변수에 할당한다.\n즉, 데이터 자체가 바뀌는 것이 아니라 새로운 공…","frontmatter":{"date":"September 06, 2022","title":"멘토링 4번째","categories":"멘토링","author":"제이든","emoji":"🏋️"},"fields":{"slug":"/from-time-to-time/mentoring/220906-fl/"}},"next":{"id":"f00f786d-f3fb-5675-a056-73ce0ec55297","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textcsscode-bemblock__element--modifier\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcsscode-bemblock__element--modifier\" aria-label=\"code classlanguage textcsscode bemblock__element  modifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">CSS</code> BEM(Block__Element—Modifier)</h3>\n<p>각 요소들에 CSS를 더 체계적이고 편리하게 관리하기 위한 방법론(약속)<br/>\n<code class=\"language-text\">어떻게 보이는가</code>가 아니라 <code class=\"language-text\">어떤 목적인가</code>에 맞춰 이름을 짓는다.</p>\n<ul>\n<li>요소에 id는 쓰지 않으며 오로지 class만을 이용한다.</li>\n<li>B(Block): 재사용이 가능하고 기능적으로 독립적인 페이지 컴포넌트, 즉 어딘가에 종속되지 않고 그 자체로 사용할 수 있는 단위</li>\n<li>E(Element): 블록을 구성하는 단위, 자신이 속한 블록 내에서만 의미를 가지기에 의존적인 형태. 즉, 블록처럼 똑 떼서 다른 곳에 사용할 수 없음.</li>\n<li>M(Modifier): 블록이나 엘리먼트의 속성을 담당. 생긴 게 조금 다르거나 기능이 조금 다르게 동작하는 것을 구분할 때 사용.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 아래와 같은 형태로 사용합니다. --></span>\nblock__element--modifier</code></pre></div>\n<p>장점</p>\n<ul>\n<li>클래스네임만으로도 마크업 구조를 파악 가능</li>\n<li>SASS의 부모참조자(&#x26;)와 궁합이 아주 좋다.</li>\n<li>작성된 SASS에서 요소를 쉽게 찾아낼 수 있다.</li>\n</ul>\n<p>간단한 토이프로젝트를 하며, css bem을 적용해보았다. 생각보다 그 명명법이 쉽지 않았지만, 확실히 하다보니까 조금씩 ‘아 대충 이런 느낌이구나~!’ 알 수 있었다! 한 번 잘 배워두면 아주 요긴하게 쓰일테니 앞으로 프로젝트 시에 신경써서 하도록 하자 :)</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li><a href=\"#css-bemblock__element--modifier\"><code class=\"language-text\">CSS</code> BEM(Block__Element—Modifier)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 05, 2022","title":"220905(월)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220905-gl/"}},"prev":{"id":"d64ca8a6-5ffe-5608-814e-8f10deef337b","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h2 id=\"code-classlanguage-textprojectcode-jaybnb\" style=\"position:relative;\"><a href=\"#code-classlanguage-textprojectcode-jaybnb\" aria-label=\"code classlanguage textprojectcode jaybnb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Project</code> jaybnb</h2>\n<p>아주 짧은 프로젝트이지만, 에어비앤비 웹 페이지의 첫 화면을 클론하는 프로젝트를 진행한다.<br/>\n이 프로젝트에서 배울 수 있는 것은 간단한 UI를 구성하는 것과 일정 선택 부분!!!<br/>\n특히 달력을 만드는 부분에 초점을 맞추고 진행할 예정이다!</p>\n<h3 id=\"code-classlanguage-textgithubcode-gitignore\" style=\"position:relative;\"><a href=\"#code-classlanguage-textgithubcode-gitignore\" aria-label=\"code classlanguage textgithubcode gitignore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Github</code> .gitignore</h3>\n<p>깃은 우리의 프로젝트의 버전을 관리할 수 있는 툴이다.<br/>\n깃허브는 그렇게 관리되는 프로젝트(코드)를 전 세계 사람들과, 혹은 협업하는 사람과 공유할 수 있게 해주는 아주 유용한 도구다.</p>\n<p>이 때, 우리가 작업한 파일들 중 <code class=\"language-text\">보안</code> 혹은 <code class=\"language-text\">깔끔한 코드 정리</code> 등의 이유로 깃허브에는 반영되지 않았으면 하는 파일들이 있을 수 있다.<br/>\n이런 파일들을 지정하고 관리해주는 것이 <code class=\"language-text\">.gitignore</code>이다.</p>\n<ol>\n<li>깃허브 저장소 생성 후 로컬에 <code class=\"language-text\">.gitignore</code> 파일을 생성한다.</li>\n<li>아래 예시와 같이 <code class=\"language-text\">.gitignore</code>을 작성한다.(아래는 macOS, JavaScript 프로젝트에 대한 예시)</li>\n</ol>\n<ul>\n<li><a href=\"https://www.toptal.com/developers/gitignore/\">gitignore.io</a>에서 프로젝트 환경에 따른 gitignore 내용을 만들 수 있다.</li>\n<li>아래 예시는 구글링을 통해 찾은 javascript 및 vscode를 사용 시 파일</li>\n</ul>\n<ol start=\"3\">\n<li>이후 로컬 저장소를 원격에 커밋하고 푸쉬하면 아래의 목록 파일들을 제외되고 올라가게 된다!</li>\n</ol>\n<ul>\n<li>덕분에 불필요한 코드들이 제외되고 프로젝트의 진행을 파악하고 코드 리뷰를 하는데에 있어 더 깔끔하게 프로젝트를 관리할 수 있게 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> See http://help.github.com/ignore-files/ for more about ignoring files.</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> compiled output</span>\n\n/dist\n/tmp\n/out-tsc\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Runtime data</span>\n\npids\n<span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">.pid\n</span><span class=\"token punctuation\">_</span></span>.seed\n\\*.pid.lock\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Directory for instrumented libs generated by jscoverage/JSCover</span>\n\nlib-cov\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Coverage directory used by tools like istanbul</span>\n\ncoverage\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> nyc test coverage</span>\n\n.nyc_output\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)</span>\n\n.grunt\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Bower dependency directory (https://bower.io/)</span>\n\nbower_components\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> node-waf configuration</span>\n\n.lock-wscript\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> IDEs and editors</span>\n\n.idea\n.project\n.classpath\n.c9/\n<span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">.launch\n.settings/\n</span><span class=\"token punctuation\">_</span></span>.sublime-workspace\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> IDE - VSCode</span>\n\n.vscode/\\*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> misc</span>\n\n.sass-cache\nconnect.lock\ntypings\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Logs</span>\n\nlogs\n<span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">.log\nnpm-debug.log</span><span class=\"token punctuation\">_</span></span>\nyarn-debug.log<span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">\nyarn-error.log</span><span class=\"token punctuation\">*</span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Dependency directories</span>\n\nnode_modules/\njspm_packages/\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Optional npm cache directory</span>\n\n.npm\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Optional eslint cache</span>\n\n.eslintcache\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Optional REPL history</span>\n\n.node_repl_history\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Output of 'npm pack'</span>\n\n\\*.tgz\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Yarn Integrity file</span>\n\n.yarn-integrity\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> dotenv environment variables file</span>\n\n.env\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> next.js build output</span>\n\n.next\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Lerna</span>\n\nlerna-debug.log\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> System Files</span>\n\n.DS_Store\nThumbs.db</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n</li>\n<li>\n<p><a href=\"#project-jaybnb\"><code class=\"language-text\">Project</code> jaybnb</a></p>\n<ul>\n<li><a href=\"#github-gitignore\"><code class=\"language-text\">Github</code> .gitignore</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 07, 2022","title":"220907(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220907-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/mentoring/220906-fl/","nextSlug":"/steadily/growth-diary/2022/9/220905-gl/","prevSlug":"/steadily/growth-diary/2022/9/220907-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}