{"componentChunkName":"component---src-templates-blog-template-js","path":"/from-time-to-time/study/ssok-ssok-functional/ch-3/","result":{"data":{"cur":{"id":"9465960e-b822-5eb2-968e-ef3ffac1e352","html":"<h1 id=\"-쏙쏙-들어오는-함수형-코딩---심플한-코드로-복잡한-소프트웨어-길들이기\" style=\"position:relative;\"><a href=\"#-%EC%8F%99%EC%8F%99-%EB%93%A4%EC%96%B4%EC%98%A4%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%EC%BD%94%EB%94%A9---%EC%8B%AC%ED%94%8C%ED%95%9C-%EC%BD%94%EB%93%9C%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B8%B8%EB%93%A4%EC%9D%B4%EA%B8%B0\" aria-label=\" 쏙쏙 들어오는 함수형 코딩   심플한 코드로 복잡한 소프트웨어 길들이기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖍 쏙쏙 들어오는 함수형 코딩 - 심플한 코드로 복잡한 소프트웨어 길들이기</h1>\n<p>이 글은 <a href=\"https://product.kyobobook.co.kr/detail/S000001952246\">쏙쏙 들어오는 함수형 코딩 - 심플한 코드로 복잡한 소프트웨어 길들이기</a>를 읽고 작성한 글입니다.\n함수형도 함수형이지만, 이 책을 통해 좀더 깔끔하고 직관적인 코드를 작성할 수 있을 것이란 팀원들의 의견을 토대로 이번 스터디 서적으로 선정하였습니다.</p>\n<h2 id=\"chap-3-액션과-계산-데이터의-차이를-알기\" style=\"position:relative;\"><a href=\"#chap-3-%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%A5%BC-%EC%95%8C%EA%B8%B0\" aria-label=\"chap 3 액션과 계산 데이터의 차이를 알기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chap 3. 액션과 계산, 데이터의 차이를 알기</h2>\n<ul>\n<li>액션과 계산, 데이터의 차이를 알 수 있다.</li>\n<li>액션이 코드 전체로 퍼질 수 있다.</li>\n<li>코드에서 어떤 부분이 액션인지 찾을 수 있다.</li>\n</ul>\n<h3 id=\"액션과-계산-데이터\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"액션과 계산 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션과 계산, 데이터</h3>\n<p>모든 개발 과정에서 액션과 계산, 데이터를 구분하는 기술을 적용할 수 있다.</p>\n<h4 id=\"액션부수-효과\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC\" aria-label=\"액션부수 효과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션(부수 효과)</h4>\n<ul>\n<li>실행 시점과 횟수에 의존</li>\n</ul>\n<h4 id=\"계산순수-함수-수학-함수\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%82%B0%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98-%EC%88%98%ED%95%99-%ED%95%A8%EC%88%98\" aria-label=\"계산순수 함수 수학 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계산(순수 함수, 수학 함수)</h4>\n<ul>\n<li>입력을 받아서 출력을 반환한다.</li>\n</ul>\n<h4 id=\"데이터\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터</h4>\n<ul>\n<li>이벤트에 대한 사실</li>\n</ul>\n<h3 id=\"함수형-프로그래머는\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EB%8A%94\" aria-label=\"함수형 프로그래머는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 프로그래머는..!</h3>\n<ul>\n<li>최대한 액션에서 계산을 빼내려고 한다.</li>\n<li>또 계산에서 데이터를 분리할 수 있는 생각한다.</li>\n<li>나아가서 액션을 계산으로, 계산을 데이터로 바꿀 수 있는지 고민한다.</li>\n</ul>\n<h3 id=\"액션과-계산-데이터는-어디에나-적용할-수-있다\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%8A%94-%EC%96%B4%EB%94%94%EC%97%90%EB%82%98-%EC%A0%81%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"액션과 계산 데이터는 어디에나 적용할 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션과 계산, 데이터는 어디에나 적용할 수 있다.</h3>\n<h4 id=\"장보기-과정에-적용해보기\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EB%B3%B4%EA%B8%B0-%EA%B3%BC%EC%A0%95%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"장보기 과정에 적용해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장보기 과정에 적용해보기</h4>\n<p><code class=\"language-text\">액션: 냉장고 확인하기</code> -> <code class=\"language-text\">액션: 운전해서 상점으로 가기</code> -> <code class=\"language-text\">액션: 필요한 것 구입하기</code> -> <code class=\"language-text\">액션: 운전해서 집으로 오기</code></p>\n<p>전부 다 액션으로 보인다. 이는 큰 범주에서 일부분이 액션이기만 해도 전체가 액션이 되기 때문이다. 여기서 더 잘게 나눠서 계산, 데이터를 뽑아보자.</p>\n<ul>\n<li>\n<p>액션: 냉장고 확인하기</p>\n<ul>\n<li>데이터: 냉장고에 있는 제품(현재 재고)</li>\n</ul>\n</li>\n<li>\n<p>액션: 운전해서 상점으로 가기</p>\n<ul>\n<li>데이터: 상점 위치, 가는 경로 등</li>\n</ul>\n</li>\n<li>\n<p>액션: 필요한 것 구입하기</p>\n<ul>\n<li>계산: 필요한 재고 - 현재 재고 = 장보기 목록</li>\n<li>데이터: 필요한 재고, 현재 재고(위에 존재), 장보기 목록</li>\n</ul>\n</li>\n<li>\n<p>액션: 운전해서 집으로 오기 => 더 나눌 수 있지만 <code class=\"language-text\">장보기 과정</code>에서 중요한 로직은 아니기에 패스</p>\n</li>\n</ul>\n<blockquote>\n<p>나누다보면 <code class=\"language-text\">너무 복잡해지는 거 아니야?</code>라고 생각할 수 있지만, 나눌 수 있는 만큼 나누는 게 좋다.<br/>\n함수형 프로그래머는 <code class=\"language-text\">나눌 수 있는 만큼</code>을 알고 적절한 곳에서 멈출 수 있어야 한다.<br/>\n계산 또한 여러 계산으로 나눌 수 있다. 첫 번째 계산의 출력이 두 번째 계산의 입력이 되는 식이다.<br/>\n계산이 잘 보이지 않는 이유는, 기본적으로 계산은 우리의 사고 과정에 녹아있기 때문이다.(이미 머리에서 다 파악이 되기 때문)</p>\n</blockquote>\n<h3 id=\"데이터-계산-그리고-액션-자세히-들여다보기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%84%EC%82%B0-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%95%A1%EC%85%98-%EC%9E%90%EC%84%B8%ED%9E%88-%EB%93%A4%EC%97%AC%EB%8B%A4%EB%B3%B4%EA%B8%B0\" aria-label=\"데이터 계산 그리고 액션 자세히 들여다보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터, 계산 그리고 액션 자세히 들여다보기</h3>\n<h4 id=\"데이터-1\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-1\" aria-label=\"데이터 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터</h4>\n<ul>\n<li><code class=\"language-text\">이벤트에 대한 사실</code></li>\n<li>자료 구조로 데이터에 의미를 담을 수 있다. ex) 순서가 중요한 데이터는 배열로 처리한다.</li>\n<li>불변성\n<ul>\n<li>카피-온-라이트: 변경할 때 복사본을 만든다.</li>\n<li>방어적 복사: 보관하려고 할 때 복사본을 만든다.</li>\n</ul>\n</li>\n<li>장점\n<ul>\n<li>직렬화: 전송 및 저장이 쉽다.(보장된다.)</li>\n<li>동일성 비교: 데이터는 비교하기 쉽다.</li>\n<li>자유로운 해석: 같은 데이터도 다르게 해석이 가능하므로 유용하다.</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>유연하게 해석이 된다는 점이 장점이기도 하지만 반드시 해석이 필요하다는 게 단점이다.</li>\n<li>즉, 해석하지 않은 데이터는 그냥 바이트 덩어리일 뿐이다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"계산\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%82%B0\" aria-label=\"계산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계산</h4>\n<ul>\n<li><code class=\"language-text\">입력값으로 출력값을 만든다.</code></li>\n<li>실행 시점과 횟수와 상관없이 <code class=\"language-text\">항상 같은 입력값에 대해 같은 출력값을 반환한다</code>.</li>\n<li>함수(<code class=\"language-text\">순수 함수</code>)로 구현한다.</li>\n<li>액션보다 좋은 이유\n<ul>\n<li>테스트하기 쉽다.</li>\n<li>기계적인 분석이 쉽다.(정적 분석)</li>\n<li>조합해서 사용하기 좋다.(순수 함수)</li>\n</ul>\n</li>\n<li>계산에서 걱정하지 않아도 되는 부분\n<ul>\n<li>동시에 실행되는 것</li>\n<li>과거 혹은 미래에 실행한 것</li>\n<li>실행 횟수</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>실행(호출) 전에는 어떤 일이 발생할지 알 수 없다는 점.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"액션\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98\" aria-label=\"액션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션</h4>\n<ul>\n<li><code class=\"language-text\">외부 세계에 영향을 주거나 받는 것</code></li>\n<li><code class=\"language-text\">실행 시점과 횟수에 의존한다.</code>\n<ul>\n<li>시점: 언제 실행되는지(순서)</li>\n<li>횟수: 얼마나 실행되는지(반복)</li>\n</ul>\n</li>\n<li>함수로 구현한다.(부수 효과(Side Effect) 함수)</li>\n<li>어떻게 보면 함수형 프로그래밍에서 가장 중요하다.</li>\n<li>액션을 잘 사용한다는 것은…\n<ul>\n<li>가능한 적게 사용한다.</li>\n<li>가능한 작게 만든다.</li>\n<li>외부 세계에 영향을 주거나 받을 수 있다. 즉, 내부에는 계산과 데이터만, 가장 바깥쪽에 액션이 있는 구조가 이상적이다.</li>\n<li>실행 시점과 횟수에 의존하는 것을 조금이라도 제한한다.(덜 의존하도록 만드는 기술을 통해!)</li>\n</ul>\n</li>\n<li>액션을 쓰는 순간, 그 액션을 포함하고 있는 무언가(주로 함수)도 전부 액션이 되어버린다.(액션은 퍼져나간다.)</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#chap-3-%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EB%A5%BC-%EC%95%8C%EA%B8%B0\">Chap 3. 액션과 계산, 데이터의 차이를 알기</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0\">액션과 계산, 데이터</a></p>\n<ul>\n<li><a href=\"#%EC%95%A1%EC%85%98%EB%B6%80%EC%88%98-%ED%9A%A8%EA%B3%BC\">액션(부수 효과)</a></li>\n<li><a href=\"#%EA%B3%84%EC%82%B0%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98-%EC%88%98%ED%95%99-%ED%95%A8%EC%88%98\">계산(순수 함수, 수학 함수)</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0\">데이터</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EB%8A%94\">함수형 프로그래머는..!</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%8A%94-%EC%96%B4%EB%94%94%EC%97%90%EB%82%98-%EC%A0%81%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\">액션과 계산, 데이터는 어디에나 적용할 수 있다.</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EB%B3%B4%EA%B8%B0-%EA%B3%BC%EC%A0%95%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0\">장보기 과정에 적용해보기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%84%EC%82%B0-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%95%A1%EC%85%98-%EC%9E%90%EC%84%B8%ED%9E%88-%EB%93%A4%EC%97%AC%EB%8B%A4%EB%B3%B4%EA%B8%B0\">데이터, 계산 그리고 액션 자세히 들여다보기</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-1\">데이터</a></li>\n<li><a href=\"#%EA%B3%84%EC%82%B0\">계산</a></li>\n<li><a href=\"#%EC%95%A1%EC%85%98\">액션</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🖍 쏙쏙 들어오는 함수형 코딩 - 심플한 코드로 복잡한 소프트웨어 길들이기 이 글은 쏙쏙 들어오는 함수형 코딩 - 심플한 코드로 복잡한 소프트웨어 길들이기를 읽고 작성한 글입니다.\n함수형도 함수형이지만, 이 책을 통해 좀더 깔끔하고 직관적인 코드를 작성할 수 있을 것이란 팀원들의 의견을 토대로 이번 스터디 서적으로 선정하였습니다. Chap 3. 액션과 계산, 데이터의 차이를 알기 액션과 계산, 데이터의 차이를 알 수 있다. 액션이 코드 전체로 퍼질 수 있다. 코드에서 어떤 부분이 액션인지 찾을 수 있다. 액션과 계산, 데이터 모든 개발 과정에서 액션과 계산, 데이터를 구분하는 기술을 적용할 수 있다. 액션(부수 효과) 실행 시점과 횟수에 의존 계산(순수 함수, 수학 함수) 입력을 받아서 출력을 반환한다. 데이터 이벤트에 대한 사실 함수형 프로그래머는..! 최대한 액션에서 계산을 빼내려고 한다. 또 계산에서 데이터를 분리할 수 있는 생각한다. 나아가서 액션을 계산으로, 계산을 데이터…","frontmatter":{"date":"July 22, 2023","title":"쏙쏙 들어오는 함수형 코딩 Chapter 3","categories":"스터디 책","author":"제이든","emoji":"🖍️"},"fields":{"slug":"/from-time-to-time/study/ssok-ssok-functional/ch-3/"}},"next":{"id":"11088841-baba-5069-a9c0-8c4dd2d012d3","html":"<h1 id=\"-쏙쏙-들어오는-함수형-코딩---심플한-코드로-복잡한-소프트웨어-길들이기\" style=\"position:relative;\"><a href=\"#-%EC%8F%99%EC%8F%99-%EB%93%A4%EC%96%B4%EC%98%A4%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%EC%BD%94%EB%94%A9---%EC%8B%AC%ED%94%8C%ED%95%9C-%EC%BD%94%EB%93%9C%EB%A1%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B8%B8%EB%93%A4%EC%9D%B4%EA%B8%B0\" aria-label=\" 쏙쏙 들어오는 함수형 코딩   심플한 코드로 복잡한 소프트웨어 길들이기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖍 쏙쏙 들어오는 함수형 코딩 - 심플한 코드로 복잡한 소프트웨어 길들이기</h1>\n<p>이 글은 <a href=\"https://product.kyobobook.co.kr/detail/S000001952246\">쏙쏙 들어오는 함수형 코딩 - 심플한 코드로 복잡한 소프트웨어 길들이기</a>를 읽고 작성한 글입니다.\n함수형도 함수형이지만, 이 책을 통해 좀더 깔끔하고 직관적인 코드를 작성할 수 있을 것이란 팀원들의 의견을 토대로 이번 스터디 서적으로 선정하였습니다.</p>\n<h2 id=\"chap-2-현실에서의-함수형-사고\" style=\"position:relative;\"><a href=\"#chap-2-%ED%98%84%EC%8B%A4%EC%97%90%EC%84%9C%EC%9D%98-%ED%95%A8%EC%88%98%ED%98%95-%EC%82%AC%EA%B3%A0\" aria-label=\"chap 2 현실에서의 함수형 사고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chap 2. 현실에서의 함수형 사고</h2>\n<ul>\n<li>현실적인 문제에 함수형 사고를 적용해보자.</li>\n<li>소프트웨어 구조를 계층으로 나눠서 설계해보자.</li>\n<li>시간에 의존하는 액션을 타임라인으로 시각화해보자.</li>\n</ul>\n<h3 id=\"액션과-계산-데이터\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"액션과 계산 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션과 계산, 데이터</h3>\n<ul>\n<li>코드를 <code class=\"language-text\">액션</code>과 <code class=\"language-text\">계산</code>, <code class=\"language-text\">데이터</code>로 나누는 작업이 우선이다.(계층형 설계)</li>\n</ul>\n<h4 id=\"액션\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98\" aria-label=\"액션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션</h4>\n<ul>\n<li><code class=\"language-text\">호출 횟수</code>와 <code class=\"language-text\">시점</code>에 의존한다.</li>\n<li>사용할 때 항상 조심해야한다.</li>\n</ul>\n<h4 id=\"계산\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%82%B0\" aria-label=\"계산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계산</h4>\n<ul>\n<li>어떤 것을 결정하거나 계획하는 것</li>\n<li><code class=\"language-text\">실행해도 다른 곳에 영향을 주지 않는다.</code></li>\n<li>함수형 프로그래머는 액션보단 계산을 선호한다.(다루기 쉬우므로)</li>\n</ul>\n<h4 id=\"데이터\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터</h4>\n<ul>\n<li>가능한 <code class=\"language-text\">변경 불가능한</code> 데이터를 사용한다.</li>\n<li>유연하기 때문에 저장하거나 네트워크로 전송하는 등 다양하게 활용 가능하다.</li>\n</ul>\n<h3 id=\"변경-가능성에-따라-코드-나누기\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EA%B2%BD-%EA%B0%80%EB%8A%A5%EC%84%B1%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%BD%94%EB%93%9C-%EB%82%98%EB%88%84%EA%B8%B0\" aria-label=\"변경 가능성에 따라 코드 나누기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변경 가능성에 따라 코드 나누기</h3>\n<ul>\n<li>자주 바뀌는 것 => <code class=\"language-text\">비즈니스 규칙</code></li>\n<li>바뀔 수도 있지만 자주 바뀌지 않는 것 => <code class=\"language-text\">도메인 규칙</code></li>\n<li>자주 바뀌지 않는 것 => <code class=\"language-text\">기술 스택</code></li>\n</ul>\n<p>각 계층은 그 아래에 있는 계층을 기반으로 만들어 진다. 즉, 좀더 안정적인 계층을 기반으로 만들어 진다. 이렇게 계층을 나누면\n코드를 쉽게 변경 가능하다.</p>\n<blockquote>\n<p>가장 위에 있는 코드는 의존성이 거의 없기 때문에 쉽겨 변경 가능하다.<br/>\n반면, 가장 아래에 있는 코드들은 의존성이 많아 바꾸기 어렵지만 바꿀 일이 자주 생기지 않는다.</p>\n</blockquote>\n<p>위와 같은 아키텍처 패턴이 계층을 만들기 때문에 <code class=\"language-text\">계층형 설계</code>라고 부른다.</p>\n<h3 id=\"일급-추상\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EA%B8%89-%EC%B6%94%EC%83%81\" aria-label=\"일급 추상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일급 추상</h3>\n<ul>\n<li>분산 시스템을 이해하기 위해 <code class=\"language-text\">타임라인 다이어그램</code>을 사용한다.</li>\n<li>여러 함수가 협력할 수 있도록 함수를 인자로 받는 일급 함수를 사용한다.</li>\n</ul>\n<h4 id=\"타임라인-다이어그램ㄹ\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%84%EB%9D%BC%EC%9D%B8-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8%E3%84%B9\" aria-label=\"타임라인 다이어그램ㄹ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타임라인 다이어그램ㄹ</h4>\n<ul>\n<li>액션이 시간 순서에 따라 어떻게 실행되는지 볼 수 있다.(액션은 실행 시점에 의존하기 때문에 실행 순서가 중요하다.)</li>\n<li>기본적으로 타임라인은 서로 순서를 맞출 수 있는 기능이 없다.</li>\n<li>서로 다른 타임라인에 있는 액션 간 실행 순서는 보장할 수 없다.</li>\n<li>타임라인을 서로 맞추지 않은 분산 시스템은 예측 불가능한 순서로 실행된다.</li>\n<li>올바른 순서로 동작하는 프로그램을 만들기 위해 액션(시간에 의존적인)에 집중해야 한다.</li>\n</ul>\n<h4 id=\"타임라인-커팅\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%84%EB%9D%BC%EC%9D%B8-%EC%BB%A4%ED%8C%85\" aria-label=\"타임라인 커팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타임라인 커팅</h4>\n<ul>\n<li>여러 타임라인이 동시에 진행될 때 서로 순서를 맞추는 방법</li>\n<li>고차 동작(고차 함수로 만든 동작)으로 구현한다.</li>\n<li>다음 액션을 진행하기 위해 다른 타임라인의 액션을 기다리는 지점을 커팅하면 된다.</li>\n<li>이를 통해 액션들이 올바른 순서로 실행되도록 보장할 수 있다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#chap-2-%ED%98%84%EC%8B%A4%EC%97%90%EC%84%9C%EC%9D%98-%ED%95%A8%EC%88%98%ED%98%95-%EC%82%AC%EA%B3%A0\">Chap 2. 현실에서의 함수형 사고</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0\">액션과 계산, 데이터</a></p>\n<ul>\n<li><a href=\"#%EC%95%A1%EC%85%98\">액션</a></li>\n<li><a href=\"#%EA%B3%84%EC%82%B0\">계산</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0\">데이터</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B3%80%EA%B2%BD-%EA%B0%80%EB%8A%A5%EC%84%B1%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%BD%94%EB%93%9C-%EB%82%98%EB%88%84%EA%B8%B0\">변경 가능성에 따라 코드 나누기</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%BC%EA%B8%89-%EC%B6%94%EC%83%81\">일급 추상</a></p>\n<ul>\n<li><a href=\"#%ED%83%80%EC%9E%84%EB%9D%BC%EC%9D%B8-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8%E3%84%B9\">타임라인 다이어그램ㄹ</a></li>\n<li><a href=\"#%ED%83%80%EC%9E%84%EB%9D%BC%EC%9D%B8-%EC%BB%A4%ED%8C%85\">타임라인 커팅</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 21, 2023","title":"쏙쏙 들어오는 함수형 코딩 Chapter 2","categories":"스터디 책","author":"제이든","emoji":"🖍️"},"fields":{"slug":"/from-time-to-time/study/ssok-ssok-functional/ch-2/"}},"prev":{"id":"f9d6b3a6-3828-54c6-8597-f51477a0f00d","html":"<h2 id=\"-성장일지-60\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\" aria-label=\" 성장일지 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 6.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/>\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!<br/>\n🍉 (6.0)&#x3C;완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기.<br/></p>\n<ul>\n<li>🍉 (6.1)&#x3C;수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자</li>\n</ul>\n</blockquote>\n<h2 id=\"-오늘의-감정\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\" aria-label=\" 오늘의 감정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈 오늘의 감정</h2>\n<p>뭔가 그래도 고민을 끝내고 방향을 잘 잡아서 가는 것 같아서 기분이 좋다. 지금 이 분야가 너무 좋은 만큼 방향이 조금은 잘못되어도 괜찮으니(사실 옳은 방향이란 거 자체가\n없으니까) 열심히 꾸준히 잘 나아가자. 그리고 내가 원하는 삶을 살면 된다. 이미 이 개발 세상을 알게 된 것만해도 반은 성공이니까!</p>\n<h2 id=\"-오늘의-고민\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-label=\" 오늘의 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫧 오늘의 고민</h2>\n<h3 id=\"a라는-함수에-대한-test-코드-작성-시-b라는-함수에-의존하는-건-괜찮은가\" style=\"position:relative;\"><a href=\"#a%EB%9D%BC%EB%8A%94-%ED%95%A8%EC%88%98%EC%97%90-%EB%8C%80%ED%95%9C-test-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EC%8B%9C-b%EB%9D%BC%EB%8A%94-%ED%95%A8%EC%88%98%EC%97%90-%EC%9D%98%EC%A1%B4%ED%95%98%EB%8A%94-%EA%B1%B4-%EA%B4%9C%EC%B0%AE%EC%9D%80%EA%B0%80\" aria-label=\"a라는 함수에 대한 test 코드 작성 시 b라는 함수에 의존하는 건 괜찮은가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A라는 함수에 대한 test 코드 작성 시, B라는 함수에 의존하는 건 괜찮은가?</h3>\n<p>오늘 LinkedList를 직접 구현하고 모든 메서드에 대해서 test 코드까지 작성해봤다. 그런데 테스트 코드 내에서도 메서드 사용에 대한 의존성이 생기는 것 같아서 조금 고민이 됐다.\n예를 들면 아래의 코드와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LinkedList의 deleteAt을 통해 데이터를 특정 index에서 제거할 수 있다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">insertLast</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">insertLast</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">insertLast</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">insertLast</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">insertLast</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list의 0번째 값을 제거하면 data 0의 값을 가진 Node가 반환된다..\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> deletedValue <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">deleteAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>deletedValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list의 2번째 값을 제거하면 data 3의 값을 가진 Node가 반환된다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> deletedValue <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">deleteAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>deletedValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 코드는 LinkedList의 deleteAt 메서드를 테스트하는 코드이다. 그런데 이 테스트 코드는 LinkedList의 insertLast 메서드에 의존하고 있다. 그래서 만약 insertLast 메서드가\n잘못 구현되어 있다면 deleteAt 메서드를 테스트하는데 문제가 생길 수 있다. 이런 경우에는 어떻게 해야할지가 오늘 가장 큰 고민이었다. 고민에 대해 찾아본 결과 아래와 같은 방법들이 있었다.</p>\n<ul>\n<li>테스트 대상 함수가 의존하는 함수를 테스트하는 코드는 별도로 작성한다.</li>\n<li>테스트 대상 함수가 의존하는 함수를 테스트하는 코드는 테스트 대상 함수를 테스트하는 코드보다 먼저 작성하고 실행한다.</li>\n<li>테스트 코드에서는 테스트 대상 함수만을 테스트하고, 테스트 대상 함수가 의존하는 함수는 mock 함수로 대체한다.</li>\n</ul>\n<p>1번과 2번의 방법은 이미 작성해두어서 <code class=\"language-text\">이렇게만 해도 의존하는 메서드에 대해 test가 된거니까 괜찮겠지?</code> 생각은 했다. 다음엔 3번 방법으로 mock 함수를 적용해봐야겠다.</p>\n<h2 id=\"️-오늘의-경험\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\" aria-label=\"️ 오늘의 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️ 오늘의 경험</h2>\n<h3 id=\"자료-구조를-구현하고-테스트-코드를-작성한-경험\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B3%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%9C-%EA%B2%BD%ED%97%98\" aria-label=\"자료 구조를 구현하고 테스트 코드를 작성한 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자료 구조를 구현하고 테스트 코드를 작성한 경험</h3>\n<p>간단한 util 함수에 대해서 테스트 코드는 작성해봤지만, 이렇게 하나의 자료 구조를 구현하고 메서드들을 전부 테스트 코드로 작성해본 경험은 처음이었다. 덕분에 이제 공식문서를 보지 않고\n어느정도 테스트 코드를 작성할 수 있을 것 같다. 솔직히 테스트 코드가 조금 귀찮긴 했지만, 실제로 테스트 코드를 작성하는 와중에도 리팩토링하는 데에 도움이 많이 돼서 <code class=\"language-text\">이래서 테스트 코드를 작성하는구나</code> 싶었다.</p>\n<h3 id=\"함수형-프로그래밍-액션과-계산-데이터\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"함수형 프로그래밍 액션과 계산 데이터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 프로그래밍: 액션과 계산, 데이터</h3>\n<p>쏙쏙 들어오는 함수형 코딩을 보면서 코드에 대한 관점을 새롭게 정립하고 있다. 객체지향을 처음 어느정도 이해했다고 느꼈을 때도, 너무 신세계였는데 지금 함수형 또한 그런 느낌이다.\n생각해본 적이 없던 방식으로 코드를 짜고 바라보게 되니까 너무 신선하고 재미있다. 그나마 리액트가 함수형을 많이 닮아 있어서 그런지 이해하기가 조금 더 쉬운 것 같다. 더 열심히 공부해서\n함수형에 대한 이해도가 높아지고, 실제 리액트 코드를 작성함에 있어서도 실력이 늘었으면 좋겠다.</p>\n<h2 id=\"-오늘의-교훈\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\" aria-label=\" 오늘의 교훈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐾 오늘의 교훈</h2>\n<p>세상에 의미없는 시간은 없다. 내가 겪는 모든 시간과 경험들이 쌓이고 쌓여서 반드시 빛을 낸다. 이건 부정할 수 없는 사실이다. 그저 나를 믿고 나의 길을 나아가자!</p>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪵 참고</h2>\n<ul>\n<li><a href=\"https://jestjs.io/\">Jest 공식문서</a></li>\n<li>[책] 쏙쏙 들어오는 함수형 코딩</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\">🚤 성장일지 6.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\">🌈 오늘의 감정</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\">🫧 오늘의 고민</a></p>\n<ul>\n<li><a href=\"#a%EB%9D%BC%EB%8A%94-%ED%95%A8%EC%88%98%EC%97%90-%EB%8C%80%ED%95%9C-test-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EC%8B%9C-b%EB%9D%BC%EB%8A%94-%ED%95%A8%EC%88%98%EC%97%90-%EC%9D%98%EC%A1%B4%ED%95%98%EB%8A%94-%EA%B1%B4-%EA%B4%9C%EC%B0%AE%EC%9D%80%EA%B0%80\">A라는 함수에 대한 test 코드 작성 시, B라는 함수에 의존하는 건 괜찮은가?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\">☀️ 오늘의 경험</a></p>\n<ul>\n<li><a href=\"#%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B3%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%9C-%EA%B2%BD%ED%97%98\">자료 구조를 구현하고 테스트 코드를 작성한 경험</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%95%A1%EC%85%98%EA%B3%BC-%EA%B3%84%EC%82%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0\">함수형 프로그래밍: 액션과 계산, 데이터</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\">🐾 오늘의 교훈</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B0%B8%EA%B3%A0\">🪵 참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 22, 2023","title":"230722(토)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/7/22-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/from-time-to-time/study/ssok-ssok-functional/ch-3/","nextSlug":"/from-time-to-time/study/ssok-ssok-functional/ch-2/","prevSlug":"/steadily/growth-diary/2023/7/22-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}