{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/monthly-review/2023/9/","result":{"data":{"cur":{"id":"d620af6e-856b-5faf-af30-0a6eed9aa68a","html":"<h1 id=\"-월간회고-v10\" style=\"position:relative;\"><a href=\"#-%EC%9B%94%EA%B0%84%ED%9A%8C%EA%B3%A0-v10\" aria-label=\" 월간회고 v10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚪 월간회고 v1.0</h1>\n<ul>\n<li>너무나 빠르게 가는 시간을 조금이라도 뒤돌아보고자 작성하는 한달 단위의 회고</li>\n<li>다른 카테고리들보다 아직 정해진 게 없다. 천천히 정리해나아가는 걸로! 최대한 러프하게 생각나는 핵심들을 적어보도록 하자!</li>\n</ul>\n<h2 id=\"원티드-인턴십-마무리\" style=\"position:relative;\"><a href=\"#%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%9D%B8%ED%84%B4%EC%8B%AD-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"원티드 인턴십 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원티드 인턴십 마무리</h2>\n<p>길다고 생각했던 한달이 빠르게 지나, 인턴십이 마무리되었다.(개발 세션은 마무리되고 커리어 세션은 아직 진행중이지만 ㅎㅎ) 솔직히 기대했던 것보다 너어무 내용이 좋아서 주변 동료들에게도 추천했을 정도였다. 아무래도 멘토 역할을 맡아주신 연욱님의 역할이 가장 컸다. 단순히 지식을 전달해주는 느낌의 개발 세션이 아니라, 언어 자체의 가치관과 라이브러리의 기원(?) 등의 근본적인 부분에 집중한 세션을 구성해주셔서 정말 도움이 많이 되는 시간이었다. 그리고 동일한 프로젝트를 개인적으로 진행하고 동료와 함께 서로 회의를 통해 best practice로 재구현하는 과정은 이전에는 해본 적 없는 새로운 느낌이었다. 다른 사람의 코드를 읽고 보는 게 쉽지 않다는 것도 알게 되었고 누군가에겐 내 코드도 이런 느낌일 거라 생각하니, 더더더 알아보기 좋은 코드를 작성하는 것에 욕심이 생겼다. 나도 언젠간 반드시 내가 가진 지식과 생각들을 다른 사람에게 잘 전달할 수 있는 개발자가 되고 싶다. 꼭!!!</p>\n<h2 id=\"포텐데이-프로젝트\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%ED%85%90%EB%8D%B0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"포텐데이 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포텐데이 프로젝트</h2>\n<p>포텐데이는 2~3만원의 비용만 지불하면 기획자, 디자이너, 개발자가 모여 10일 간 해커톤을 진행할 수 있게 해주는 프로그램이다. 사실 그동안 같은 개발 직군과의 협업은 여러번 해봤지만 기획자, 디자이너와 협업을 해본 경험이 없었다. 또, 실제로 사람들이 유용하게 써볼 수 있는 서비스를 개발하고 싶다는 욕심이 생겨서 포텐데이에 지원했다. 다행히(?) 기획자, 디자이너, 백엔드 모두 좋은 분들이었고 추석 연휴 직전까지 정말 몰입해서 개발을 할 수 있있다. 나는 개발자로서의 성장도 정말 좋지만, 우리 서비스에 대한 관심과 애정을 많이 갖는 개발자가 되고 싶기에 기획부터 디자인 회의에 전부 참여했다. 프로젝트 아이디어부터 기획, 디자인 프로토타입까지 열심히 참여하고 주어진 약 5일 정도동안 정말 열심히 개발했다.(기획과 디자인 또한 병렬적으로 같이 가느라 코드에 많은 신경은 쓰지 못했지만… 리팩토링하면 되니까!) 그리고 이렇게 개발하면서 내 스스로에게 확인하고 싶은 것도 있었다. <code class=\"language-text\">나는 정말 스타트업의 환경을 원하고 있는걸까? 어느정도 문화가 잘 자리잡은 대기업에 가고 싶으면서 쉽지 않을 것 같으니까 도피하는 건 아닐까?</code> 에 대한 의문이었다. 포텐데이 덕분에 정말 명쾌하게 해결되었는데, 결론은 <code class=\"language-text\">나는 대기업, 스타트업을 떠나서 열심히 빠르게 치고 달리는 곳에 속하고 싶다는 것</code>이다. 대기업에서도 어떤 팀은 빠르게 서비스를 개발하느라 바쁘게 살아갈 수도 있고, 어떤 스타트업은 더 나아가지 못하고 있을 수도 있다. 그러나 아무래도 대부분의 스타트업들이 더 빠르고 애자일하게 실패를 거듭하고 확인하면서 달릴 것이라 생각이 들어서 내가 사랑할 수 있는 서비스를 개발할 수 있는 스타트업을 가고 싶다.</p>\n<h2 id=\"nextjs\" style=\"position:relative;\"><a href=\"#nextjs\" aria-label=\"nextjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js</h2>\n<p><code class=\"language-text\">지금 내가 하는 게 맞을까?</code> 생각했던 Next를 배우기 시작했다. 사실 아직도 React 자체에 대해서 알지 못하는 게 많은데, 이렇게 Next를 배우는 게 맞나 싶었다. 이런 고민을 하고 있을 때, 동료인 나니가 해준 말이 도움이 많이 되었다. 나니 같은 경우는 가고 싶은 회사의 기술 스택에 Next가 있어서 일단 배우는 게 좋겠다고 생각했다는 것이다. 이 말을 듣고 눈여겨보았던 회사들의 기술 스택을 열심히 서치했고 절대적이진 않지만 지금 배워도 괜찮겠다는 생각에 공부를 시작했다. 또, React랑 완전 별개의 기술이 아니라 좀더 자유분방한 React를 잡아주는 기술이라 Next를 공부하면 React에 대한 이해도도 높아질 것 같아서 시작하기로 했다. 프레임워크가 주는 여러가지 정해진 것들이 어색하긴 하지만 많은 개발자들이 고민을 거듭해서 만들어낸 여러 개발자 경험이 참 대단하다고 느껴지면서도 이런 프레임워크를 개발해보고 싶다는 생각이 들기도 한다.</p>\n<h2 id=\"다가올-10월에-대한-다짐\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EA%B0%80%EC%98%AC-10%EC%9B%94%EC%97%90-%EB%8C%80%ED%95%9C-%EB%8B%A4%EC%A7%90\" aria-label=\"다가올 10월에 대한 다짐 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다가올 10월에 대한 다짐</h2>\n<p>이제 슬슬 쌀쌀해지는 가을… 10월이 왔다. 결과가 어떨지는 모르겠지만, 이제 내가 가진 것들을 가지고 진짜 지원을 시작해보려 한다. 그러면서 계속 이력서를 수정하고 내 프로젝트를 진행하고 리팩토링하고… 나아가볼 생각이다. 너무 급하지도 말고 너무 지치지도말고 매일 꾸준히 노력하면서 나아가자.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%9D%B8%ED%84%B4%EC%8B%AD-%EB%A7%88%EB%AC%B4%EB%A6%AC\">원티드 인턴십 마무리</a></li>\n<li><a href=\"#%ED%8F%AC%ED%85%90%EB%8D%B0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\">포텐데이 프로젝트</a></li>\n<li><a href=\"#nextjs\">Next.js</a></li>\n<li><a href=\"#%EB%8B%A4%EA%B0%80%EC%98%AC-10%EC%9B%94%EC%97%90-%EB%8C%80%ED%95%9C-%EB%8B%A4%EC%A7%90\">다가올 10월에 대한 다짐</a></li>\n</ul>\n</div>","excerpt":"🚪 월간회고 v1.0 너무나 빠르게 가는 시간을 조금이라도 뒤돌아보고자 작성하는 한달 단위의 회고 다른 카테고리들보다 아직 정해진 게 없다. 천천히 정리해나아가는 걸로! 최대한 러프하게 생각나는 핵심들을 적어보도록 하자! 원티드 인턴십 마무리 길다고 생각했던 한달이 빠르게 지나, 인턴십이 마무리되었다.(개발 세션은 마무리되고 커리어 세션은 아직 진행중이지만 ㅎㅎ) 솔직히 기대했던 것보다 너어무 내용이 좋아서 주변 동료들에게도 추천했을 정도였다. 아무래도 멘토 역할을 맡아주신 연욱님의 역할이 가장 컸다. 단순히 지식을 전달해주는 느낌의 개발 세션이 아니라, 언어 자체의 가치관과 라이브러리의 기원(?) 등의 근본적인 부분에 집중한 세션을 구성해주셔서 정말 도움이 많이 되는 시간이었다. 그리고 동일한 프로젝트를 개인적으로 진행하고 동료와 함께 서로 회의를 통해 best practice로 재구현하는 과정은 이전에는 해본 적 없는 새로운 느낌이었다. 다른 사람의 코드를 읽고 보는 게 쉽지 …","frontmatter":{"date":"October 01, 2023","title":"23년 9월","categories":"월간회고","author":"제이든","emoji":"🖼️"},"fields":{"slug":"/steadily/monthly-review/2023/9/"}},"next":{"id":"00ddce2f-c096-509e-ac80-c4158af43eaf","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"nextjs\" style=\"position:relative;\"><a href=\"#nextjs\" aria-label=\"nextjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js</h3>\n<h4 id=\"serverless\" style=\"position:relative;\"><a href=\"#serverless\" aria-label=\"serverless permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Serverless</h4>\n<p>서버리스는 <code class=\"language-text\">서버가 없다</code>기보다는 개발자가 따로 <code class=\"language-text\">서버를 구축하고 관리할 필요가 없다</code>는 정도의 의미이다. Next.js에서는 api 폴더만 만들어서 그 안에 정해진 함수를 작성하면 서버리스로 api를 만들 수 있다. 이렇게 만든 api는 <code class=\"language-text\">https://domain/api/</code>와 같은 형태로 접근할 수 있다. Next.js의 정확한 서버 구축 방식이 어떻게 되는지는 모르겠지만 <a href=\"https://vercel.com/partners/aws\">vercel과 aws의 파트너십</a>을 보면 aws의 람다를 통해서 서버리스를 구현하는 것 같다.</p>\n<h4 id=\"loading-ui\" style=\"position:relative;\"><a href=\"#loading-ui\" aria-label=\"loading ui permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loading UI</h4>\n<p>Next는 리액트의 Suspense Boundary를 사용하여 로딩 UI를 편하게 구현할 수 있게 해준다. 로딩을 주고 싶은 라우트에서 <code class=\"language-text\">loading.tsx</code>를 만들면 된다. 이 때, 우리가 개발하는 개발 환경(dev mode)에서는 언제나 SSR이므로 전부 다 로딩이 적용된다.(요청마다 렌더링되니까) 그러나 실제 배포 환경(prod mode)에서 SSG로 렌더링하는 컴포넌트같은 경우, 이미 서버에서 html을 만들어서 보내기 때문에 로딩이 적용되지 않는다. 이를 인지하도록 하자!</p>\n<h4 id=\"error-ui\" style=\"position:relative;\"><a href=\"#error-ui\" aria-label=\"error ui permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error UI</h4>\n<p>Next는 Loading과 비슷하게 리액트의 Error Boundary를 사용하여 에러 UI를 편하게 구현할 수 있게 해준다. 에러를 주고 싶은 라우트에서 <code class=\"language-text\">error.tsx</code>를 만들면 된다. 이 때, 중요한 점은 Error 컴포넌트는 언제나 클라이언트 컴포넌트로 구현해야된다는 점이다! 왜 그럴까? 구글링해봐도 명확한 이유는 나오지 않지만, 생각해보면 브라우저 즉, 클라이언트 단에서 어떤 로직이 처리되다가 에러가 발생해야지 에러 페이지라는 게 존재하기 때문일 것이다. 애초에 서버 컴포넌트에서 발생하는 에러라면 빌드 자체가 안되어야하는 게 맞을테니까. 그리고 보통 에러가 발생한 이후 해당 에러에 대한 로그를 남기는 등의 작업을 처리해야하는데, 이를 위해서는 useEffect를 통해 처리하기 때문에 클라이언트 컴포넌트가 될 수밖에 없는 게 아닐까 싶다.\n또 하나 주의할 점은 해당 라우트에서 layout의 children이 아닌 그 바깥 부분에서 발생하는 에러는 현재 라우트의 error 컴포넌트가 잡아낼 수 없다는 점이다. 해당 라우트에서의 Error Boundary는 children을 wrapping하기 때문이다. 즉, 그 바깥에 대한 에러는 상위 컴포넌트의 Error Boundary가 잡아낼 수 있다.</p>\n<h4 id=\"image-컴포넌트\" style=\"position:relative;\"><a href=\"#image-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"image 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image 컴포넌트</h4>\n<p>와… Next.js의 여러 api 중 Image 컴포넌트가 가장 신기했다. 어떻게 Image 컴포넌트 하나만으로 이미지 리소스에 대한 최적화를 이렇게까지 이뤄냈지… 일단 기본적으로 <a href=\"https://nextjs.org/docs/pages/building-your-application/optimizing/images\">여기를 참고</a>하면 좋을 것 같다. 일반적으로 이미지는 웹 페이지에서 큰 비중을 차지하고 특히나 LCP(Largest Contentful Paint) 성능에 상당한 영향을 준다고 한다. 그만큼 이미지 최적화를 잘하면 전체 렌더링 시간을 많이 줄일 수 있다는 것이다. Next는 이미지에 대해 크기 최적화, 외관 안정성(layout shift가 안일어난다. => 이미지가 렌더링되지 않아도 미리 사이즈를 잡아둬서 리플로우가 일어나지 않게 한다.), 빠른 페이지 로드(유저가 특정 이미지를 뷰포트에 보이게 되었을 때, lazy loading으로 불러온다) 등을 제공한다.(진짜 감동임…🥹)</p>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>Next에 대한 개념을 배우면 배울수록 라이브러리가 아닌 프레임워크의 힘을 느낀다. 솔직히 처음에는 내가 아는 리액트와는 다르게 너무 굳어있는 느낌..? 정해진 규칙대로 딱딱 체스말을 놔야하는 체스 게임같았다. 뭔가 견고하고 튼튼하고 체계적이긴 한데, 조금은 억압되는 느낌. 그런데 배우면 배울수록 왜 리액트 공식문서에서도 가급적 리액트를 사용할 때 Next를 권장하는지 알 것 같다. 아직 많은 것들이 바뀌는 중이기도 하지만, 정말 정말 체계적으로 최적화도 잘 되어있고 좋은 개발자 경험을 제공해주는 거 같다. 또, 솔직히 리액트는 다른 사람이 짠 코드를 보면 폴더 구조부터 사용하는 라이브러리까지 너무 천차만별이라 코드를 이해하는 데 힘들기도 하고 협업도 좀 힘든 느낌이었는데, Next는 그런 부분들이 훨씬 쉬워지지 않을까 싶다. 얼른 Next로도 프로젝트를 시작해보고 싶다!!!!!! (두근두근하다잉)</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://nextjs.org/\">Next.js 공식문서</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li>\n<p><a href=\"#nextjs\">Next.js</a></p>\n<ul>\n<li><a href=\"#serverless\">Serverless</a></li>\n<li><a href=\"#loading-ui\">Loading UI</a></li>\n<li><a href=\"#error-ui\">Error UI</a></li>\n<li><a href=\"#image-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\">Image 컴포넌트</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 29, 2023","title":"230929(금) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/29/"}},"prev":{"id":"0dd59d02-08f0-5aca-bc2e-27a6f7beac48","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"nextjs\" style=\"position:relative;\"><a href=\"#nextjs\" aria-label=\"nextjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js</h2>\n<p>기존에 React로 진행했던 베스트 라빈스 프로젝트를 Next.js로 마이그레이션 하기로 했다. 사실 처음부터 베스트 라빈스는 Next로 진행하고 싶었다. 왜냐하면 서비스 제공 및 유지 보수에 초점을 맞추고 시작한 프로젝트라서 SEO에 강점을 주고 싶었기 때문이다. 하지만 프로젝트 시작 전에 급하게 Next를 배우면서 진행하기에는 주어진 10일이라는 시간 동안 MVP 조차 완성하지 못할 거 같아서 React로 진행했었다. MVP 개발이 끝나고 마침 시간이 나서 Next로 마이그레이션을 하기로 했다.</p>\n<h3 id=\"pwa-적용과-open-graph\" style=\"position:relative;\"><a href=\"#pwa-%EC%A0%81%EC%9A%A9%EA%B3%BC-open-graph\" aria-label=\"pwa 적용과 open graph permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PWA 적용과 Open Graph</h3>\n<p>Next도 React와 마찬가지로 PWA를 지원한다. 그 방법 자체가 크게 어렵지 않은데 간단하게 정리하자면 아래와 같다.</p>\n<ol>\n<li><code class=\"language-text\">next-pwa</code> 패키지 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i next-pwa</code></pre></div>\n<ol start=\"2\">\n<li>next.config.js 내용 수정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> withPWA <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'next-pwa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">dest</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// disable: process.env.NODE_ENV === 'development',</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withPWA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// next.js config</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>개인적으로 위의 config에서 <code class=\"language-text\">disable: process.env.NODE_ENV === 'development'</code>은 설정하는 걸 추천한다. 왜냐하면 <code class=\"language-text\">npm run dev</code>로 개발 환경을 실행할 때마다 pwa 빌드 파일이 새로 생성되기 때문이다.(commit할 때마다 빌드 파일이 새로 생성돼서 굉장히 불편하다.)</p>\n</blockquote>\n<blockquote>\n<p>추가로 위의 <code class=\"language-text\">disable</code> 설정을 하지 않고 일단 <code class=\"language-text\">npm run build</code>를 통해서 <code class=\"language-text\">public</code>에 <code class=\"language-text\">workbox-*.js</code>와 <code class=\"language-text\">sw.js</code>(service-worker)가 생성되는지 확인하자.</p>\n</blockquote>\n<ol start=\"3\">\n<li><code class=\"language-text\">public</code>에 <code class=\"language-text\">manifest.json</code> 생성</li>\n</ol>\n<p>manifest.json을 설정하여 웹 앱을 설치할 때 사용할 아이콘, 이름, 설명 등을 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Best Robbins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Best Robbins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Best Robbins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/icons/icon-72x72.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"72x72\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/icons/icon-96x96.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"96x96\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ... 중략</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"standalone\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theme_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>head에 meta 태그 추가</li>\n</ol>\n<ul>\n<li>일반적인 html 혹은 next 12 버전에서는 <code class=\"language-text\">next/head</code>를 사용하여 Head 컴포넌트 내부에 <code class=\"language-text\">&lt;meta /></code> 형식으로 추가할 수 있다.</li>\n<li>하지만 next 13 버전에서는 head 추가 방법이 변경되었기 때문에 <code class=\"language-text\">가장 최상단의 layout.tsx 혹은 page.tsx</code>에 아래와 같이 추가해주면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> metadata<span class=\"token operator\">:</span> Metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  metadataBase<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">URL</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://best-robbins-fe.vercel.app/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'베스트라빈스'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token operator\">:</span> <span class=\"token string\">'%s | 베스트라빈스'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  description<span class=\"token operator\">:</span> <span class=\"token string\">'최고의 아이스크림 조합을 추천받아보세요!'</span><span class=\"token punctuation\">,</span>\n  manifest<span class=\"token operator\">:</span> <span class=\"token string\">'/manifest.json'</span><span class=\"token punctuation\">,</span>\n  openGraph<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'website'</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'베스트라빈스'</span><span class=\"token punctuation\">,</span>\n    description<span class=\"token operator\">:</span> <span class=\"token string\">'최고의 아이스크림 조합을 추천받아보세요!'</span><span class=\"token punctuation\">,</span>\n    images<span class=\"token operator\">:</span> <span class=\"token string\">'https://kr.object.ncloudstorage.com/best-robbins/logo/logo_string.svg'</span><span class=\"token punctuation\">,</span>\n    locale<span class=\"token operator\">:</span> <span class=\"token string\">'ko_KR'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'https://best-robbins-fe.vercel.app/'</span><span class=\"token punctuation\">,</span>\n    siteName<span class=\"token operator\">:</span> <span class=\"token string\">'베스트라빈스'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>여기서 openGraph는 우리가 흔히 <code class=\"language-text\">og:image</code>로 사용하는 메타 태그를 설정하는 것이다. Open Graph는 페이스북에서 만든 메타 태그로, 웹 페이지가 소셜 미디어에 공유될 때 미리보기로 보여지는 정보를 설정할 수 있다. 이를 통해 소셜 미디어에서 공유될 때 미리보기가 잘 나오도록 할 수 있다.</p>\n</blockquote>\n<p>이제 끝이 났으면 빌드 후, <code class=\"language-text\">npm run start</code>로 서버를 실행하고 <code class=\"language-text\">localhost:3000</code>에 접속해보자. 그리고 라이트하우스를 실행하면 PWA가 적용된 것을 확인할 수 있다.</p>\n<h3 id=\"로컬-폰트-적용하기\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC-%ED%8F%B0%ED%8A%B8-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"로컬 폰트 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬 폰트 적용하기</h3>\n<p>next에서 제공하는 <code class=\"language-text\">next/font/google</code>을 사용해서 구글 폰트를 적용할 수 있다. 하지만 로컬 폰트를 적용할 때는 <code class=\"language-text\">next/font/local</code>을 사용한다.</p>\n<p>먼저 원하는 폰트를 다운로드 받는다. 나는 <a href=\"https://noonnu.cc/font_page/694\">Pretendard</a>를 사용했다. <code class=\"language-text\">public/fonts</code>에 폰트 파일을 넣는다. 그리고 아래와 같이 설정하면 전역에 폰트가 적용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./globals.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> Metadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> localFont <span class=\"token keyword\">from</span> <span class=\"token string\">'next/font/local'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Pretendard <span class=\"token operator\">=</span> <span class=\"token function\">localFont</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  src<span class=\"token operator\">:</span> <span class=\"token string\">'../../public/fonts/PretendardVariable.woff2'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... 중략</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">RootLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ko<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Pretendard<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>확실히 방향을 정하고 다시 코딩을 하니까 너무 재미있다..ㅠㅠ 개발 자체에서 오는 스트레스도 있지만 개발하지 않을 때 오는 스트레스가 더 크고 힘든 것 같다. 그리고 보통은 새로운 서비스를 개발하기 위한 새로운 코드를 작성하는 게 재미있다고 생각했는데, 오늘 마이그레이션도 그렇고 리팩토링도 그렇고 오히려 유지보수하고 있는 코드를 개선하는 게 더 재미있는 것 같다. 그래서 앞으로는 새로운 서비스를 개발하는 것보다 기존에 개발했던 서비스를 개선하는 것에 더 집중해서 개발할 예정이다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://nextjs.org/docs/app/building-your-application/optimizing/fonts#local-fonts\">Next.js 공식문서: local-font</a></li>\n<li><a href=\"https://www.npmjs.com/package/next-pwa\">Next-pwa</a></li>\n<li><a href=\"https://velog.io/@ghenmaru/Next-PWA-%EC%9B%B9%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0\">Velog: Next-pwa</a></li>\n<li><a href=\"https://noonnu.cc/font_page/694\">Pretendard</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#nextjs\">Next.js</a></p>\n<ul>\n<li><a href=\"#pwa-%EC%A0%81%EC%9A%A9%EA%B3%BC-open-graph\">PWA 적용과 Open Graph</a></li>\n<li><a href=\"#%EB%A1%9C%EC%BB%AC-%ED%8F%B0%ED%8A%B8-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">로컬 폰트 적용하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"October 05, 2023","title":"231005(목) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/5/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/monthly-review/2023/9/","nextSlug":"/steadily/growth-diary/2023/9/29/","prevSlug":"/steadily/growth-diary/2023/10/5/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}