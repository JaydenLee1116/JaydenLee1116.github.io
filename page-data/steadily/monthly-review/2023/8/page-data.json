{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/monthly-review/2023/8/","result":{"data":{"cur":{"id":"1433a17e-1231-5fc2-a3db-210b397cb433","html":"<h1 id=\"-월간회고-v10\" style=\"position:relative;\"><a href=\"#-%EC%9B%94%EA%B0%84%ED%9A%8C%EA%B3%A0-v10\" aria-label=\" 월간회고 v10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚪 월간회고 v1.0</h1>\n<ul>\n<li>너무나 빠르게 가는 시간을 조금이라도 뒤돌아보고자 작성하는 한달 단위의 회고</li>\n<li>다른 카테고리들보다 아직 정해진 게 없다. 천천히 정리해나아가는 걸로! 최대한 러프하게 생각나는 핵심들을 적어보도록 하자!</li>\n</ul>\n<h2 id=\"원티드-인턴십\" style=\"position:relative;\"><a href=\"#%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%9D%B8%ED%84%B4%EC%8B%AD\" aria-label=\"원티드 인턴십 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원티드 인턴십</h2>\n<p>원티드 인턴십 프로그램에 지원했다. 4주동안의 개발 세션 과정과 2주동안의 커리어 세션 과정으로 나누어지는 인턴십 프로그램이다. 지금 이 글을 적는 시점에는 이미 조금 진행을 마친 상태인데, 개발 세션 과정에 너무너무너무 만족하고 있다. 리액트에 대한 기본기를 매주 미션으로 익히고 팀원들과 함께 다시 한번 협업하며 코드를 작성하니 더 성장하는 기분이 든다.(같은 기획과 내용이 주어져도 이렇게 다르게 코드를 짠다는 게 참 신기하다.ㅋㅋㅋ)</p>\n<h2 id=\"함수형-코딩\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%EC%BD%94%EB%94%A9\" aria-label=\"함수형 코딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 코딩</h2>\n<p>스터디로 진행 중인 <code class=\"language-text\">쏙쏙 함수형 코딩</code> 책을 거의 다 읽었다. 여전히 객체지향을 처음 접했을 때만큼의 임팩트는 없지만, 막연하고 추상적이었던 함수형 코딩에 대해서 조금은 실용적으로 배울 수 있어서 도움이 됐다. 아무래도 이런 코딩 패러다임을 배울 때, 내가 자주 쓰는 스택인 리액트를 생각 안해볼 수가 없는데, 리액트는 어떤 패러다임에 가까운건지 아직도 잘 모르겠다. 다양한 훅이 등장하면서 사실상 이제 거의 함수 컴포넌트로 코드를 작성하지만, 리액트에서도 함수형 컴포넌트가 아닌 함수 컴포넌트라고 표현하는 걸 보면 함수형이라기보단 함수로 작성된 컴포넌트의 의미가 크다고 생각한다.</p>\n<h2 id=\"자료구조-라이브러리-프로젝트\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\" aria-label=\"자료구조 라이브러리 프로젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자료구조 라이브러리 프로젝트</h2>\n<p>스택, 큐와 같은 좀더 원시적인(?) 자료구조 형태를 라이브러리로 배포하는 프로젝트를 진행했다. 아무래도 은재님의 인강 영향이 컸는데, 매번 서비스와 관련된 프로젝트만 하다가 라이브러리 코드를 작성하고 npm에 배포까지 해본 게 정말 재미있었다. 아직은 수정할 것도 많고 보완할 것도 많지만, 사용 타겟이 일반 유저가 아닌 개발자라는 점에서 더 신선했고 재미있는 것 같다. 조금은 다른 이야기지만, 일반 유저에게 제공되는 서비스뿐 아니라 개발자에게 제공되는 백오피스를 개발하는 팀에서 일해봐도 재미있겠다는 생각이 들었다.</p>\n<h2 id=\"다짐\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%A7%90\" aria-label=\"다짐 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다짐</h2>\n<p>나에게 개발의 시작은 <code class=\"language-text\">서비스를 만들기 위한 것</code>이었다. 나중에 내가 만들 서비스를 좀더 쉽게 만들고 알리는 방법은 개발이라고 생각했기 때문이다. 아무리 내가 많은 기획과 생각들이 있더라도 정작 내가 이걸 만들어낼 힘이 없다면, 메인 포지션에서 벗어나는 느낌이 든다고 해야할까..? 그래서 개발을 시작했다. 지금은 서비스의 관점뿐 아니라 엔지니어의 관점에서도 개발을 잘하고 싶은 욕심이 많이 생겼다. 어떻게 하면 좀더 알아보기 좋은 코드를 쓸 수 있을지, 어떻게 하면 조금 더 적은 input으로 많은 output을 뽑아낼 수 있을지 등을 고민하게 되었다. 단순하게 말하면 개발 자체를 잘하고 싶어진 것이다. 이번 8월은 코드스쿼드 개인 대화 시간에 마스터인 크롱께서 하신 말씀을 새기고 실행한 시간이 아니었나 싶다. 어떻게 하면 좀더 개발을 잘할 수 있냐는 나의 질문에, <code class=\"language-text\">개발을 잘하는 사람들은 그냥 개발을 오래, 많이 한다. 그냥 정말 개발을 많이 해봐라. 그러면 잘하게 될 것이다.</code>라고 우문현답을 주셨다. 물론 더 고민하고 생각해서 효율적으로 나아가는 방법도 있지만, 일단 개발을 하는 절대적인 시간을 늘리는 게 정말 중요한 것 같다. 그런 의미에서 이번 한 달도 잘 보낸 것 같다. ☺️</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%9D%B8%ED%84%B4%EC%8B%AD\">원티드 인턴십</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%EC%BD%94%EB%94%A9\">함수형 코딩</a></li>\n<li><a href=\"#%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8\">자료구조 라이브러리 프로젝트</a></li>\n<li><a href=\"#%EB%8B%A4%EC%A7%90\">다짐</a></li>\n</ul>\n</div>","excerpt":"🚪 월간회고 v1.0 너무나 빠르게 가는 시간을 조금이라도 뒤돌아보고자 작성하는 한달 단위의 회고 다른 카테고리들보다 아직 정해진 게 없다. 천천히 정리해나아가는 걸로! 최대한 러프하게 생각나는 핵심들을 적어보도록 하자! 원티드 인턴십 원티드 인턴십 프로그램에 지원했다. 4주동안의 개발 세션 과정과 2주동안의 커리어 세션 과정으로 나누어지는 인턴십 프로그램이다. 지금 이 글을 적는 시점에는 이미 조금 진행을 마친 상태인데, 개발 세션 과정에 너무너무너무 만족하고 있다. 리액트에 대한 기본기를 매주 미션으로 익히고 팀원들과 함께 다시 한번 협업하며 코드를 작성하니 더 성장하는 기분이 든다.(같은 기획과 내용이 주어져도 이렇게 다르게 코드를 짠다는 게 참 신기하다.ㅋㅋㅋ) 함수형 코딩 스터디로 진행 중인  책을 거의 다 읽었다. 여전히 객체지향을 처음 접했을 때만큼의 임팩트는 없지만, 막연하고 추상적이었던 함수형 코딩에 대해서 조금은 실용적으로 배울 수 있어서 도움이 됐다. 아무래도 …","frontmatter":{"date":"September 08, 2023","title":"23년 8월","categories":"월간회고","author":"제이든","emoji":"🖼️"},"fields":{"slug":"/steadily/monthly-review/2023/8/"}},"next":{"id":"7a109c63-aff0-57f2-ade1-38e20de62c9c","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"html의-tabindex\" style=\"position:relative;\"><a href=\"#html%EC%9D%98-tabindex\" aria-label=\"html의 tabindex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html의 tabindex</h3>\n<p>html의 tabindex는 키보드로 포커스를 이동할 수 있는 요소를 지정하는 속성이다. 이 속성을 사용하면 키보드로 포커스를 이동할 수 있는 요소를 지정할 수 있다. 이 때, tabindex의 값은 숫자이며, 0이면 포커스를 받을 수 있고, -1이면 포커스를 받을 수 없다. 또한, 숫자가 클수록 우선순위가 높다. 그러나 mdn에서는 0보다 큰 숫자 사용을 지양할 것을 권장하고 있다. (유저에게 있어 UX적으로 더 혼란을 줄 수 있기 때문이다.)</p>\n<blockquote>\n<p>React에서 특정 element를 ref로 참조하고 해당 element에 포커스를 주고 싶을 때, <code class=\"language-text\">element.focus()</code>를 사용하면 된다. 그런데 이 때, 만약 element가 focus가 되지 않는다면 tabindex를 0으로 설정해주면 된다.</p>\n</blockquote>\n<h3 id=\"context-api\" style=\"position:relative;\"><a href=\"#context-api\" aria-label=\"context api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Context API</h3>\n<p>React의 Context API를 사용하면 tanstack-query만큼은 아니지만 Provider를 통해 캐싱 처리를 할 수 있다. 이에 대해서는 따로 글을 작성해서 자세 작성해볼 예정이다!</p>\n<h3 id=\"cachestorage\" style=\"position:relative;\"><a href=\"#cachestorage\" aria-label=\"cachestorage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CacheStorage</h3>\n<p>매번 브라우저단에 데이터를 저장할 때, localStorage 혹은 sessionStorage를 사용했었다. 이번에 팀 미션으로 캐싱을 다시 구현하면서 CacheStorage를 처음 접했다. 앞의 2개와 큰 차이점은 브라우저의 캐시를 사용한다는 것이다. 즉, 브라우저의 캐시를 사용하면 브라우저가 알아서 캐싱을 관리해주기 때문에 우리가 직접 캐싱을 관리할 필요가 없다. 또한, 캐시를 사용하면 브라우저가 알아서 캐시를 삭제해준다. (localStorage는 우리가 직접 삭제해줘야 한다.) 또, 동기적으로 작동하는 localStorage와 달리 비동기적으로 작동한다는 점도 큰 차이점이다.(블로킹이 없다는 의미)</p>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>오늘도 열심히 미션을 구현하고 해결했다. 나름 잘 알고 있다고 생각했던 부분들에서도 새로운 게 많아서 참… 개발 공부는 하면 할수록 재미있다. 뭔가 두근거리게 하는 게 있다고 해야하나…ㅋㅋㅋㅋㅋ 이제는 조금 리액트로 프로젝트를 하는 게 익숙해져가는 것 같다. 더 즐겁게 개발하고 더 행복한 삶을 살자!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li><a href=\"#html%EC%9D%98-tabindex\">html의 tabindex</a></li>\n<li><a href=\"#context-api\">Context API</a></li>\n<li><a href=\"#cachestorage\">CacheStorage</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 07, 2023","title":"230907(목)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/7/"}},"prev":{"id":"40a138d2-2cda-5be8-a60d-08e037b6385a","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"nextjs\" style=\"position:relative;\"><a href=\"#nextjs\" aria-label=\"nextjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js</h3>\n<ul>\n<li>Next.js는 다양한 라이브러리를 조합하는 React를 사용하는 개발자들을 위한 프레임워크이다.</li>\n<li>아래와 같은 것들을 지원한다.\n<ul>\n<li>풀스택 기반</li>\n<li>File-based routing(파일 기반 라우팅)</li>\n<li>최적화 ex) SEO, Image, Font</li>\n<li>SSR 뿐 아니라 다양한 형태를 결합한 하이브리드 렌더링 제공</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>리액트로 구현한 어플리케이션은 기본적으로 CSR 방식으로 렌더링을 한다. 그러다보니 초기 로딩속도, SEO, 보안 등의 단점이 존재한다.</li>\n<li>이를 보완하기 위해 SSG 방식이 등장했다. SSG 방식은 빌드 시점에 미리 페이지를 렌더링하여 정적인 페이지를 생성한다. 이렇게 생성된 정적인 페이지는 CDN에 캐싱할 수 있어 빠른 로딩 속도를 보장한다. 하지만, 정적인 페이지이기 때문에 동적인 데이터를 사용할 수 없다는 단점이 존재한다.</li>\n<li>이를 보완하기 위해 ISR 방식이 등장했다. 처음 빌드 시점에 미리 html 파일을 만들어서 응답하던 SSG와는 다르게 일정 시간마다 정적인 페이지를 재생성한다. 이렇게 재생성된 정적인 페이지는 CDN에 캐싱할 수 있어 빠른 로딩 속도를 보장한다. 또한, 그나마 데이터를 동적으로 사용할 수 있어 SSG의 단점을 보완한다. 그럼에도 여전히 실시간 데이터가 반영되는 게 아니라는 단점이 존재한다.</li>\n<li>이를 보완하기 위해 SSR 방식이 등장했다. CSR과 비슷하지만, 유저의 요청이 있을 때마다 서버에서 html을 생성하여 응답한다. 이렇게 생성된 html은 CDN에 캐싱할 수 있어 빠른 로딩 속도를 보장한다. 또한, 실시간 데이터를 사용할 수 있어 SSG, ISR의 단점을 보완한다. 하지만, 서버에서 html을 생성하기 때문에 서버의 부하가 증가한다는 단점이 존재한다.</li>\n<li>따라서 어플리케이션에서 페이지의 특성 혹은 페이지의 일부분의 특성에 따라 CSR, SSG, ISR, SSR을 적절히 사용해야 한다. 이를 위해 Next.js는 각 페이지의 특성에 따라 CSR, SSG, ISR, SSR을 적절히 사용할 수 있도록 지원한다.</li>\n</ol>\n<h3 id=\"이진-탐색\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A7%84-%ED%83%90%EC%83%89\" aria-label=\"이진 탐색 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이진 탐색</h3>\n<ul>\n<li>숫자가 정렬된 배열에서 특정 숫자를 찾는 알고리즘</li>\n<li>일반적인 탐색 알고리즘은 순차적으로 탐색하므로 O(n)의 시간 복잡도를 가지지만, 이진 탐색은 O(log n)의 시간 복잡도를 가진다.</li>\n<li>이진 탐색은 배열의 중간 인덱스를 찾아서, 찾고자 하는 숫자와 비교하고, 중간 인덱스의 숫자가 찾고자 하는 숫자보다 크면 왼쪽을, 작으면 오른쪽을 탐색한다.</li>\n<li>이진 탐색은 배열이 정렬되어 있어야만 사용할 수 있다.</li>\n<li>이진 탐색은 반복문, 재귀함수로 구현할 수 있다.</li>\n</ul>\n<p>구현 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 반복문</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> right <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mid <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      right <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 재귀함수</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> right</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">></span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> mid <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> mid<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>드디어 Next.js 강의를 듣기 시작했다. 사실 그동안 <code class=\"language-text\">Next.js까지 신입이 알 필요가 있을까?</code>라는 마음에 기본 JS와 React 공부에 더 힘을 썼다. 그러다 오늘 동기인 나니와 대화 중 <code class=\"language-text\">가고 싶은 회사의 기술 스택으로 있어서 빨리 배우려 했다</code>는 대답을 들었다. 해서 내가 가고싶은 기업들의 기술스택을 다시 한 번 찾아봤고, 많은 기업들이 Next.js 를 사용하고 있다는 걸 알게 되었다. 또, 지금 현재는 SSG 형태의 Gatsby로 구현된 블로그를 사용하고 있는데, 조금 엉성하더라도 직접 구현해보는 게 좋을 것 같다는 생각에 추후에 Next.js를 사용해서 블로그를 구현해볼 예정이다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li><a href=\"#nextjs\">Next.js</a></li>\n<li><a href=\"#%EC%9D%B4%EC%A7%84-%ED%83%90%EC%83%89\">이진 탐색</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 09, 2023","title":"230909(토)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/9/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/monthly-review/2023/8/","nextSlug":"/steadily/growth-diary/2023/9/7/","prevSlug":"/steadily/growth-diary/2023/9/9/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}