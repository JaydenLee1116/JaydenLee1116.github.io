{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/8/1-gl/","result":{"data":{"cur":{"id":"7ccd3ed3-031c-5663-8edd-3346b5ab97dd","html":"<h2 id=\"-성장일지-60\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\" aria-label=\" 성장일지 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 6.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/>\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!<br/>\n🍉 (6.0)&#x3C;완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기.<br/></p>\n<ul>\n<li>🍉 (6.1)&#x3C;수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자!</li>\n<li>🍉 (6.2)&#x3C;수정> 일지 카테고리 수정 변경!(경험 -> 고민 -> 회고 -> 교훈)</li>\n</ul>\n</blockquote>\n<h2 id=\"️-오늘의-경험\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\" aria-label=\"️ 오늘의 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️ 오늘의 경험</h2>\n<h3 id=\"웹소켓-프로토콜\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%EC%86%8C%EC%BC%93-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\" aria-label=\"웹소켓 프로토콜 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹소켓 프로토콜</h3>\n<ul>\n<li>HTML5 표준 기술</li>\n<li>HTTP 환경에서 클라이언트와 서버 사이에 하나의 TCP 연결을 기반으로 <code class=\"language-text\">실시간 전이중 통신</code>을 가능하게 한다.\n<ul>\n<li>전이중 통신: 일반적인 HTTP 통신과 다르게 양방향으로 진행되는 통신</li>\n</ul>\n</li>\n<li>웹소켓 기술이 없을 때는 <code class=\"language-text\">Polling</code>이나 <code class=\"language-text\">Long Poliing</code> 의 방식으로 구현\n<ul>\n<li>Polling: 클라이언트가 주기적으로 요청을 보낸다.</li>\n<li>Long Poling: 서버가 의도적으로 요청에 대한 응답을 지연시킨다. 클라이언트가 요청을 보내고 서버는 데이터가 준비되면 응답을 하며 그 응답을 받는 즉시 클라는 다시 요청을 걸어놓는다.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>초기 웹의 탄생 목적은 <code class=\"language-text\">문서 전달</code> 그리고 <code class=\"language-text\">하이퍼링크</code>를 통한 문서 연결이었다.\n그런 의미에서 HTTP 프로토콜은 목적에 매우 부합하는 모델이었다.\n그러나 시대가 변하면서 웹에게 좀더 동적인 동작이 요구되었고 이로 인해 여러 새로운 기술이 탄생하였다.\n그 중 실시간 양방향 통신을 위한 스펙이 바로 <code class=\"language-text\">웹 소켓</code> 프로토콜이다.</p>\n<h3 id=\"left-right-index를-통해-배열을-순회하는-방법\" style=\"position:relative;\"><a href=\"#left-right-index%EB%A5%BC-%ED%86%B5%ED%95%B4-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%88%9C%ED%9A%8C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"left right index를 통해 배열을 순회하는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>left, right index를 통해 배열을 순회하는 방법</h3>\n<p>물건 가격이 배열로 주어지고 각 인덱스는 날짜를 의미한다. 이 때, 최대 이익을 구하는 문제를 푸는 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">maxProfit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prices</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> right <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> maxProfit <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">&lt;</span> prices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> second <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first <span class=\"token operator\">&lt;</span> second<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> profit <span class=\"token operator\">=</span> second <span class=\"token operator\">-</span> first<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>profit <span class=\"token operator\">></span> maxProfit<span class=\"token punctuation\">)</span> maxProfit <span class=\"token operator\">=</span> profit<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      left <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    right<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> maxProfit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"-오늘의-고민\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-label=\" 오늘의 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫧 오늘의 고민</h2>\n<h3 id=\"배열-순회-시간-초과\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%88%9C%ED%9A%8C-%EC%8B%9C%EA%B0%84-%EC%B4%88%EA%B3%BC\" aria-label=\"배열 순회 시간 초과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 순회 시간 초과</h3>\n<p>위의 경험에서 적은 문제를 푸는데, 처음 나의 구현은 아래와 같았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">maxProfit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prices</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> initialValue <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">callbackFn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> afterArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> maxPrice <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>afterArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> maxProfit <span class=\"token operator\">=</span> maxPrice <span class=\"token operator\">-</span> item<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxProfit <span class=\"token operator\">></span> result<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> maxProfit<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> totalMaxProfit <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>callbackFn<span class=\"token punctuation\">,</span> initialValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> totalMaxProfit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>처음엔 reduce를 활용해서 풀어서 너무 신났는데, 몇몇 테스트 케이스에서 시간 초과가 발생했다. 알아보니 reduce에서 loop를 돌고, 그 안에 slice()와 Math.max()도 loop를 돌기 때문에 O(N^2)의 시간 복잡도를 가지게 되어 시간 초과가 발생했다.</p>\n<p>결국 풀이를 보게 되었는데, left, right index를 활용해서 loop를 한번만 돌면서 풀 수 있었다. 그게 경험란에 적은 풀이이다.</p>\n<h2 id=\"-오늘의-회고\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\" aria-label=\" 오늘의 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈 오늘의 회고</h2>\n<p>후… 쉬운 알고리즘 문제라고 생각했는데 아예 관점을 바꾸지 못하니 쉽게 풀지 못했던 것 같다. 이래서 많이 풀어보고 공부해서 어느정도 경험을 하는 게 중요한 것 같다.</p>\n<h2 id=\"-오늘의-교훈\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\" aria-label=\" 오늘의 교훈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐾 오늘의 교훈</h2>\n<p>고민하지말고 풀어보고 구현하면서 경험을 쌓고 배우자. 한 번 경험한다고 해서 다 되는건 아니지만 한 번이라도 경험하는 게 중요하다.</p>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪵 참고</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/WebSockets_API\">MDN 웹소켓</a></li>\n<li><a href=\"https://tecoble.techcourse.co.kr/post/2021-08-14-web-socket/\">웹 소켓에 대해 알아보자 - 이론편</a></li>\n<li><a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/solutions/1735550/python-javascript-easy-solution-with-very-clear-explanation/\">left, right index를 통해 배열을 순회하는 방법</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\">🚤 성장일지 6.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\">☀️ 오늘의 경험</a></p>\n<ul>\n<li><a href=\"#%EC%9B%B9%EC%86%8C%EC%BC%93-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\">웹소켓 프로토콜</a></li>\n<li><a href=\"#left-right-index%EB%A5%BC-%ED%86%B5%ED%95%B4-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%88%9C%ED%9A%8C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\">left, right index를 통해 배열을 순회하는 방법</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\">🫧 오늘의 고민</a></p>\n<ul>\n<li><a href=\"#%EB%B0%B0%EC%97%B4-%EC%88%9C%ED%9A%8C-%EC%8B%9C%EA%B0%84-%EC%B4%88%EA%B3%BC\">배열 순회 시간 초과</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\">🌈 오늘의 회고</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\">🐾 오늘의 교훈</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B0%B8%EA%B3%A0\">🪵 참고</a></p>\n</li>\n</ul>\n</div>","excerpt":"🚤 성장일지 6.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!\n🍉 (6.0)<완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기. 🍉 (6.1)<수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자! 🍉 (6.2)<수정> 일지 카테고리 수정 변경!(경험 -> 고민 -> 회고 -> 교훈) ☀️ 오늘의 경험 웹소켓 프로토콜 HTML5 표준 기술 HTTP 환경에서 클라이언트와 서버 사이에 하나의 TCP 연결을 기반으로 을 가능하게 한다. 전이중 통신: 일반적인 HTTP 통신과 다르게 양방향으로 진행되는 통신 웹소켓 기…","frontmatter":{"date":"August 01, 2023","title":"230801(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/8/1-gl/"}},"next":{"id":"a7f4a3b6-5ff2-5e86-a037-f24d2c5a4e12","html":"<h2 id=\"-잡동사니\" style=\"position:relative;\"><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\" aria-label=\" 잡동사니 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📦 잡동사니</h2>\n<p>하나의 키워드를 잡고 좀 편하게 정리하고 싶어 만든 <code class=\"language-text\">잡동사니</code><br/></p>\n<blockquote>\n<p>잡동사니는 조선 후기 학자 <code class=\"language-text\">안정복</code>이 편찬한 <code class=\"language-text\">잡동산이(雜同散異)</code>에서 유래된 말이다.<br/>\n잡동산이는 <code class=\"language-text\">잡기(雜記)</code>의 형태를 빌려온 책으로 구체적인 체계가 잡혀있지 않은 형식이다.<br/>\n항목이 다소 난잡하고 내용의 구분이 혼동되어있다고 한다. 🤣</p>\n</blockquote>\n<h2 id=\"들어가기에-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기에 앞서</h2>\n<p>이 글은 <a href=\"https://www.wanted.co.kr/jobsfeed\">원티드</a>에서 주관하는\n<a href=\"https://www.wanted.co.kr/events/pre_challenge_fe_12\">프리온보딩 프론트엔드 챌린지 8월 - 리액트 리팩토링 실전가이드: 테스트부터 최적화까지</a>\n에 제출할 사전과제를 기반으로 작성한 글입니다.</p>\n<h2 id=\"️-1-테스트\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-1-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"️ 1 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ 1) 테스트</h2>\n<h3 id=\"1-1-유닛테스트-vs-통합테스트-vs-e2e테스트를-비교하여-설명해주세요\" style=\"position:relative;\"><a href=\"#1-1-%EC%9C%A0%EB%8B%9B%ED%85%8C%EC%8A%A4%ED%8A%B8-vs-%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-vs-e2e%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%B9%84%EA%B5%90%ED%95%98%EC%97%AC-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"1 1 유닛테스트 vs 통합테스트 vs e2e테스트를 비교하여 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1) 유닛테스트 vs 통합테스트 vs E2E테스트를 비교하여 설명해주세요</h3>\n<p>유닛테스트</p>\n<ul>\n<li>실행 가능한 가장 작은 단위의 소프트웨어(주로 <code class=\"language-text\">함수</code>)를 테스트</li>\n<li>일반적으로 함수, class의 method 단위로 진행한다.</li>\n<li>가장 작은 단위를 테스트하는만큼 좀더 직관적이고 빠른 테스트가 가능하다.</li>\n<li>사실상 테스트의 기본이라고 할 수 있다.</li>\n<li>JS 진영에서는 주로 <code class=\"language-text\">Jest</code>를 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// sum.test.js</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'더하기'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1과 2를 더하면 3이 반환된다.'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>통합테스트</p>\n<ul>\n<li>유닛테스트보다는 큰 단위의 소프트웨어를 테스트</li>\n<li>개발자가 변경할 수 없는 외부 의존성을 가진 모듈을 테스트할 때 사용한다.\n<ul>\n<li>ex) DB에 접근하는 것, 다른 모듈을 import 하는 것, 외부 API를 호출하는 것 등</li>\n</ul>\n</li>\n<li>테스트의 범위가 넓어지기 때문에 유닛테스트보다 에러 검출이 어렵다.</li>\n<li>사실상 유닛테스트의 확장판이라고 할 수 있다.</li>\n<li>JS 진영에서는 주로 <code class=\"language-text\">Jest</code>를 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// sum.test.js</span>\n\n<span class=\"token keyword\">import</span> sum <span class=\"token keyword\">from</span> <span class=\"token string\">'./sum'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 외부의 라이브러리에서 가져온 함수라고 생각하자</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'더하기'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1과 2를 더하면 3이 반환된다.'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>E2E테스트</p>\n<ul>\n<li>End to End 테스트의 약자로, 사용자의 시점에서 테스트를 진행한다.</li>\n<li>소프트웨어의 내부 코드 구조를 테스트하기보단 비즈니스쪽에 초점을 두고 사용자가 사용하는 관점에서 동작이 잘 되는지를 테스트한다.</li>\n<li>Acceptance Test(인수 테스트), UI Test라고도 불린다.</li>\n<li>JS 진영에서는 주로 <code class=\"language-text\">Cypress</code>를 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// sum.spec.js</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'더하기'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1과 2를 더하면 3이 반환된다.'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:3000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=\"a\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[name=\"b\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button[type=\"submit\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div[name=\"result\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'have.text'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"1-2-리액트-테스트에-사용되는-도구들을-비교하여-설명해주세요\" style=\"position:relative;\"><a href=\"#1-2-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EB%8F%84%EA%B5%AC%EB%93%A4%EC%9D%84-%EB%B9%84%EA%B5%90%ED%95%98%EC%97%AC-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"1 2 리액트 테스트에 사용되는 도구들을 비교하여 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2) 리액트 테스트에 사용되는 도구들을 비교하여 설명해주세요</h3>\n<h4 id=\"테스트를-진행한다는-것은\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%A7%84%ED%96%89%ED%95%9C%EB%8B%A4%EB%8A%94-%EA%B2%83%EC%9D%80\" aria-label=\"테스트를 진행한다는 것은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트를 진행한다는 것은</h4>\n<p>테스트를 진행하는 방법은 크게 2가지가 있다.</p>\n<ol>\n<li>HTML 페이지를 만들고 JS 테스트 코드를 작성하여 브라우저에서 직접 테스트를 진행하는 방법</li>\n<li>Headless 브라우저를 사용하여 브라우저를 띄우지 않고 테스트를 진행하는 방법\n<ul>\n<li>Headless 브라우저: 브라우저의 화면을 띄우지 않고 브라우저의 기능을 사용할 수 있는 브라우저(주로 브라우저의 Headless mode를 사용한다.)</li>\n<li>우리가 일반적으로 사용하는 크롬, 파이어폭스 등의 브라우저는 Headful 브라우저라고 한다.</li>\n</ul>\n</li>\n<li>브라우저가 아닌 Node.js 환경에서 테스트를 진행하는 방법 => 당연히 직접 렌더링을 할 수는 없고 jsdom과 같은 가상 DOM(혹은 가상 브라우저)를 사용한다.\n<ul>\n<li>이 때, 브라우저의 Headless mode와는 다르다. Headless mode는 실제 브라우저를 사용하지만 브라우저의 화면을 띄우지 않는 것이다.</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>3번의 방법을 추천한다. 또한, 일반적으로 3번의 방법이 자주 사용된다.</p>\n</blockquote>\n<h4 id=\"테스팅-툴-in-js\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8C%85-%ED%88%B4-in-js\" aria-label=\"테스팅 툴 in js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스팅 툴 in JS</h4>\n<p>테스팅 툴들의 종류는 매우 많다. 하나의 기능만을 제공하는 것들부터 여러 기능을 조합해서 제공하는 것들까지 말이다. 보통은 후자의 테스팅 툴을 사용한다.</p>\n<h2 id=\"️-최적화\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"️ 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ 최적화</h2>\n<h3 id=\"cdncontent-distributed-network에-대해-설명해주세요\" style=\"position:relative;\"><a href=\"#cdncontent-distributed-network%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"cdncontent distributed network에 대해 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDN(Content Distributed Network)에 대해 설명해주세요</h3>\n<ul>\n<li>전세계 여러 지역에 분산된 서버 네트워크로 유저에게 웹사이트 콘텐츠를 효율적이고 빠르게 전달하는 역할을 한다.</li>\n<li>웹사이트의 트래픽을 처리하고 데이터 로딩 시간을 최소화하기 위해 서버들이 여러 곳에 분산 배치되어 있다.\n<ul>\n<li>일반적으로 유저가 웹사이트에 엑세스하려면 해당 웹사이트의 원격 호스트 서버로부터 정보를 가져와야하는데, 거리가 멀수록 더 많은 시간이 소모된다.</li>\n</ul>\n</li>\n<li>CDN은 웹사이트의 콘텐츠를 여러 지역에 위치한 여러 서버에 복제하여, 유저가 웹사이트에 접속할 때 가장 가까운 서버에서 콘텐츠를 제공한다.\n<ul>\n<li>전송 시간이 줄어든다.</li>\n<li>웹사이트의 로딩 시간이 단축된다.</li>\n<li>트래픽이 분산되어 원격 호스트 서버의 부하를 줄일 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"web-vitals에-대해-설명해주세요\" style=\"position:relative;\"><a href=\"#web-vitals%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"web vitals에 대해 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Vitals에 대해 설명해주세요</h3>\n<ul>\n<li>UX(사용자 경험)를 평가하고 개선하기 위해 사용되는 웹 성능 측정 지표</li>\n<li>Google에서 제공하는 Web Vitals는 웹 페이지의 로딩 속도, 상호작용 가능성, 시각정 안정성 등을 측정하여 웹 페이지의 품질을 평가하고 개선하는 데 도움을 준다.</li>\n</ul>\n<p>크게 3가지 지표가 있다.</p>\n<h4 id=\"largest-contentful-paintlcp\" style=\"position:relative;\"><a href=\"#largest-contentful-paintlcp\" aria-label=\"largest contentful paintlcp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Largest Contentful Paint(LCP)</h4>\n<ul>\n<li>유저가 웹 페이지를 처음으로 볼 때 <code class=\"language-text\">가장 큰 콘텐츠 요소가 화면에 표시되는 시간</code></li>\n<li>일반적으로 이미지나 텍스트 블록과 같은 대형 요소가 가장 큰 콘텐츠가 된다.</li>\n<li>좋은 UX를 위해서는 LCP가 웹 페이지의 로딩 시간 내에 발생해야 하며, 2.5초 이내로 완료되는 것이 권장된다.</li>\n</ul>\n<h4 id=\"first-input-delayfid\" style=\"position:relative;\"><a href=\"#first-input-delayfid\" aria-label=\"first input delayfid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>First Input Delay(FID)</h4>\n<ul>\n<li>웹 페이지가 로딩된 후, 유저의 첫 번째 상호작용(클릭, 터치 등)과 실제로 브라우저가 해당 상호작용에 응답하는 시간</li>\n<li>웹 페이지가 얼마나 빠르게 대화형으로 작동하는지 나타내며, 유저가 페이지와 상호작용하기까지 느끼는 지연 시간을 평가한다.</li>\n<li>좋은 UX를 위해서는 FID가 100ms 미만이 되도록 최적화하는 것이 권장된다.</li>\n</ul>\n<h4 id=\"cumulative-layout-shiftcls\" style=\"position:relative;\"><a href=\"#cumulative-layout-shiftcls\" aria-label=\"cumulative layout shiftcls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cumulative Layout Shift(CLS)</h4>\n<ul>\n<li>웹 페이지의 로딩된 동안 콘텐츠의 레이아웃 변화에 따른 시각적 안정성을 측정한다.</li>\n<li>유저가 버튼을 클릭하거나 이미지가 동적으로 로드되는 경우 페이지의 레이아웃이 변경될 수 있다. 이 때, 레이아웃의 변화가 사용자 경험에 부정적인 영향을 미치지 않도록 최적화하는 것이 중요하다.</li>\n<li>좋은 UX를 위해서는 CLS가 0.1 미만이 되도록 최적화하는 것이 권장된다.\n<ul>\n<li>CLS에 대한 점수 산출 방법은 <a href=\"https://web.dev/i18n/ko/cls/#layout-shift-score\">CLS 점수 산출 방법</a>을 참고하자!</li>\n<li>정말 단순하게 말하면 <code class=\"language-text\">레이아웃 변화가 일어날 때마다 변화된 요소의 크기와 위치를 곱한 값</code>을 모두 더한 것이다.</li>\n</ul>\n</li>\n</ul>\n<p>Web Vitals는 웹 페이지 성능 측정을 위해 Chrome 브라우저와 다른 성능 측정 도구들에서 사용할 수 있다.\nGoogle Search Console에서 웹 페이지의 Web Vitals 데이터를 확인하고 개선 방안을 제시해 줍니다. 이러한 측정 지표를 바탕으로 웹 개발자들은 사용자 경험을 향상시키고 웹 페이지의 성능을 최적화하는 작업을 수행할 수 있습니다.</p>\n<h3 id=\"lighthouse에-대해-설명해주세요\" style=\"position:relative;\"><a href=\"#lighthouse%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\" aria-label=\"lighthouse에 대해 설명해주세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lighthouse에 대해 설명해주세요</h3>\n<ul>\n<li>Lighthouse는 Google에서 개발한 오픈 소스로, 자동화된 웹 페이지 성능 측정 도구</li>\n<li>웹 페이지의 성능과 품질을 평가하기 위해 다양한 측정 항목들을 실행하고 UX를 개선하는 데 도움이 되는 피드백과 권장 사항을 제공한다.</li>\n<li>Lighthouse는 Chrome 브라우저의 DevTools에 포함되어 있으며, 커맨드 라인에서도 실행할 수 있다.</li>\n</ul>\n<ol>\n<li>성능 지표:</li>\n</ol>\n<ul>\n<li>First Contentful Paint(FCP): 웹 페이지가 로딩된 후 첫 번째 콘텐츠가 화면에 표시되는 시간을 측정한다.</li>\n<li>Largest Contentful Paint(LCP): 웹 페이지에서 가장 큰 콘텐츠 요소가 화면에 표시되는 시간을 측정한다. Web Vitals의 하나로도 사용된다.</li>\n<li>Speed Index(SI): 웹 페이지의 로딩 과정에서 얼마나 빨리 콘텐츠가 표시되는지에 대한 측정 지표입니다.</li>\n<li>Time to Interactive(TTI): 웹 페이지가 로딩된 후 상호작용 가능한 상태가 되는 시간을 측정한다.</li>\n<li>Total Blocking Time(TBT): 웹 페이지가 로딩된 후 사용자의 상호작용과 브라우저의 응답 사이의 지연 시간을 측정한다. Web Vitals의 하나로도 사용된다.</li>\n<li>Cumulative Layout Shift(CLS): 웹 페이지의 로딩 중 발생하는 콘텐츠의 시각적 안정성을 측정한다. Web Vitals의 하나로도 사용된다.</li>\n</ul>\n<ol start=\"2\">\n<li>품질 측정 항목:</li>\n</ol>\n<ul>\n<li>Accessibility(접근성): 웹 페이지가 접근성 지침을 따르고 있는지를 평가한다.</li>\n<li>Best Practices(모범 사례): 웹 페이지가 모범 사례를 따르고 있는지를 평가한다.</li>\n<li>SEO(검색 엔진 최적화): 웹 페이지의 검색 엔진 최적화 상태를 평가한다.</li>\n<li>Progressive Web App(PWA; 점진적 웹 앱): 웹 페이지가 점진적 웹 앱으로서의 조건을 충족하는지를 평가한다.</li>\n</ul>\n<p>Lighthouse는 이러한 성능 지표와 품질 측정 항목들을 사용하여 웹 페이지의 전반적인 품질을 평가하고, 개발자들이 사용자 경험을 향상시키기 위해 어떤 부분을 개선해야 하는지에 대한 정보를 제공한다. 또한, Lighthouse 결과 보고서는 웹 개발자들이 성능 최적화 작업을 추적하고 검증하는 데도 유용하게 활용될 수 있다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://learn-react-test.vlpt.us/#/\">벨로퍼트와 함께하는 리액트 테스팅</a></li>\n<li><a href=\"https://velog.io/@ongsim123/TIL-Unit-test-Integration-test-e2e-test-%EA%B7%B8%EB%A6%AC%EA%B3%A0-TDD\">Unit test, Integration test, e2e test 그리고 TDD</a></li>\n<li><a href=\"https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2019-264e19514d0a\">An Overview of JavaScript Testing in 2019</a></li>\n<li><a href=\"https://medium.com/welldone-software/an-overview-of-javascript-testing-7ce7298b9870\">An Overview of JavaScript Testing in 2022</a></li>\n<li><a href=\"https://web.dev/i18n/ko/vitals/\">Web Vitals</a></li>\n<li><a href=\"https://web.dev/i18n/ko/cls/#layout-shift-score\">CLS 점수 산출 방법</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\">📦 잡동사니</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\">들어가기에 앞서</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-1-%ED%85%8C%EC%8A%A4%ED%8A%B8\">🗂️ 1) 테스트</a></p>\n<ul>\n<li>\n<p><a href=\"#1-1-%EC%9C%A0%EB%8B%9B%ED%85%8C%EC%8A%A4%ED%8A%B8-vs-%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-vs-e2e%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%B9%84%EA%B5%90%ED%95%98%EC%97%AC-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">1-1) 유닛테스트 vs 통합테스트 vs E2E테스트를 비교하여 설명해주세요</a></p>\n</li>\n<li>\n<p><a href=\"#1-2-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EB%8F%84%EA%B5%AC%EB%93%A4%EC%9D%84-%EB%B9%84%EA%B5%90%ED%95%98%EC%97%AC-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">1-2) 리액트 테스트에 사용되는 도구들을 비교하여 설명해주세요</a></p>\n<ul>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%A7%84%ED%96%89%ED%95%9C%EB%8B%A4%EB%8A%94-%EA%B2%83%EC%9D%80\">테스트를 진행한다는 것은</a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8C%85-%ED%88%B4-in-js\">테스팅 툴 in JS</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%B5%9C%EC%A0%81%ED%99%94\">🗂️ 최적화</a></p>\n<ul>\n<li>\n<p><a href=\"#cdncontent-distributed-network%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">CDN(Content Distributed Network)에 대해 설명해주세요</a></p>\n</li>\n<li>\n<p><a href=\"#web-vitals%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">Web Vitals에 대해 설명해주세요</a></p>\n<ul>\n<li><a href=\"#largest-contentful-paintlcp\">Largest Contentful Paint(LCP)</a></li>\n<li><a href=\"#first-input-delayfid\">First Input Delay(FID)</a></li>\n<li><a href=\"#cumulative-layout-shiftcls\">Cumulative Layout Shift(CLS)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#lighthouse%EC%97%90-%EB%8C%80%ED%95%B4-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94\">Lighthouse에 대해 설명해주세요</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 31, 2023","title":"React Test and Optimization(feat. Web Vitals)","categories":"잡동사니","author":"제이든","emoji":"📦"},"fields":{"slug":"/from-time-to-time/oddments/react-test-optimization/"}},"prev":{"id":"419bc3ed-b043-5f2a-8bfe-c7653a5a9e1d","html":"<h2 id=\"-성장일지-60\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\" aria-label=\" 성장일지 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 6.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/>\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!<br/>\n🍉 (6.0)&#x3C;완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기.<br/></p>\n<ul>\n<li>🍉 (6.1)&#x3C;수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자!</li>\n<li>🍉 (6.2)&#x3C;수정> 일지 카테고리 수정 변경!(경험 -> 고민 -> 회고 -> 교훈)</li>\n</ul>\n</blockquote>\n<h2 id=\"️-오늘의-경험\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\" aria-label=\"️ 오늘의 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️ 오늘의 경험</h2>\n<h3 id=\"monorepo\" style=\"position:relative;\"><a href=\"#monorepo\" aria-label=\"monorepo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>monorepo</h3>\n<p>모노레포는 하나의 저장소에 여러 프로젝트를 관리하는 것을 말한다. 이렇게 하면 여러 프로젝트를 한 번에 관리할 수 있고, 공통된 패키지를 사용할 수 있다.<br/>\n오늘 내가 공부한 내용에서 나온 모노레포는 라이브러리를 만드는 경우의 모노레포였다. 간단하게 디렉토리 구조만 살펴보면 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">📦 root\n├─ apps\n│  ├─ docs // 라이브러리 소개하는 문서\n│  └─ example // 라이브러리를 사용해보는 예제\n├─ packages\n│  └─ library // 실제 라이브러리\n└─ .gitignore</code></pre></div>\n<p>위와 같은 구조가 된다. root에도 package.json이 있고 docs, example, library도 각각 하나의 package.json으로 관리되는 프로젝트이다. 이 프로젝트에서\nlibrary는 실제 내가 개발하려는 라이브러리, example은 개발 중인 라이브러리를 사용해보는 예제, docs는 라이브러리를 소개하는 문서를 작성하는 프로젝트이다. 이 프로젝트들을\n하나로 관리하기 위해서 workspace라는 개념을 사용하게 된다. workspace는 root의 package.json에 설정을 해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// private으로 설정해야 npm에 publish되지 않는다.(root project 자체는 publish하지 않는다.)</span>\n  <span class=\"token property\">\"workspaces\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"packages/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apps/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"example\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn workspace example dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn workspace @jaydenlee/mini-query build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn workspace @jaydenlee/mini-query test\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>중요한 점은 해당 root 프로젝트는 철저히 그 아래 프로젝트들을 관리하는 용도라는 점이다. 그렇기 때문에 private은 true로 설정해야한다. 그리고 root의 package.json의 scripts\n에서는 workspace 기능을 통해 각 프로젝트의 scripts를 실행할 수 있다.</p>\n<h3 id=\"불변성-아니-가변성\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1-%EC%95%84%EB%8B%88-%EA%B0%80%EB%B3%80%EC%84%B1\" aria-label=\"불변성 아니 가변성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불변성? 아니 가변성!</h3>\n<p>리트코드에서 문제를 푸는데 다소 어색한 문제가 등장했다. 보통 객체, 배열 등의 불변성을 유지하면서 문제를 풀기 마련인데, 이 문제는 되려 인자로 받은 배열을 변경시키기만해서 문제를 해결할 것을\n요구하고 있었다. 문제 자체는 정말 단순한데, 다시 한 번 JS의 불변성을 유지하지 않는 메소드들을 상기시켜주는 계기가 되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">merge</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nums1<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> nums2<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  nums1<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  nums1<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>nums2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  nums1<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"-오늘의-고민\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-label=\" 오늘의 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫧 오늘의 고민</h2>\n<ul>\n<li>오늘은 딱히 고민이 없었다. 🥳</li>\n</ul>\n<h2 id=\"-오늘의-회고\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\" aria-label=\" 오늘의 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈 오늘의 회고</h2>\n<p>라이브러리를 만드는 과정이 너무 흥미로웠다. 아무래도 보통 웹 공부를 시작하고 프로젝트를 하다보면 웹 어플리케이션 위주로 진행이되는데, 이번에는 라이브러리를 만들어보면서\n좀 더 다양한 경험을 할 수 있었다. 취준생 입장에서 이런 말하긴 뭐하지만, 그래도 어느정도는 이 개발 세계를 안다고 생각했음에도 매번 새로운 경험을 하게 되니 너무 재미있다.\n간단하지만 유용한 라이브러리를 하나 만들어서 배포해보려 한다.(아마 JS로 구현한 여러 자료구조가 될 것 같다.)</p>\n<h2 id=\"-오늘의-교훈\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\" aria-label=\" 오늘의 교훈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐾 오늘의 교훈</h2>\n<p>세상은 넓고 배울 건 많다. 앞으로 또 새로운 세상을 만나게 될 것을 기대하고 찾아 나아가자. 너무 두근거리는 개발 세상이다!</p>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪵 참고</h2>\n<ul>\n<li>없당</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\">🚤 성장일지 6.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B2%BD%ED%97%98\">☀️ 오늘의 경험</a></p>\n<ul>\n<li><a href=\"#monorepo\">monorepo</a></li>\n<li><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1-%EC%95%84%EB%8B%88-%EA%B0%80%EB%B3%80%EC%84%B1\">불변성? 아니 가변성!</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\">🫧 오늘의 고민</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%9A%8C%EA%B3%A0\">🌈 오늘의 회고</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B5%90%ED%9B%88\">🐾 오늘의 교훈</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B0%B8%EA%B3%A0\">🪵 참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 02, 2023","title":"230802(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/8/2-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/8/1-gl/","nextSlug":"/from-time-to-time/oddments/react-test-optimization/","prevSlug":"/steadily/growth-diary/2023/8/2-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}