{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/3/30-gl/","result":{"data":{"cur":{"id":"7c07a118-5cca-559d-9778-5e772e576f80","html":"<h2 id=\"-성장일지-40\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\" aria-label=\" 성장일지 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 4.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 (1.0)키워드<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 (2.0)경험 위주로<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ (3.0)정해진 템플릿에 맞춰서<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성<br/>\n(3.1)230102부터 시작되는 학습에 관한 내용 추가<br/>\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!<br/>\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/></p>\n</blockquote>\n<h2 id=\"-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 학습 키워드</h2>\n<h3 id=\"nodejs-express-서버-리팩토링\" style=\"position:relative;\"><a href=\"#nodejs-express-%EC%84%9C%EB%B2%84-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\" aria-label=\"nodejs express 서버 리팩토링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js, express 서버 리팩토링</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> bodyParser <span class=\"token keyword\">from</span> <span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 요청에 대한 body를 파싱하는 역할</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dotenv <span class=\"token keyword\">from</span> <span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// .env 파일을 통해 보안상 가려야할 데이터를 따로 둔다.</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> cors <span class=\"token keyword\">from</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// CORS 에러를 해결하기 위함</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> mongoDb <span class=\"token keyword\">from</span> <span class=\"token string\">'mongodb'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// mongodb와 연결!</span>\n\ndotenv<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이제 아래에서 process.env로 어떤 값들을 가져올 수 있다.(숨길 수 있다.)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> MongoClient <span class=\"token operator\">=</span> mongoDb<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MongoClient</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">mongodb+srv://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGO_USER_NAME</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGO_PASSWORD</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">@</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGO_CLUSTER_NAME</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.jy2zpck.mongodb.net/?retryWrites=true&amp;w=majority</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">db</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-base-name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listening on 1116'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/top10'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token string\">'테스트 문자열'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/search'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 요청의 query string에 담겨있는 값을 받아온다.</span>\n    <span class=\"token keyword\">const</span> collection <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> collection\n        <span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> keywords<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> $regex<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>query<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> $options<span class=\"token operator\">:</span> <span class=\"token string\">'i'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> keywords<span class=\"token operator\">:</span> <span class=\"token string\">'해당하는 상품이 없습니다.'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같은 흐름이 더 mongoDB와의 연결 및 express를 통한 서버를 띄우기의 흐름이 보이는 것 같아 수정하였다.</p>\n<ul>\n<li><code class=\"language-text\">MongoClient</code>와 mongoDB url을 통해 client 객체를 만들어 준다.</li>\n<li>client 객체의 <code class=\"language-text\">connect()</code> 메서드로 연결해준다.</li>\n<li>client의 db 메서드를 통해 만들어놓은 database 이름을 문자열로 전달한다.</li>\n<li>이제 이 db 객체에서 필요할 때마다 collection으로 접근하여 서버 api 로직과 함께 사용하면 된다.\n<ul>\n<li>이 때, mongoDB에서 collection은 SQL의 테이블 하나와 같다고 생각하면 된다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"디바운스debounce\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B0%94%EC%9A%B4%EC%8A%A4debounce\" aria-label=\"디바운스debounce permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디바운스(Debounce)</h3>\n<ul>\n<li>이벤트를 그룹으로 묶고 특정시간이 지난 후, 마지막 하나의 이벤트만 발생하도록 하는 방법</li>\n<li>setTimeout과 clearTimeout으로 구현해볼 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">debounce</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function-variable function\">callback</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> timerId<span class=\"token operator\">:</span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> setTimeout<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> Event<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timerId<span class=\"token punctuation\">)</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    timerId <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 활용 예시</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchListComponent<span class=\"token punctuation\">.</span><span class=\"token function\">deleteAllChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchListComponent<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">!==</span> <span class=\"token string\">'flex'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchListComponent<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dimLayer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:1116/search?q='</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n              data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">:</span> ProductData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>searchListComponent<span class=\"token punctuation\">.</span><span class=\"token function\">addChildHtml</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>d<span class=\"token punctuation\">.</span>keywords<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>debounce를 이용하여 계속 되는 click 이벤트에 따른 fetch 발생을 마지막 1번만 발생하게 해주었다.</li>\n</ul>\n<h2 id=\"-오늘의-고민-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 고민 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍀 오늘의 고민 키워드</h2>\n<h3 id=\"api-로직\" style=\"position:relative;\"><a href=\"#api-%EB%A1%9C%EC%A7%81\" aria-label=\"api 로직 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>api 로직</h3>\n<p>서버 개발자는 아니지만, 좀더 복잡한 api 로직은 만들고 처리하는지 궁금하다. 내가 만든 api처럼 저렇게 간단하지는 않을 거 같은데..!</p>\n<h2 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h2>\n<p>어제까지만 해도 괜히 서버 띄우는 것도 해보겠다고 무리했나 싶었지만, 이렇게 직접 서버를 띄우고 api를 만들어서 요청에 대한 응답을 처리해보니\n너무 재미있고 전체적인 흐름을 이해하는데 도움이 된 것 같다. 아직 UI쪽 구현이 미흡하고 받아온 응답 데이터를 어떻게 좀더 잘 가공할지가 고민이긴하지만..!</p>\n<h3 id=\"오늘의-잘한-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\" aria-label=\"오늘의 잘한 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 잘한 점</h3>\n<ul>\n<li>간단한 api를 만들고 원하는 response를 전달한 것</li>\n<li>디바운스를 통해 계속되는 이벤트를 막고 서버에 부하가 걸리지 않게 처리한점</li>\n</ul>\n<h3 id=\"오늘의-아쉬운-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\" aria-label=\"오늘의 아쉬운 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 아쉬운 점</h3>\n<ul>\n<li>개발 속도가 빠르지 못한 것 같다.</li>\n<li>앞으로 코드를 짤 때는 머릿속에 명확한 설계를 갖고 임해야겠다는 생각이 든다.</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li>강의</li>\n<li><a href=\"https://expressjs.com/en/starter/hello-world.html\">express 공식문서</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\">🎄 성장일지 4.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 학습 키워드</a></p>\n<ul>\n<li><a href=\"#nodejs-express-%EC%84%9C%EB%B2%84-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81\">Node.js, express 서버 리팩토링</a></li>\n<li><a href=\"#%EB%94%94%EB%B0%94%EC%9A%B4%EC%8A%A4debounce\">디바운스(Debounce)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC-%ED%82%A4%EC%9B%8C%EB%93%9C\">🍀 오늘의 고민 키워드</a></p>\n<ul>\n<li><a href=\"#api-%EB%A1%9C%EC%A7%81\">api 로직</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></p>\n<ul>\n<li><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\">오늘의 잘한 점</a></li>\n<li><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\">오늘의 아쉬운 점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","excerpt":"🎄 성장일지 4.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 (1.0)키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명\n🍉 (2.0)경험 위주로\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성\n❄️ (3.0)정해진 템플릿에 맞춰서\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1)230102부터 시작되는 학습에 관한 내용 추가\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자! 🔑 오늘의 학습 키워드 Node.js, express 서버 리팩토링 위와 같은 흐름이 더 mongoDB와의 연결 및 express를 통한 서버를 띄우기의 흐름이 보이는 것 같아 수정하였다.…","frontmatter":{"date":"March 30, 2023","title":"230330(목)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/3/30-gl/"}},"next":{"id":"f7c25713-c6a8-59b9-a145-ce503655e453","html":"<h2 id=\"-성장일지-40\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\" aria-label=\" 성장일지 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 4.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 (1.0)키워드<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 (2.0)경험 위주로<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ (3.0)정해진 템플릿에 맞춰서<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성<br/>\n(3.1)230102부터 시작되는 학습에 관한 내용 추가<br/>\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!<br/>\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/></p>\n</blockquote>\n<h2 id=\"-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 학습 키워드</h2>\n<h3 id=\"nodejs-express\" style=\"position:relative;\"><a href=\"#nodejs-express\" aria-label=\"nodejs express permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js, express</h3>\n<ul>\n<li>nodeJS: 크롬의 V8 자바스크립트 엔진을 가져와서 새롭게 탄생시킨 자바스크립트 런타임 환경. 주로 자바스크립트로 서버 개발을 하기위해 사용된다.\n<ul>\n<li>특정 브라우저에서의 js api들은 제외하고 HTTP와 파일 시스템 라이브러리들을 포함한 전형적인 여러 OS api를 추가했다.</li>\n</ul>\n</li>\n<li>express: Node.js 런타임 환경에서 구동되는 웹 프레임워크.\n<ul>\n<li>웹 어플리케이션을 만들기 위한 여러 라이브러리와 미들웨어 등이 내장되어있다.</li>\n<li>개발자들에게 개발 규칙을 강제하는 프레임워크로 통일성을 향상시킬 수 있다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> bodyParser <span class=\"token keyword\">from</span> <span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 요청에 대한 body를 파싱하는 역할</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dotenv <span class=\"token keyword\">from</span> <span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// .env 파일을 통해 보안상 가려야할 데이터를 따로 둔다.</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> cors <span class=\"token keyword\">from</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// CORS 에러를 해결하기 위함</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> mongoDb <span class=\"token keyword\">from</span> <span class=\"token string\">'mongodb'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// mongodb와 연결!</span>\n\ndotenv<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이제 아래에서 process.env로 어떤 값들을 가져올 수 있다.(숨길 수 있다.)</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extended<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MongoClient <span class=\"token operator\">=</span> mongoDb<span class=\"token punctuation\">.</span>MongoClient<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> connection <span class=\"token operator\">=</span> MongoClient<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">mongodb+srv://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGO_USER_NAME</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGO_PASSWORD</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">@</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGO_CLUSTER_NAME</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.jy2zpck.mongodb.net/?retryWrites=true&amp;w=majority</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> db<span class=\"token punctuation\">;</span>\nconnection\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    db <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">db</span><span class=\"token punctuation\">(</span><span class=\"token string\">'database-name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listening on'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/search'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token string\">'테스트 문자열'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">에러 발생: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같은 방식으로 local 포트에 서버를 하나 띄우고 client쪽 app에서 fetch api로 통신하면 된다.</p>\n<h2 id=\"-오늘의-고민-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 고민 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍀 오늘의 고민 키워드</h2>\n<h3 id=\"express-그-자체\" style=\"position:relative;\"><a href=\"#express-%EA%B7%B8-%EC%9E%90%EC%B2%B4\" aria-label=\"express 그 자체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>express 그 자체</h3>\n<p>흐… 그냥 json-server나 msw를 사용할까 하다가, 이번 기회에 이전부터 배우고 싶었던 express를 사용해봤다. 아주 기본적인 서버라서 솔직히 그렇게 어려운 건 없지만\n그래도 db에 연결하고 client와 통신도 성공해보고… 여러가지를 해보면서 전반적인 제품의 흐름을 이해할 수 있게 된 것 같아서 만족스럽다.(일단 새로 배우는 건 다 재미있다.)</p>\n<h3 id=\"import--as-\" style=\"position:relative;\"><a href=\"#import--as-\" aria-label=\"import  as  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>import * as …</h3>\n<p>이 부분…!!! 왜 그냥 import 하면 안될까..? 이 부분에 대해선 구체적으로 좀 찾아볼 예정.</p>\n<h2 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h2>\n<ul>\n<li>하루종일 서버 구현 공부</li>\n<li>같은 자바스크립트 언어로 이렇게 다른 걸 만들어낼 수 있다니..! 재미있다ㅋㅋㅋㅋㅋ</li>\n</ul>\n<h3 id=\"오늘의-잘한-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\" aria-label=\"오늘의 잘한 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 잘한 점</h3>\n<ul>\n<li>열심히 nodejs 및 express 공부한 점</li>\n<li>서버 띄우고 나아가서 통신까지 성공한 점</li>\n</ul>\n<h3 id=\"오늘의-아쉬운-점\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\" aria-label=\"오늘의 아쉬운 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘의 아쉬운 점</h3>\n<ul>\n<li>조금 더 순공부시간을 확보해야겠다!</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li>강의</li>\n<li><a href=\"https://expressjs.com/en/starter/hello-world.html\">express 공식문서</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\">🎄 성장일지 4.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 학습 키워드</a></p>\n<ul>\n<li><a href=\"#nodejs-express\">Node.js, express</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC-%ED%82%A4%EC%9B%8C%EB%93%9C\">🍀 오늘의 고민 키워드</a></p>\n<ul>\n<li><a href=\"#express-%EA%B7%B8-%EC%9E%90%EC%B2%B4\">express 그 자체</a></li>\n<li><a href=\"#import--as-\">import * as …</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></p>\n<ul>\n<li><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%9E%98%ED%95%9C-%EC%A0%90\">오늘의 잘한 점</a></li>\n<li><a href=\"#%EC%98%A4%EB%8A%98%EC%9D%98-%EC%95%84%EC%89%AC%EC%9A%B4-%EC%A0%90\">오늘의 아쉬운 점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 29, 2023","title":"230329(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/3/29-gl/"}},"prev":{"id":"509d31b2-35a7-5b54-99ec-330df8889500","html":"<h2 id=\"-기술책-스터디\" style=\"position:relative;\"><a href=\"#-%EA%B8%B0%EC%88%A0%EC%B1%85-%EC%8A%A4%ED%84%B0%EB%94%94\" aria-label=\" 기술책 스터디 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🏓 기술책 스터디</h2>\n<p>23년 1월부터 활동 중인 교육에서, 뜻이 맞는 동료들과 함께 진행하게 된 스터디<br/>\n앞으로도 꾸준히 기술 서적을 읽고 함께 발전하는 시간이 되었으면 좋겠다!</p>\n<h1 id=\"3장-유니언과-리터럴\" style=\"position:relative;\"><a href=\"#3%EC%9E%A5-%EC%9C%A0%EB%8B%88%EC%96%B8%EA%B3%BC-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"3장 유니언과 리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3장. 유니언과 리터럴</h1>\n<ul>\n<li>유니언(union): 값에 허용된 타입을 2개 이상의 가능한 타입으로 확장</li>\n<li>내로잉(narrowing): 값에 허용된 타입을 하나 이상의 가능한 타입이 되지 않도록 좁히기</li>\n</ul>\n<p>⇒ 다른 프로그래밍 언어에서는 불가능하지만 TS에서는 <strong>가능한 코드 정보에 입각한 추론</strong></p>\n<h2 id=\"유니언\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8\" aria-label=\"유니언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유니언</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> example <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token string\">'j'</span> <span class=\"token operator\">:</span> <span class=\"token number\">1116</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// example: string | number</span></code></pre></div>\n<p><strong>주의할 점</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">example<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n<span class=\"token comment\">// toUpperCase라는 메서드는 number type에 없기 때문이다.</span>\n<span class=\"token comment\">// 즉, example에는 number type인 값이 할당될 수 있기 때문에 이에 대해서 안전장치를 해주는 것</span></code></pre></div>\n<p>위의 예시를 보면 <strong>유니언은 마치 ‘또는’(||) 같지만 객체의 개념에서는 한쪽이 아닌 모두 갖고 있는 프로퍼티, 메서드만 사용할 수 있기에 약간 &#x26;&#x26; 느낌이 난다.</strong></p>\n<p>⇒ string | number을 객체의 개념으로 생각하면 이해가 되는 것 같다!!!</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> test<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n이렇게 되면 test에는 주로 <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span> 리터럴 값이 할당될텐데<span class=\"token punctuation\">,</span> 얘네는 모두 각각 어떤 프로퍼티<span class=\"token punctuation\">,</span>\n메서드를 갖고 있다<span class=\"token punctuation\">.</span> 그렇게 생각하면 동시에 갖는 속성이 아니면 할당이 안되는 게 이해된다<span class=\"token punctuation\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">exam1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">exam2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> agee<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> test<span class=\"token operator\">:</span> exam1 <span class=\"token operator\">|</span> exam2<span class=\"token punctuation\">;</span>\ntest <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 가능</span>\ntest <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span> agee<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 가능</span>\ntest <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> agee<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 가능</span></code></pre></div>\n<h2 id=\"내로잉\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EB%A1%9C%EC%9E%89\" aria-label=\"내로잉 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내로잉</h2>\n<p>말 그대로 타입을 좁힌다. 이 때, 타입 내로잉과 조건문을 함께 씀으로써 <code class=\"language-text\">타입 가드</code>의 역할을 하게 할 수 있다.</p>\n<p>위 말이 책에서 말하는 타입가드: <strong>“타입을 좁히는 데 사용할 수 있는 논리적 검사”</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> example <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token string\">'j'</span> <span class=\"token operator\">:</span> <span class=\"token number\">1116</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// example: string | number</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>example <span class=\"token operator\">===</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\texample<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// string으로 타입이 좁혀졌기 때문에 가능</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\texample<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// error 발생.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>example <span class=\"token operator\">===</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\texample<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// string으로 타입이 좁혀졌기 때문에 가능</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>example <span class=\"token operator\">===</span> <span class=\"token number\">1116</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\texample<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 이건 확실히 1116으로 명시했기에 가능</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>example <span class=\"token operator\">===</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\texample<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// string으로 타입이 좁혀졌기 때문에 가능</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>example <span class=\"token operator\">===</span> <span class=\"token number\">555</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\texample<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 이건 확실히 1116으로 명시했기에 가능</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"리터럴-타입\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%83%80%EC%9E%85\" aria-label=\"리터럴 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴 타입</h2>\n<ul>\n<li>좀더 구체적인 버전의 원시 타입</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'jayden'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 <code class=\"language-text\">const</code>로 변수를 선언 및 할당하는 경우 그 값 자체가 타입이 된다.(리터럴 타입)</p>\n<p>⇒ 어차피 const로 선언된 변수는 값이 변경 혹은 초기화될 일이 없으니까</p>\n<p>그래서 <code class=\"language-text\">원시 타입</code>은 해당 타입의 가능한 모든 <code class=\"language-text\">리터럴 값의 집합</code>인 것이다.</p>\n<h2 id=\"엄격한-null-검사\" style=\"position:relative;\"><a href=\"#%EC%97%84%EA%B2%A9%ED%95%9C-null-%EA%B2%80%EC%82%AC\" aria-label=\"엄격한 null 검사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>엄격한 null 검사</h2>\n<p><strong>strictNullChecks: true - null 할당 안됨 / false - null 할당 가능 ⇒ 사실상 무조건 true를 하는 게 좋다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> test <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token string\">'j'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> t <span class=\"token operator\">=</span> test <span class=\"token operator\">&amp;&amp;</span> test<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 가능( &amp;&amp; 연산자를 통해 test truthy, falsy로 걸러지기 때문이다. )</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> test<span class=\"token operator\">?.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 가능( ? 연산자 자체가 test가 undefined일 가능성을 말해주는 것이기 때문이다. )</span></code></pre></div>\n<h2 id=\"타입-별칭\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EB%B3%84%EC%B9%AD\" aria-label=\"타입 별칭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 별칭</h2>\n<p><strong>타입을 변수처럼 선언하는 것</strong></p>\n<h1 id=\"4장-객체\" style=\"position:relative;\"><a href=\"#4%EC%9E%A5-%EA%B0%9D%EC%B2%B4\" aria-label=\"4장 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4장. 객체</h1>\n<p><strong>자바스크립트는 결국 모두 객체!!! null, undefined를 제외한 모든 값은 그 값에 대한 실제 타입의 멤버(프로퍼티, 메서드)를 가지므로 모든 값의 타입을 확인하기 위해서는 객체 타입을 이해해야한다.</strong></p>\n<h2 id=\"구조적-타이핑\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91\" aria-label=\"구조적 타이핑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조적 타이핑</h2>\n<p>TS의 타입 시스템은 <code class=\"language-text\">구조적으로 타입화</code>되어있다. 타입 검사기에서 정적 시스템이 타입을 검사한다.</p>\n<p>반면 JS는 <code class=\"language-text\">덕 타이핑(덕 타입)</code> 으로 런타임에서 사용될 때까지 객체 타입을 검사하지 않는다.(동적 타이핑)</p>\n<h3 id=\"초과-속성-검사\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EA%B3%BC-%EC%86%8D%EC%84%B1-%EA%B2%80%EC%82%AC\" aria-label=\"초과 속성 검사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>초과 속성 검사</h3>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> ta<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 에러 안남 - 초과 속성 검사 피해가기</span>\n\n<span class=\"token keyword\">let</span> tb<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 에러 발생</span>\n\n<span class=\"token keyword\">let</span> tc<span class=\"token operator\">:</span> <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 이건 당연히 에러</span></code></pre></div>\n<p>초과 속성 검사는 객체 타입으로 선언된 위치에서 생성되는 객체 리터럴에 대해서만 일어난다.</p>\n<h2 id=\"객체-타입-유니언\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EC%9C%A0%EB%8B%88%EC%96%B8\" aria-label=\"객체 타입 유니언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 타입 유니언</h2>\n<p>리터럴 타입이나 원시 타입과 마찬가지로 모든 객체 타입에 존재하지 않는 속성에 접근하기 위해서는 타입을 좁혀야 한다.(<code class=\"language-text\">타입 가드</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span> \n\t\t\t\t\t\t\t\t\t<span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">}</span> \n\t\t\t\t\t\t\t\t\t<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span> phoneNumber<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n\nperson<span class=\"token punctuation\">.</span>name <span class=\"token comment\">// 가능</span>\nperson<span class=\"token punctuation\">.</span>age <span class=\"token comment\">// 불가능(person.age가 number | undefined이기 때문이다.)</span>\nperson<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token comment\">// 불가능(person.phoneNumber가 number | undefined이기 때문이다.)</span></code></pre></div>\n<h2 id=\"객체-타입-내로잉\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EB%82%B4%EB%A1%9C%EC%9E%89\" aria-label=\"객체 타입 내로잉 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 타입 내로잉</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'age'</span> <span class=\"token keyword\">in</span> person<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tperson<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 가능</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\tperson<span class=\"token punctuation\">.</span>phoneNumber <span class=\"token comment\">// 가능</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token comment\">// 아래와 같이 사용하지 않는다는 거 기억하기!!!</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tperson<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\tperson<span class=\"token punctuation\">.</span>phoneNumber \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"교차-타입\" style=\"position:relative;\"><a href=\"#%EA%B5%90%EC%B0%A8-%ED%83%80%EC%9E%85\" aria-label=\"교차 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>교차 타입</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> phoneNumber<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">A</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// {name: string, age: number, phoneNumber: number}</span></code></pre></div>\n<h2 id=\"never-타입\" style=\"position:relative;\"><a href=\"#never-%ED%83%80%EC%9E%85\" aria-label=\"never 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Never 타입</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> t<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">&amp;</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// t: nerver => 불가능한 타입(존재할 수 없는 타입)</span>\n<span class=\"token comment\">// 거의 사용하지 않지만, 불가능한 상태를 나타내기 위해 가끔씩 등장한다.</span></code></pre></div>\n<h1 id=\"동료들-내용-정리-및-추가\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EB%A3%8C%EB%93%A4-%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC-%EB%B0%8F-%EC%B6%94%EA%B0%80\" aria-label=\"동료들 내용 정리 및 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동료들 내용 정리 및 추가</h1>\n<ul>\n<li>예정</li>\n</ul>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://tecoble.techcourse.co.kr/post/2022-11-07-typeAlias-interface/\">interface vs type alias</a></li>\n<li><a href=\"https://inpa.tistory.com/entry/TS-%F0%9F%93%98-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EC%B2%B4%ED%82%B9-%EC%9B%90%EB%A6%AC-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\">타입스크립트 잉여 속성 검사 원리</a></li>\n<li><a href=\"https://yceffort.kr/2022/03/understanding-typescript-never#%EC%99%9C-never%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80\">왜 never가 필요한가?</a></li>\n<li><a href=\"https://ui.toast.com/posts/ko_20220323\">타입스크립트의 Never 타입 완벽 가이드</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EA%B8%B0%EC%88%A0%EC%B1%85-%EC%8A%A4%ED%84%B0%EB%94%94\">🏓 기술책 스터디</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9C%A0%EB%8B%88%EC%96%B8\">유니언</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%82%B4%EB%A1%9C%EC%9E%89\">내로잉</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%ED%83%80%EC%9E%85\">리터럴 타입</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%97%84%EA%B2%A9%ED%95%9C-null-%EA%B2%80%EC%82%AC\">엄격한 null 검사</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%83%80%EC%9E%85-%EB%B3%84%EC%B9%AD\">타입 별칭</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B5%AC%EC%A1%B0%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91\">구조적 타이핑</a></p>\n<ul>\n<li><a href=\"#%EC%B4%88%EA%B3%BC-%EC%86%8D%EC%84%B1-%EA%B2%80%EC%82%AC\">초과 속성 검사</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EC%9C%A0%EB%8B%88%EC%96%B8\">객체 타입 유니언</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EB%82%B4%EB%A1%9C%EC%9E%89\">객체 타입 내로잉</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B5%90%EC%B0%A8-%ED%83%80%EC%9E%85\">교차 타입</a></p>\n</li>\n<li>\n<p><a href=\"#never-%ED%83%80%EC%9E%85\">Never 타입</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 31, 2023","title":"(러닝 타입스크립트) 3~4장","categories":"스터디 책","author":"제이든","emoji":"🏓"},"fields":{"slug":"/from-time-to-time/study/learning-typescript/learning-ts-2/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/3/30-gl/","nextSlug":"/steadily/growth-diary/2023/3/29-gl/","prevSlug":"/from-time-to-time/study/learning-typescript/learning-ts-2/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}