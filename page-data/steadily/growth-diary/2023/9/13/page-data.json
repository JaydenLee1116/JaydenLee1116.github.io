{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/9/13/","result":{"data":{"cur":{"id":"086bbda8-fbde-5d6b-9bb0-e78e3e4b31f0","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"cypress\" style=\"position:relative;\"><a href=\"#cypress\" aria-label=\"cypress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cypress</h3>\n<ul>\n<li>E2E 테스트를 위한 라이브러리.</li>\n<li><code class=\"language-text\">Jest</code>와는 달리 <code class=\"language-text\">Cypress</code>는 브라우저에서 동작한다.</li>\n<li>보통 유저의 행동을 테스트하기 위해 사용한다.</li>\n</ul>\n<p>오늘 jest와 RTL로 각 컴포넌트 단위의 테스트 코드를 작성하고 Cypress로 간단한 유저의 행동 양식에 맞는 E2E 테스트 코드를 작성했다. Cypress 자체가 브라우저 UI 단에서 실제 유저의 액션을 보여준다는 점에서는 좋지만, jest와 RTL 만으로도 간단한 유저 행동은 테스팅할 수 있는 것 같아서 Cypress의 효율성에 대해서는 의문이 든다.</p>\n<h3 id=\"test-코드-양식\" style=\"position:relative;\"><a href=\"#test-%EC%BD%94%EB%93%9C-%EC%96%91%EC%8B%9D\" aria-label=\"test 코드 양식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test 코드 양식</h3>\n<p>멘토님께서 가르쳐주신 대로 테스트 코드마다 setup 함수를 두고서 코드를 작성하니, 훨씬 간결하고 깔끔해진다. 아래는 오늘 작성한 Chips 컴포넌트에 대한 테스트 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> screen <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> userEvent <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/user-event'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@testing-library/jest-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Chips <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ThemeProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> theme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../../styles/theme.styled'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chips'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should render Chips component'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> chips <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>chips<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Chip'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should render Chip component'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> chipList <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> firstChip <span class=\"token operator\">=</span> chipList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>firstChip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should render Chip components as many as the number of data'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> chipList <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>chipList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span>mockData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should event handler be called when click Chip component'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> chipList <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> firstChip <span class=\"token operator\">=</span> chipList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> mockOnClick <span class=\"token operator\">=</span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    firstChip<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> mockOnClick<span class=\"token punctuation\">;</span>\n    userEvent<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>firstChip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockOnClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Chips</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>mockData<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Chips.Chip</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Chips.Chip</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Chips</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">wrapper</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeProvider</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> chips <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'section'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> chipList <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getAllByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    chips<span class=\"token punctuation\">,</span>\n    chipList<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> mockData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'test-0'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'test-1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>아고 오늘은 빠르게 미션 정리하고 넥스트 강의도 듣고 싶었는데, 생각보다 미션 정리하는데 시간이 오래 걸렸다. 좀더 빠릿하게(지금보다 더..?) 움직여야지!!!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li><a href=\"#cypress\">Cypress</a></li>\n<li><a href=\"#test-%EC%BD%94%EB%93%9C-%EC%96%91%EC%8B%9D\">Test 코드 양식</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","excerpt":"🚤 성장일지 7.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! ⚛ (7.0)<완전 개편> 을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다. ⚛️ 키워드: 직관적이고 쉽고 간단하게 작성 Cypress E2E 테스트를 위한 라이브러리. 와는 달리 는 브라우저에서 동작한다. 보통 유저의 행동을 테스트하기 위해 사용한다. 오늘 jest와 RTL로 각 컴포넌트 단위의 테스트 코드를 작성하고 Cypress로 간단한 유저의 행동 양식에 맞는 E2E 테스트 코드를 작성했다. Cypress 자체가 브라우저 UI 단에서 실제 유저의 액션을 보여준다는 점에서는 좋지만, jest와 RTL 만으로도 간단한 유저 행동은 테스팅할 수 있는 것 같아서 Cypress의 효율성에 대해서는 의문이 든다. Test 코드 양식 멘토님께서 가르쳐주신 대로 테스트 코드마다 s…","frontmatter":{"date":"September 13, 2023","title":"230913(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/13/"}},"next":{"id":"bf03dc9a-ac19-51ca-8d51-400a74eadcdc","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"테스트-코드\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C\" aria-label=\"테스트 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 코드</h3>\n<ul>\n<li>소프트웨어 테스트는 <code class=\"language-text\">소프트웨어가 의도한대로 동작하는지를 확인하는 과정</code>이다.</li>\n<li>테스트 코드는 <code class=\"language-text\">테스트를 자동화하기 위해 작성하는 코드</code>이다.(개발자는 항상 뭐든지 자동화하려고 노력해야 한다!!! 효율적으로 살자!!!)</li>\n<li>테스트 코드를 작성함으로써 <code class=\"language-text\">테스트를 반복적으로 수행할 수 있고, 테스트를 수행하는 시간을 줄일 수 있다.</code>\n<ul>\n<li>\n<ol>\n<li>빠른 주기로 내 코드에 대한 피드백을 받을 수 있다.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>실시간으로 개발 중에 피드백을 받을 수 있다.</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>즉, 코드를 작성함에 있어서 더 확신을 갖고 작성할 수 있다.</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>테스트 코드 대상의 규모에 따라 단위 테스트, 통합 테스트, E2E 테스트로 나눌 수 있다.\n<ul>\n<li>\n<ol>\n<li>단위 테스트: 함수, 모듈, 클래스 등의 단위를 테스트하는 것</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>통합 테스트: 단위 테스트를 통합하는 것</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>E2E 테스트: 사용자의 관점에서 테스트하는 것</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>사실상 프론트엔드 진영에서는 단위 테스트를 훨씬 많이 적용하고, 비교적 비용이 큰 E2E 테스트는 그 빈도가 더 적다고 한다.</p>\n</blockquote>\n<h4 id=\"jestjavascript-test-라이브러리\" style=\"position:relative;\"><a href=\"#jestjavascript-test-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"jestjavascript test 라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jest(Javascript Test) 라이브러리</h4>\n<ul>\n<li>JavaScript 진영에서 사용되는 테스트 라이브러리 중 가장 대표적인 라이브러리.(이외에도 Mocha, Chai, Jasmine 등이 있다.)</li>\n<li><code class=\"language-text\">*.test.*</code> 형태의 파일을 모두 테스트 코드로 인지한다.</li>\n<li>아래와 같은 형태를 띈다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'테스트 설명'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 테스트를 위한 셋업(변수 선언, 함수 선언 등)</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'테스트 대상'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'기대 결과'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>이 때, <code class=\"language-text\">toBe()</code>와 같은 함수를 <code class=\"language-text\">matcher</code>라고 한다.</li>\n</ul>\n<h4 id=\"react-testing-libraryrtl\" style=\"position:relative;\"><a href=\"#react-testing-libraryrtl\" aria-label=\"react testing libraryrtl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Testing Library(RTL)</h4>\n<ul>\n<li>React 컴포넌트를 테스트하기 위한 라이브러리.</li>\n<li>RTL은 코드의 구체적인 과정이 아니라 결과 즉, <code class=\"language-text\">화면에 무엇이 렌더링되는지</code>에 초점을 맞춘다.\n<ul>\n<li>참고) <code class=\"language-text\">Enzyme</code>은 코드의 구체적인 과정에 초점을 맞춘다.</li>\n<li>예시) 어떤 state를 useState로 관리하다가 Recoil로 관리하게 되었을 때, <code class=\"language-text\">Enzyme</code>은 코드의 구체적인 과정을 테스트하기 때문에 테스트 코드를 수정해야 한다. 반면에 <code class=\"language-text\">RTL</code>은 화면에 무엇이 렌더링되는지에 초점을 맞추기 때문에 테스트 코드를 수정할 필요가 없다.</li>\n</ul>\n</li>\n<li>아래와 같은 형태를 띈다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> screen <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> userEvent <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/user-event'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@testing-library/jest-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App rendering'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> header <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Click me!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  userEvent<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// import '@testing-library/jest-dom'를 통해서 dom과 관련된 matcher 함수들을 사용할 수 있게 된다.</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeDisabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"tddtest-driven-development\" style=\"position:relative;\"><a href=\"#tddtest-driven-development\" aria-label=\"tddtest driven development permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TDD(Test Driven Development)</h3>\n<ul>\n<li>테스트 주도 개발로, 테스트 코드를 먼저 작성하고 그에 맞춰서 코드를 작성하는 방식이다.</li>\n<li>3가지 단계를 거쳐서 진행된다.\n<ul>\n<li>\n<ol>\n<li>Red: 무조건 실패하는 테스트 코드 작성(당연히 함수가 없는데 테스트 코드만 있으니까!)</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Green: 무식하게라도 테스트를 통과하는 코드 작성</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>Blue: Green 단계의 코드를 더 좋은 형태로 리팩토링</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>오늘은 하루종일 Recharts의 공식문서를 보면서 차트에 있어서의 여러 기능과 props들을 살펴보고 적용했다. 요구사항에 해당하는 기능은 모두 구현이 끝나서, 오늘 세션 때 들은 테스트 코드를 열심히 적용했는데, 이놈의 <code class=\"language-text\">styled-components</code>때문에 약간의 에러들이 있었다. 그래도 결국엔 ThemeProvider를 감싸주고 테스트를 진행하니 괜찮았다. 내일은 나아가서 styled-components의 style을 테스트하는 방법과 시간이 된다면 cypress를 통해서 E2E 테스트를 진행해보려 한다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C\">테스트 코드</a></p>\n<ul>\n<li><a href=\"#jestjavascript-test-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\">Jest(Javascript Test) 라이브러리</a></li>\n<li><a href=\"#react-testing-libraryrtl\">React Testing Library(RTL)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tddtest-driven-development\">TDD(Test Driven Development)</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 12, 2023","title":"230912(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/12/"}},"prev":{"id":"28707ef9-f302-5e05-9e1a-9b37624b97ac","html":"<h2 id=\"️-신문스크랩-21\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\" aria-label=\"️ 신문스크랩 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞️ 신문스크랩 2.1</h2>\n<p>기존 티스토리 블로그에서 매일 작성하던 신문 스크랩을 다시 시작하기로 했다.<br/>\n개발자는 문제를 해결하는 사람이다. 그러니 항상 세상에서 일어나는 일(문제)에 관심을 가져야 한다.<br/>\n인상깊은 기사의 헤드라인을 적고 모르는 단어에 대한 정리, 그리고 내 생각을 간단하게 덧붙이는 것으로 가볍게 시작해보자.<br/>\n(v2.1 추가) 기사의 핵심 키워드를 추가해보자.</p>\n<h2 id=\"-주요-기사\" style=\"position:relative;\"><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\" aria-label=\" 주요 기사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌻 주요 기사</h2>\n<p><code class=\"language-text\">한국벤처 고질병은 실패를 겁내는 것</code></p>\n<ul>\n<li>이스라엘 100개 vs 한국 22개</li>\n<li>모란 로브벤처스는 이스라엘의 스타트업 원동력으로 실패를 꼽음</li>\n<li>“실패는 결코 좌절을 가져오는 것이 아니다.”</li>\n</ul>\n<h3 id=\"-키워드\" style=\"position:relative;\"><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞 키워드</h3>\n<ul>\n<li>IT, 실패</li>\n</ul>\n<h3 id=\"-단어-정리\" style=\"position:relative;\"><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\" 단어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔤 단어 정리</h3>\n<ul>\n<li>없음</li>\n</ul>\n<h3 id=\"-내-생각\" style=\"position:relative;\"><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\" aria-label=\" 내 생각 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 내 생각</h3>\n<p>이스라엘 100개, 한국 22개. 기업가치 10억달러 이상인 유니콘 기업의 숫자다. 심지어 이스라엘의 인구수는 1,000만 명, 한국은 5,000만명이다. USB를 최초로 발명하고 여러 성공적인 창업을 경험한 모란 로브벤처스는 그 이유를 <code class=\"language-text\">실패에 대한 관점</code>에서 찾았다고 한다. 이스라엘은 대부분의 청년들이 창업을 시도할 때부터 세계, 즉 글로벌한 기업에 도전한다. 하지만 우리나라는 애초에 실패에 대한 두려움과 걱정으로 시도도 별로 하지 않을 뿐더러 세계를 향한 도전이라기보단 국내에 머무르는 도전을 많이 한다.(사실 이마저도 쉽지 않으니까) 나 또한 한국 사회에서 한국 교육을 받고 자란 사람이기에, <code class=\"language-text\">절대 실패하면 안되지!</code>라는 마인드가 많이 있다. 그래도 요즘은 개발 공부를 하면서 실패를 두려워하기보단 실패 또한 성장의 기회이고 그 기회는 결국 성공을 가져다준다는 점에서 <code class=\"language-text\">실패가 곧 성공</code>임을 알게 되었다. 어릴 때는 그렇게 와닿지 않았는데, 옛날부터 듣던 <code class=\"language-text\">실패는 성공의 어머니</code>라는 말이 새삼 얼마나 대단한 말인지 깨닫게 되었다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\">🗞️ 신문스크랩 2.1</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\">🌻 주요 기사</a></p>\n<ul>\n<li><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\">🗞 키워드</a></li>\n<li><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\">🔤 단어 정리</a></li>\n<li><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\">🤔 내 생각</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 14, 2023","title":"한국벤처 고질병의 고질병","categories":"신문스크랩","author":"제이든","emoji":"📰"},"fields":{"slug":"/from-time-to-time/newspaper/2023/9/14/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/9/13/","nextSlug":"/steadily/growth-diary/2023/9/12/","prevSlug":"/from-time-to-time/newspaper/2023/9/14/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}