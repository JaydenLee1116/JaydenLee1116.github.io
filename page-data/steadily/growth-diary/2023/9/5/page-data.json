{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/9/5/","result":{"data":{"cur":{"id":"51e4e4a7-4f1c-5a23-9bce-1471e010858e","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"react-context-api\" style=\"position:relative;\"><a href=\"#react-context-api\" aria-label=\"react context api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React: Context API</h3>\n<p>그동안 그냥 막연하게 Context API를 <code class=\"language-text\">상태 관리</code>와 자연스럽게 연관지어서 생각했었다. 헌데 오늘 세션을 듣고서 왜 Context API인지, 어떤 상황에서 Context API를 사용하는 게 적절하지, 그리고 실제 Context를 어떻게 분리하고 각각을 관리하는 게 좋은지 알게 되었다. 일단 다른 컴포넌트에게 문맥을 전달한다는 의미에서 Context API라는 게 충격… 덧붙여\nContext API와 useState 혹은 useReducer를 같이 사용하면 이제서야 <code class=\"language-text\">전역 상태 관리</code>의 역할을 수행할 수 있게 된다.</p>\n<h3 id=\"msw의-원리\" style=\"position:relative;\"><a href=\"#msw%EC%9D%98-%EC%9B%90%EB%A6%AC\" aria-label=\"msw의 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MSW의 원리</h3>\n<p>프로젝트 진행 중, 제공되는 서버 레포를 클론해서 다른 포트에 올려두고 api 통신을 하는 게 너무 귀찮아서 이전에 사용해보고 싶었던 MSW를 사용해봤다. 사실 그동안 Node나 Express로 구현한 서버와 크게 다르지 않다고 느꼈는데 그 원리 자체가 차이가 큰 것 같다. 일단 프론트엔드단의 프로젝트에서 통신을 가로채서 응답을 하는 방식이라는 게 참 흥미로웠다. 또, 이에 대한 테스팅까지 가능하다니… 그냥 간단한 서버와 api를 구현하는 것도 너무 좋지만, msw를 사용하면 어느정도 서버 api 짜는 경험도 하면서 개발 속도에도\n도움이 될 것 같다.</p>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>오늘 배운 의존성부터 횡단 관심사, 그리고 아직도 조금 헷갈리는 메모이제이션… 개념들은 알겠는데 이를 어떻게 코드에 적용하고 녹일지가 참 쉽지 않은 것 같다. 그래도 오늘 프로젝트하면서 이제 웬만한 프로젝트 구성은 착착 하는 것 같아서 기분이 좋다! :) UI와 커스텀 훅들을 어느정도 구현했으니, 내일 드디어 Query와 같은 캐싱처리에 시간을 많이 쏟아봐야지!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li><a href=\"#react-context-api\">React: Context API</a></li>\n<li><a href=\"#msw%EC%9D%98-%EC%9B%90%EB%A6%AC\">MSW의 원리</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","excerpt":"🚤 성장일지 7.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! ⚛ (7.0)<완전 개편> 을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다. ⚛️ 키워드: 직관적이고 쉽고 간단하게 작성 React: Context API 그동안 그냥 막연하게 Context API를 와 자연스럽게 연관지어서 생각했었다. 헌데 오늘 세션을 듣고서 왜 Context API인지, 어떤 상황에서 Context API를 사용하는 게 적절하지, 그리고 실제 Context를 어떻게 분리하고 각각을 관리하는 게 좋은지 알게 되었다. 일단 다른 컴포넌트에게 문맥을 전달한다는 의미에서 Context API라는 게 충격… 덧붙여\nContext API와 useState 혹은 useReducer를 같이 사용하면 이제서야 의 역할을 수행할 수 있게 된다. MSW의 원리 프로젝트 진…","frontmatter":{"date":"September 05, 2023","title":"230905(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/5/"}},"next":{"id":"a4dcb527-750f-5a35-9366-080328f7a6d3","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"dns\" style=\"position:relative;\"><a href=\"#dns\" aria-label=\"dns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DNS</h3>\n<p>Domain Name System의 약자로, 도메인 주소를 IP 주소로 변환하는 시스템이다. DNS가 존재하는 이유는 우리가 어떤 웹 사이트에 접속할 때, 단순히 숫자로만 이루어진 IP 주소를 입력하는 것보다 의미를 갖는 문자로 된 도메인 주소를 입력하는 것이 더 편리하기 때문이다. DNS는 OSI 7계층에서 HTTP와 같이 응용 계층에 속한다. (도메인 주소를 통해 IP 주소를 요청하는 것이니)</p>\n<p>우리가 도메인 주소를 입력하면 처음 Local DNS Server(Resolver, 주로 Internet Service Provider)에게 도메인 주소를 요청한다. Local DNS Server는 Root DNS Server에게 도메인 주소를 요청하고, Root DNS Server는 Top-Level Domain DNS Server에게 도메인 주소를 요청한다. 그리고 Top-Level Domain DNS Server는 Second-Level Domain DNS Server에게 도메인 주소를 요청한다. 이렇게 계속해서 도메인 주소를 요청하면서 IP 주소를 받아온다. 그리고 Local DNS Server는 IP 주소를 받아오면 이를 캐싱하고, 이후에 같은 도메인 주소를 요청하면 캐싱된 IP 주소를 바로 응답한다.</p>\n<h3 id=\"브라우저-렌더링-과정---composition합성\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95---composition%ED%95%A9%EC%84%B1\" aria-label=\"브라우저 렌더링 과정   composition합성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 렌더링 과정 - Composition(합성)</h3>\n<p>서버에게 받은 html, css, js를 통해 DOM, CSSOM, Render Tree를 만들고 브라우저는 이를 렌더링한다. 이 때, 각 노드의 위치와 크기를 계산하는 레이아웃, 그 다음 스타일에 대한 정보를 계산하여 입히는 페인트, 끝으로 각 레이어들을 합치는 합성 과정을 거친다. 이전에는 당연히 페인트 과정에서 각 노드들을 <code class=\"language-text\">그린다</code>고 생각했다. 헌데 실제로는 페인트 과정 중에는 각 레이어마다 <code class=\"language-text\">어떻게 그릴지</code>에 대한 정보만 가지고 있다. 그리고 합성 과정에서 각 레이어들을 합쳐서 브라우저에게 보여준다.</p>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>오늘 꼭 가야만 하는 약속도 가고 계획한 공부도 전부 하고..! 바쁘지만 뿌듯하게 보낸 하루였다. 너무 무리하지 않는 선에서 시간을 좀 길게 보고 그 날 해야할 것들을 해나아가는 게 좋은 것 같다. 그래야 더 효율적으로 시간을 보낼 수 있을 것 같다. :)</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://hanamon.kr/dns%EB%9E%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%85%90%EB%B6%80%ED%84%B0-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D%EA%B9%8C%EC%A7%80/\">하나몬: DNS란?</a></li>\n<li><a href=\"https://velog.io/@tnehd1998/%EC%A3%BC%EC%86%8C%EC%B0%BD%EC%97%90-www.google.com%EC%9D%84-%EC%9E%85%EB%A0%A5%ED%96%88%EC%9D%84-%EB%95%8C-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EA%B3%BC%EC%A0%95\">벨로그: 주소창에 www.google.com을 입력했을 때 일어나는 과정</a></li>\n<li><a href=\"https://choi95.tistory.com/166\">웹 렌더링 과정_operation(layout, paint, composition)에 관해</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li><a href=\"#dns\">DNS</a></li>\n<li><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95---composition%ED%95%A9%EC%84%B1\">브라우저 렌더링 과정 - Composition(합성)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 04, 2023","title":"230904(월)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/4/"}},"prev":{"id":"7a109c63-aff0-57f2-ade1-38e20de62c9c","html":"<h2 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"️-키워드-직관적이고-쉽고-간단하게-작성\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\" aria-label=\"️ 키워드 직관적이고 쉽고 간단하게 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</h2>\n<h3 id=\"html의-tabindex\" style=\"position:relative;\"><a href=\"#html%EC%9D%98-tabindex\" aria-label=\"html의 tabindex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html의 tabindex</h3>\n<p>html의 tabindex는 키보드로 포커스를 이동할 수 있는 요소를 지정하는 속성이다. 이 속성을 사용하면 키보드로 포커스를 이동할 수 있는 요소를 지정할 수 있다. 이 때, tabindex의 값은 숫자이며, 0이면 포커스를 받을 수 있고, -1이면 포커스를 받을 수 없다. 또한, 숫자가 클수록 우선순위가 높다. 그러나 mdn에서는 0보다 큰 숫자 사용을 지양할 것을 권장하고 있다. (유저에게 있어 UX적으로 더 혼란을 줄 수 있기 때문이다.)</p>\n<blockquote>\n<p>React에서 특정 element를 ref로 참조하고 해당 element에 포커스를 주고 싶을 때, <code class=\"language-text\">element.focus()</code>를 사용하면 된다. 그런데 이 때, 만약 element가 focus가 되지 않는다면 tabindex를 0으로 설정해주면 된다.</p>\n</blockquote>\n<h3 id=\"context-api\" style=\"position:relative;\"><a href=\"#context-api\" aria-label=\"context api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Context API</h3>\n<p>React의 Context API를 사용하면 tanstack-query만큼은 아니지만 Provider를 통해 캐싱 처리를 할 수 있다. 이에 대해서는 따로 글을 작성해서 자세 작성해볼 예정이다!</p>\n<h3 id=\"cachestorage\" style=\"position:relative;\"><a href=\"#cachestorage\" aria-label=\"cachestorage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CacheStorage</h3>\n<p>매번 브라우저단에 데이터를 저장할 때, localStorage 혹은 sessionStorage를 사용했었다. 이번에 팀 미션으로 캐싱을 다시 구현하면서 CacheStorage를 처음 접했다. 앞의 2개와 큰 차이점은 브라우저의 캐시를 사용한다는 것이다. 즉, 브라우저의 캐시를 사용하면 브라우저가 알아서 캐싱을 관리해주기 때문에 우리가 직접 캐싱을 관리할 필요가 없다. 또한, 캐시를 사용하면 브라우저가 알아서 캐시를 삭제해준다. (localStorage는 우리가 직접 삭제해줘야 한다.) 또, 동기적으로 작동하는 localStorage와 달리 비동기적으로 작동한다는 점도 큰 차이점이다.(블로킹이 없다는 의미)</p>\n<h2 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h2>\n<p>오늘도 열심히 미션을 구현하고 해결했다. 나름 잘 알고 있다고 생각했던 부분들에서도 새로운 게 많아서 참… 개발 공부는 하면 할수록 재미있다. 뭔가 두근거리게 하는 게 있다고 해야하나…ㅋㅋㅋㅋㅋ 이제는 조금 리액트로 프로젝트를 하는 게 익숙해져가는 것 같다. 더 즐겁게 개발하고 더 행복한 삶을 살자!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\">🚤 성장일지 7.0</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B4%EA%B3%A0-%EC%89%BD%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%9E%91%EC%84%B1\">⚛️ 키워드: 직관적이고 쉽고 간단하게 작성</a></p>\n<ul>\n<li><a href=\"#html%EC%9D%98-tabindex\">html의 tabindex</a></li>\n<li><a href=\"#context-api\">Context API</a></li>\n<li><a href=\"#cachestorage\">CacheStorage</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%9A%8C%EA%B3%A0\">📝 회고</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 07, 2023","title":"230907(목)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/9/7/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/9/5/","nextSlug":"/steadily/growth-diary/2023/9/4/","prevSlug":"/steadily/growth-diary/2023/9/7/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}