{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/10/6/","result":{"data":{"cur":{"id":"d1bc7417-8a16-5c3e-a8b9-932bee05783f","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"tailwind-dark-mode\" style=\"position:relative;\"><a href=\"#tailwind-dark-mode\" aria-label=\"tailwind dark mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tailwind dark mode</h2>\n<p>tailwind에서 다크 모드를 적용하는 방법은 크게 2가지가 있다. 각각 <code class=\"language-text\">media</code>와 <code class=\"language-text\">class</code>를 이용하는 방법이다.</p>\n<h3 id=\"media\" style=\"position:relative;\"><a href=\"#media\" aria-label=\"media permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>media</h3>\n<p>따로 설정을 하지 않아도 기본적으로 적용되는 방법이다. 간단하게 <code class=\"language-text\">dark:</code>를 붙여주기만 하면 현재 내 환경의 시스템 설정에 따라서 다크 모드가 적용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bg-white dark:bg-gray-800<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Mode<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"class\" style=\"position:relative;\"><a href=\"#class\" aria-label=\"class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>class</h3>\n<p><code class=\"language-text\">class</code>를 이용하는 방법도 간단하다. 일단 tailwind.config.js에서 <code class=\"language-text\">darkMode</code>를 <code class=\"language-text\">class</code>로 설정해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">darkMode</span><span class=\"token operator\">:</span> <span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 <code class=\"language-text\">class</code>를 이용해서 다크 모드를 적용하고 싶은 곳에 <code class=\"language-text\">dark</code>를 붙여주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bg-white dark:bg-gray-800<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Mode<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>그런데 이 때, <code class=\"language-text\">dark</code>를 붙여주는 것만으로는 다크 모드가 적용되지 않는다. <code class=\"language-text\">dark</code>를 붙여주고 싶은 곳에 <code class=\"language-text\">dark</code>를 붙여주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bg-white dark:bg-gray-800 dark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Mode<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이 때, 보통 특정 태그만 다크 모드가 되는 경우는 없기 떄문에 가장 최상단 태그인 html의 class에 <code class=\"language-text\">dark</code>를 붙여주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이 방법을 통해서 다크 모드를 toggle할 수 있는 버튼을 만들 수 있다.</p>\n<h2 id=\"nextjs-13-app-라우터-기본-페이지-구조-잡기\" style=\"position:relative;\"><a href=\"#nextjs-13-app-%EB%9D%BC%EC%9A%B0%ED%84%B0-%EA%B8%B0%EB%B3%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%AC%EC%A1%B0-%EC%9E%A1%EA%B8%B0\" aria-label=\"nextjs 13 app 라우터 기본 페이지 구조 잡기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js 13 app 라우터 기본 페이지 구조 잡기</h2>\n<p>내가 마이그레이션 중인 프로젝트는 현재는 아주 간단한 페이지 구조를 갖고 있다. <code class=\"language-text\">home</code>, <code class=\"language-text\">user</code>, <code class=\"language-text\">size</code>, <code class=\"language-text\">ingredient</code>, <code class=\"language-text\">result</code> 정도의 페이지를 갖고 있는데, 이 때 user, ingredient, result는 아이스크림 조합을 결정 및 결과가 나오는 페이지로 하나의 폴더로 묶어서 관리하고 싶었다.(라우팅에 영향을 주면 안된다!) 그런 경우에는 폴더명을 <code class=\"language-text\">()</code>로 감싸주면 된다. 아래는 간단한 라우팅 구조를 잡은 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">📦\n├─ src\n│  └─ app\n│     ├─ (combination)\n│     │  ├─ ingredient\n│     │  │  └─ page.tsx\n│     │  ├─ result\n│     │  │  └─ page.tsx\n│     │  └─ size\n│     │     └─ page.tsx\n│     ├─ favicon.ico\n│     ├─ globals.css\n│     ├─ layout.tsx\n│     ├─ not-found.tsx\n│     ├─ page.tsx\n│     └─ user\n│        └─ page.tsx</code></pre></div>\n<p>©generated by <a href=\"https://woochanleee.github.io/project-tree-generator\">Project Tree Generator</a></p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>확실히 조금씩 배우면서 적용하다보니까 속도가 더딘 것 같다. 거기에 다른 프로젝트 리팩토링도 함께 진행하다보니… 참 내가 욕심이 많은건지… 그래도 조금씩 이렇게 병렬적으로 처리하는 게 재미있는 것 같다 ㅋㅋㅋ 당장 나아갈 때는 조금씩 가는 것 같지만 나중에 한번에 퐝 성장하는 기분이 들어서 그런 것 같다 :)</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://tailwindcss.com/docs/dark-mode\">Tailwind 다크 모드</a></li>\n<li><a href=\"https://nextjs.org/docs/app/building-your-application/routing/route-groups\">Next Route Groups</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#tailwind-dark-mode\">tailwind dark mode</a></p>\n<ul>\n<li><a href=\"#media\">media</a></li>\n<li><a href=\"#class\">class</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#nextjs-13-app-%EB%9D%BC%EC%9A%B0%ED%84%B0-%EA%B8%B0%EB%B3%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%AC%EC%A1%B0-%EC%9E%A1%EA%B8%B0\">Next.js 13 app 라우터 기본 페이지 구조 잡기</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","excerpt":"🚤 성장일지 7.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! ⚛ (7.0)<완전 개편> 을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다. tailwind dark mode tailwind에서 다크 모드를 적용하는 방법은 크게 2가지가 있다. 각각 와 를 이용하는 방법이다. media 따로 설정을 하지 않아도 기본적으로 적용되는 방법이다. 간단하게 를 붙여주기만 하면 현재 내 환경의 시스템 설정에 따라서 다크 모드가 적용된다. class 를 이용하는 방법도 간단하다. 일단 tailwind.config.js에서 를 로 설정해준다. 그리고 를 이용해서 다크 모드를 적용하고 싶은 곳에 를 붙여주면 된다. 그런데 이 때, 를 붙여주는 것만으로는 다크 모드가 적용되지 않는다. 를 붙여주고 싶은 곳에 를 붙여주면 된다. 이 때, 보통 특정 태그…","frontmatter":{"date":"October 06, 2023","title":"231006(금) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/6/"}},"next":{"id":"0dd59d02-08f0-5aca-bc2e-27a6f7beac48","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"nextjs\" style=\"position:relative;\"><a href=\"#nextjs\" aria-label=\"nextjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js</h2>\n<p>기존에 React로 진행했던 베스트 라빈스 프로젝트를 Next.js로 마이그레이션 하기로 했다. 사실 처음부터 베스트 라빈스는 Next로 진행하고 싶었다. 왜냐하면 서비스 제공 및 유지 보수에 초점을 맞추고 시작한 프로젝트라서 SEO에 강점을 주고 싶었기 때문이다. 하지만 프로젝트 시작 전에 급하게 Next를 배우면서 진행하기에는 주어진 10일이라는 시간 동안 MVP 조차 완성하지 못할 거 같아서 React로 진행했었다. MVP 개발이 끝나고 마침 시간이 나서 Next로 마이그레이션을 하기로 했다.</p>\n<h3 id=\"pwa-적용과-open-graph\" style=\"position:relative;\"><a href=\"#pwa-%EC%A0%81%EC%9A%A9%EA%B3%BC-open-graph\" aria-label=\"pwa 적용과 open graph permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PWA 적용과 Open Graph</h3>\n<p>Next도 React와 마찬가지로 PWA를 지원한다. 그 방법 자체가 크게 어렵지 않은데 간단하게 정리하자면 아래와 같다.</p>\n<ol>\n<li><code class=\"language-text\">next-pwa</code> 패키지 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i next-pwa</code></pre></div>\n<ol start=\"2\">\n<li>next.config.js 내용 수정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> withPWA <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'next-pwa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">dest</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// disable: process.env.NODE_ENV === 'development',</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withPWA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// next.js config</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>개인적으로 위의 config에서 <code class=\"language-text\">disable: process.env.NODE_ENV === 'development'</code>은 설정하는 걸 추천한다. 왜냐하면 <code class=\"language-text\">npm run dev</code>로 개발 환경을 실행할 때마다 pwa 빌드 파일이 새로 생성되기 때문이다.(commit할 때마다 빌드 파일이 새로 생성돼서 굉장히 불편하다.)</p>\n</blockquote>\n<blockquote>\n<p>추가로 위의 <code class=\"language-text\">disable</code> 설정을 하지 않고 일단 <code class=\"language-text\">npm run build</code>를 통해서 <code class=\"language-text\">public</code>에 <code class=\"language-text\">workbox-*.js</code>와 <code class=\"language-text\">sw.js</code>(service-worker)가 생성되는지 확인하자.</p>\n</blockquote>\n<ol start=\"3\">\n<li><code class=\"language-text\">public</code>에 <code class=\"language-text\">manifest.json</code> 생성</li>\n</ol>\n<p>manifest.json을 설정하여 웹 앱을 설치할 때 사용할 아이콘, 이름, 설명 등을 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Best Robbins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Best Robbins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Best Robbins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/icons/icon-72x72.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"72x72\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/icons/icon-96x96.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"96x96\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ... 중략</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"standalone\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theme_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#ffffff\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>head에 meta 태그 추가</li>\n</ol>\n<ul>\n<li>일반적인 html 혹은 next 12 버전에서는 <code class=\"language-text\">next/head</code>를 사용하여 Head 컴포넌트 내부에 <code class=\"language-text\">&lt;meta /></code> 형식으로 추가할 수 있다.</li>\n<li>하지만 next 13 버전에서는 head 추가 방법이 변경되었기 때문에 <code class=\"language-text\">가장 최상단의 layout.tsx 혹은 page.tsx</code>에 아래와 같이 추가해주면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> metadata<span class=\"token operator\">:</span> Metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  metadataBase<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">URL</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://best-robbins-fe.vercel.app/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">'베스트라빈스'</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token operator\">:</span> <span class=\"token string\">'%s | 베스트라빈스'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  description<span class=\"token operator\">:</span> <span class=\"token string\">'최고의 아이스크림 조합을 추천받아보세요!'</span><span class=\"token punctuation\">,</span>\n  manifest<span class=\"token operator\">:</span> <span class=\"token string\">'/manifest.json'</span><span class=\"token punctuation\">,</span>\n  openGraph<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'website'</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'베스트라빈스'</span><span class=\"token punctuation\">,</span>\n    description<span class=\"token operator\">:</span> <span class=\"token string\">'최고의 아이스크림 조합을 추천받아보세요!'</span><span class=\"token punctuation\">,</span>\n    images<span class=\"token operator\">:</span> <span class=\"token string\">'https://kr.object.ncloudstorage.com/best-robbins/logo/logo_string.svg'</span><span class=\"token punctuation\">,</span>\n    locale<span class=\"token operator\">:</span> <span class=\"token string\">'ko_KR'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">'https://best-robbins-fe.vercel.app/'</span><span class=\"token punctuation\">,</span>\n    siteName<span class=\"token operator\">:</span> <span class=\"token string\">'베스트라빈스'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>여기서 openGraph는 우리가 흔히 <code class=\"language-text\">og:image</code>로 사용하는 메타 태그를 설정하는 것이다. Open Graph는 페이스북에서 만든 메타 태그로, 웹 페이지가 소셜 미디어에 공유될 때 미리보기로 보여지는 정보를 설정할 수 있다. 이를 통해 소셜 미디어에서 공유될 때 미리보기가 잘 나오도록 할 수 있다.</p>\n</blockquote>\n<p>이제 끝이 났으면 빌드 후, <code class=\"language-text\">npm run start</code>로 서버를 실행하고 <code class=\"language-text\">localhost:3000</code>에 접속해보자. 그리고 라이트하우스를 실행하면 PWA가 적용된 것을 확인할 수 있다.</p>\n<h3 id=\"로컬-폰트-적용하기\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC-%ED%8F%B0%ED%8A%B8-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"로컬 폰트 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬 폰트 적용하기</h3>\n<p>next에서 제공하는 <code class=\"language-text\">next/font/google</code>을 사용해서 구글 폰트를 적용할 수 있다. 하지만 로컬 폰트를 적용할 때는 <code class=\"language-text\">next/font/local</code>을 사용한다.</p>\n<p>먼저 원하는 폰트를 다운로드 받는다. 나는 <a href=\"https://noonnu.cc/font_page/694\">Pretendard</a>를 사용했다. <code class=\"language-text\">public/fonts</code>에 폰트 파일을 넣는다. 그리고 아래와 같이 설정하면 전역에 폰트가 적용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./globals.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> Metadata <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> localFont <span class=\"token keyword\">from</span> <span class=\"token string\">'next/font/local'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Pretendard <span class=\"token operator\">=</span> <span class=\"token function\">localFont</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  src<span class=\"token operator\">:</span> <span class=\"token string\">'../../public/fonts/PretendardVariable.woff2'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... 중략</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">RootLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ko<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Pretendard<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>확실히 방향을 정하고 다시 코딩을 하니까 너무 재미있다..ㅠㅠ 개발 자체에서 오는 스트레스도 있지만 개발하지 않을 때 오는 스트레스가 더 크고 힘든 것 같다. 그리고 보통은 새로운 서비스를 개발하기 위한 새로운 코드를 작성하는 게 재미있다고 생각했는데, 오늘 마이그레이션도 그렇고 리팩토링도 그렇고 오히려 유지보수하고 있는 코드를 개선하는 게 더 재미있는 것 같다. 그래서 앞으로는 새로운 서비스를 개발하는 것보다 기존에 개발했던 서비스를 개선하는 것에 더 집중해서 개발할 예정이다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://nextjs.org/docs/app/building-your-application/optimizing/fonts#local-fonts\">Next.js 공식문서: local-font</a></li>\n<li><a href=\"https://www.npmjs.com/package/next-pwa\">Next-pwa</a></li>\n<li><a href=\"https://velog.io/@ghenmaru/Next-PWA-%EC%9B%B9%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0\">Velog: Next-pwa</a></li>\n<li><a href=\"https://noonnu.cc/font_page/694\">Pretendard</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#nextjs\">Next.js</a></p>\n<ul>\n<li><a href=\"#pwa-%EC%A0%81%EC%9A%A9%EA%B3%BC-open-graph\">PWA 적용과 Open Graph</a></li>\n<li><a href=\"#%EB%A1%9C%EC%BB%AC-%ED%8F%B0%ED%8A%B8-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">로컬 폰트 적용하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"October 05, 2023","title":"231005(목) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/5/"}},"prev":{"id":"d01aacf3-2807-50a1-ac9b-d040be562279","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"tailwind-theme-with-light-dark-mode\" style=\"position:relative;\"><a href=\"#tailwind-theme-with-light-dark-mode\" aria-label=\"tailwind theme with light dark mode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tailwind theme with light, dark mode</h2>\n<p>보통 우리가 주어진 디자인을 토대로 개발하게 될 때는 정해진 색상, 크기, 폰트 등을 정해두고 시작한다.(더욱이 디자이너분께서 잘 정리된 디자인 시스템 형태로 작성해주시면 최고!)\n즉, tailwind의 모든 값들을 사용할 필요가 없다는 것이다. 이럴 땐 <code class=\"language-text\">theme</code>를 이용해서 필요한 값들만 정의해두고 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> type <span class=\"token punctuation\">{</span> Config <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'tailwindcss'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> Config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">primary</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#0FC5FF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#0FC5FF'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">secondary</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#8B54FF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#8B54FF'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">white</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">black</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000000'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#000000'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gray_00</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#292F3F'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gray_01</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#F5F5F5'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#3B4359'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gray_02</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#EEEEEE'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#32394B'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gray_03</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#666666'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#9096A9'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gray_04</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#666666'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#EEEEEE'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gray_05</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#292F3F'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">shadow</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span>\n          <span class=\"token string\">'0px 0px 16px 0px rgba(218, 226, 231, 0.3), 0px 24px 24px 0px rgba(181, 190, 197, 0.3)'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'0px 0px 16px 0px rgba(0, 0, 0, 0.20), 0px 24px 24px 0px rgba(0, 0, 0, 0.20)'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">card</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token string\">'#3B4359'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fontSize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">x_small</span><span class=\"token operator\">:</span> <span class=\"token string\">'12px'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">small</span><span class=\"token operator\">:</span> <span class=\"token string\">'14px'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">medium</span><span class=\"token operator\">:</span> <span class=\"token string\">'16px'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">large</span><span class=\"token operator\">:</span> <span class=\"token string\">'18px'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">x_large</span><span class=\"token operator\">:</span> <span class=\"token string\">'24px'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">xx_large</span><span class=\"token operator\">:</span> <span class=\"token string\">'30px'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fontWeight</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">normal</span><span class=\"token operator\">:</span> <span class=\"token string\">'400'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">semi_bold</span><span class=\"token operator\">:</span> <span class=\"token string\">'500'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">bold</span><span class=\"token operator\">:</span> <span class=\"token string\">'700'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'./src/pages/**/*.{js,ts,jsx,tsx,mdx}'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./src/components/**/*.{js,ts,jsx,tsx,mdx}'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./src/app/**/*.{js,ts,jsx,tsx,mdx}'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">darkMode</span><span class=\"token operator\">:</span> <span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>단, 주의할 점은 위와 같이 theme을 설정하게 되면 기존의 tailwind 값들은 모두 무시된다는 것이다. 따라서 기존의 tailwind 값들을 사용하고 싶다면 <code class=\"language-text\">extend</code>를 이용해서 추가해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> type <span class=\"token punctuation\">{</span> Config <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'tailwindcss'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> Config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">extend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ... 중략</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>잘 정의된 theme 값들이 있다면 extend를 사용하는 건 오히려 불편해지는 것 같다. 자칫하면 우리 서비스에서 사용하지 않는 값들을 쓸 수도 있고 오히려 디자인이 추가될 때, config로 돌아가서 추가해주는 게 더 나을 것 같다!</p>\n</blockquote>\n<h2 id=\"next-image\" style=\"position:relative;\"><a href=\"#next-image\" aria-label=\"next image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next Image</h2>\n<p>Next.js에서 이미지를 사용할 때는 <code class=\"language-text\">next/image</code>를 사용하면 된다. 아래와 같이 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> Image <span class=\"token keyword\">from</span> <span class=\"token string\">'next/image'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Logo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex justify-between gap-[6px]<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Image</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/logo/character.png<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>베스트라빈스 로고 캐릭터<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">width</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">36</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">height</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">36</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Image</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/logo/title.png<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>베스트라빈스 로고 타이틀<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">width</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">120</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">height</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>h-[20px]<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 때, next/image는 기본적으로 여러가지 이미지 최적화를 지원하는데, svg에 대해서는 지원하지 않는다. 그 이유는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\">The default loader does not optimize SVG images for a few reasons. First, SVG is a vector format meaning it can be resized losslessly. Second, SVG has many of the same features as HTML/CSS, which can lead to vulnerabilities without a proper Content Security Policy.\n\n기본 로더는 몇 가지 이유로 SVG 이미지를 최적화하지 않습니다. 첫째, SVG는 벡터 형식이므로 손실 없이 크기를 조정할 수 있습니다. 둘째, SVG에는 HTML/CSS와 동일한 기능이 많기 때문에 적절한 콘텐츠 보안 정책이 없으면 취약점이 발생할 수 있습니다.</code></pre></div>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>확실히 초반에는 더뎠지만 하다보니까 점차 속도가 붙는 것 같다. next.js의 공식문서가 정말 정리가 잘되어있는 덕분이다. react 공식문서보다도 훨씬 더 잘 정리가 되어있는 것 같다 허허… 쉽지 않지만 이왕 마이그레이션하기로 한 거 계속 꾸준히 해봐야겠다..! 그러면서 리액트 자체에 대한 깊이 있는 이해도도 높이도록 하자!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://tailwindcss.com/docs/theme\">Tailwind theme 파트</a></li>\n<li><a href=\"https://nextjs.org/docs/app/api-reference/components/image#dangerouslyallowsvg\">Next Image 파트</a></li>\n<li><a href=\"https://velog.io/@hayeonwee/Figma%ED%94%BC%EA%B7%B8%EB%A7%88-Export-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%95%B4%EC%83%81%EB%8F%84-%EC%84%A4%EC%A0%95\">피그마 png 해상도 설정</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#tailwind-theme-with-light-dark-mode\">tailwind theme with light, dark mode</a></li>\n<li><a href=\"#next-image\">Next Image</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 08, 2023","title":"231008(일) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/8/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/10/6/","nextSlug":"/steadily/growth-diary/2023/10/5/","prevSlug":"/steadily/growth-diary/2023/10/8/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}