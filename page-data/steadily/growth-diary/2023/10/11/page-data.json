{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/10/11/","result":{"data":{"cur":{"id":"fe3682ad-3a21-52bf-abe0-55e0c9fd5f9c","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"swiper-ux-개선\" style=\"position:relative;\"><a href=\"#swiper-ux-%EA%B0%9C%EC%84%A0\" aria-label=\"swiper ux 개선 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swiper UX 개선</h2>\n<p>Swiper를 이용해서 Carousel을 구현 후, 배포하여 핸드폰에서 동작시켜보았다. 그런데 웬걸 슬라이드 UX가 뚝뚝 끊기면서 작동했다. 이 부분을 혹시 공식문서에서 지원하나 해서 찾아보았는데 다행히 <code class=\"language-text\">cssMode</code>라는 옵션을 제공하고 있었다. 이 옵션을 적용하니 슬라이드 UX가 매끄럽게 동작했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">활성화하면 최신 CSS 스크롤 스냅 API를 사용합니다. Swiper의 모든 기능을 지원하지는 않지만 간단한 구성에서 훨씬 더 나은 성능을 제공할 수 있습니다.</code></pre></div>\n<p>적용하고 나서 슬라이드가 아주 매끄럽게 동작하게 되었다. 다만 문제는 데스크탑에서 터치 슬라이드가 되질 않는다는 것이었다. 구글링도 해보고 이것저것 다 해봤지만 <code class=\"language-text\">cssMode</code> 적용 후에는 어쩔 수 없는 것 같다. 그래도 유저에게 슬라이드를 넘겨줄 수 있는 UX를 제공하기 위해 Navigation 버튼을 추가했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Swiper</span></span>\n  <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>h-full w-full<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">modules</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>Autoplay<span class=\"token punctuation\">,</span> A11y<span class=\"token punctuation\">,</span> Navigation<span class=\"token punctuation\">,</span> Keyboard<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">autoplay</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> delay<span class=\"token operator\">:</span> <span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DELAY</span><span class=\"token punctuation\">,</span> disableOnInteraction<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">freeMode</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">navigation</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>isDesktop<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">keyboard</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> enabled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">lazyPreloadPrevNext</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LAZY_LOADED_PREV_NEXT</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">spaceBetween</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>bodyWidth <span class=\"token operator\">&lt;</span> <span class=\"token constant\">STANDARD</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WIDTH</span> <span class=\"token operator\">?</span> bodyWidth <span class=\"token operator\">:</span> <span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SPACE_BETWEEN</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">slidesPerView</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SLIDES_PER_VIEW</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loop</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loopedSlides</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LOOPED_SLIDES</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loopPreventsSliding</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">onRealIndexChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>swiper <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCurrentSlideIndex</span><span class=\"token punctuation\">(</span>swiper<span class=\"token punctuation\">.</span>realIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">cssMode</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"github-issue-자동-close되던-문제\" style=\"position:relative;\"><a href=\"#github-issue-%EC%9E%90%EB%8F%99-close%EB%90%98%EB%8D%98-%EB%AC%B8%EC%A0%9C\" aria-label=\"github issue 자동 close되던 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github Issue 자동 close되던 문제</h2>\n<p>마이그레이션 프로젝트를 하면서 계속 내가 만든 이슈가 자동으로 close가 되어서 왜 이러나 했다.(진작 찾아볼걸… 반성) 처음엔 일정 시간이 지나면 닫히는건가 했는데 알고보니 커밋 메시지에 아래와 같은 단어와 이슈 넘버를 적어주면 자동으로 close가 된다고 한다.</p>\n<ul>\n<li>close, closes, closed, fix, fixes, fixed, resolve, resolves, resolved + #{issue number}: 이슈를 자동으로 close한다.</li>\n</ul>\n<h2 id=\"zustand를-통한-전역-상태-관리\" style=\"position:relative;\"><a href=\"#zustand%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC\" aria-label=\"zustand를 통한 전역 상태 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>zustand를 통한 전역 상태 관리</h2>\n<p>여러 상태 관리 라이브러리 중 이상하게 zustand가 땡긴다 허헣… 일단 사용법이 정말 간단하면서 Redux Devtools도 지원하고 무엇보다 demo 사이트가 정말 너무 예쁘다ㅋㅋㅋ Jotai를 개발하신 분이랑 동일인물이라고 알고 있는데, 뭔가 Zustand에 더 공을 들이시는 느낌..? (또, npm trends를 보면 zustand의 사용량 증가가 정말 어마어마하게 증가하고 있다..! 곧 Redux 따라잡을듯..?) 이번에 Next와 처음으로 같이 사용해봤는데 client 컴포넌트에서 정말 깔끔하게 전역 상태 관리를 할 수 있어서 너어어어어무 좋은 것 같다. 아래는 간단하게 사용해본 코드이다.(유저의 선택을 저장하는 스토어)</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> create <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'zustand'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> UserSelect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">State</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  userSelect<span class=\"token operator\">:</span> UserSelect<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Action</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">setUserSelectSize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>sizeId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setUserSelectIngredientIds</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>ingredientIds<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> initialState<span class=\"token operator\">:</span> State <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  userSelect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    sizeId<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    ingredientIds<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useUserSelectStore <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">create</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>State <span class=\"token operator\">&amp;</span> Action<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>initialState<span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">setUserSelectSize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>sizeId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> userSelect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>userSelect<span class=\"token punctuation\">,</span> sizeId <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">setUserSelectIngredientIds</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>ingredientIds<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> userSelect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>userSelect<span class=\"token punctuation\">,</span> ingredientIds <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>예전엔 대충 공식문서 읽고 혼자서 짰는데, 다시 공식문서를 꼼꼼하게 보면서 좀더 편하게 작성할 수 있었다. 추후에 Immer와 함께 사용해서 좀더 깔끔하고 편하게 짜봐야겠다. 지금 state 정도에서는 Immer를 굳이 적용할 필요가 없는 것 같다.</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>그래도 오늘도 페이지 하나 마이그레이션이 끝났다. 적용하고 싶었던 zustand도 내 개인적으론 Next와 잘 맞는 느낌이라 재미있게 잘 사용할 수 있었다. 생각보다 이전에 구현했던 Carousel 쪽에서 문제가 많이 발생해서 조금 귀찮았지만… 일단은 UX 적으로는 문제없이 잘 마무리한 것 같다!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://github.com/nolimits4web/swiper/issues/3841\">Swiper UX in Mobile</a></li>\n<li><a href=\"https://stackoverflow.com/questions/12235620/automatically-closing-issue-from-pull-request-in-github\">Github auto close issue</a></li>\n<li><a href=\"https://docs.pmnd.rs/zustand/getting-started/introduction\">Zustand</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#swiper-ux-%EA%B0%9C%EC%84%A0\">Swiper UX 개선</a></li>\n<li><a href=\"#github-issue-%EC%9E%90%EB%8F%99-close%EB%90%98%EB%8D%98-%EB%AC%B8%EC%A0%9C\">Github Issue 자동 close되던 문제</a></li>\n<li><a href=\"#zustand%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%A0%84%EC%97%AD-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC\">zustand를 통한 전역 상태 관리</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","excerpt":"🚤 성장일지 7.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! ⚛ (7.0)<완전 개편> 을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다. Swiper UX 개선 Swiper를 이용해서 Carousel을 구현 후, 배포하여 핸드폰에서 동작시켜보았다. 그런데 웬걸 슬라이드 UX가 뚝뚝 끊기면서 작동했다. 이 부분을 혹시 공식문서에서 지원하나 해서 찾아보았는데 다행히 라는 옵션을 제공하고 있었다. 이 옵션을 적용하니 슬라이드 UX가 매끄럽게 동작했다. 적용하고 나서 슬라이드가 아주 매끄럽게 동작하게 되었다. 다만 문제는 데스크탑에서 터치 슬라이드가 되질 않는다는 것이었다. 구글링도 해보고 이것저것 다 해봤지만  적용 후에는 어쩔 수 없는 것 같다. 그래도 유저에게 슬라이드를 넘겨줄 수 있는 UX를 제공하기 위해 Navigation 버튼을…","frontmatter":{"date":"October 11, 2023","title":"231011(수) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/11/"}},"next":{"id":"e6d00945-f1c1-591c-bf5b-736002afa887","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"swiper-사용-후기\" style=\"position:relative;\"><a href=\"#swiper-%EC%82%AC%EC%9A%A9-%ED%9B%84%EA%B8%B0\" aria-label=\"swiper 사용 후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swiper 사용 후기</h2>\n<p>기존 react로 프로젝트를 할 때는 열심히 적용해보려다가 계속 ui가 깨져서 포기하고 직접 Carousel 컴포넌트를 구현했다. 직접 구현한 것까진 좋은데, 아무래도 touch slide나 확장성면에서 완성도가 많이 떨어졌다.(조금만 건드려도 부서질 것만 같은 컴포넌트…) 그래서 이번엔 다시 각잡고!!! swiper를 열심히 뜯어보면서 적용해보았다. 하… 이렇게 편하고 쉬운 건 줄 알았더라면… 허허</p>\n<p>우선 swiper에서는 다양한 기능을 가진 module들을 지원하고 있다. 아래와 같이 사용하면 된다.</p>\n<p>추가 1) 보통 slide가 변경될 때마다 콜백을 실행하려고 <code class=\"language-text\">onSlideChange</code>를 사용했는데, 이건 slide가 변경될 때마다 실행되는 것이 아니라 유저가 slide를 변경하고 마우스를 떼는 순간에만 실행된다. 그래서 <code class=\"language-text\">onRealIndexChange</code>를 사용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 생략</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Swiper</span></span>\n  <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>h-full w-full<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">modules</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>Autoplay<span class=\"token punctuation\">,</span> A11y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">autoplay</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> delay<span class=\"token operator\">:</span> <span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DELAY</span><span class=\"token punctuation\">,</span> disableOnInteraction<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">spaceBetween</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>bodyWidth <span class=\"token operator\">&lt;</span> <span class=\"token number\">390</span> <span class=\"token operator\">?</span> bodyWidth <span class=\"token operator\">:</span> <span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SPACE_BETWEEN</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">slidesPerView</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SLIDES_PER_VIEW</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loop</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">loopedSlides</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">SWIPER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LOOPED_SLIDES</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">onRealIndexChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>swiper <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setCurrentSlideIndex</span><span class=\"token punctuation\">(</span>swiper<span class=\"token punctuation\">.</span>realIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n// 생략</span></code></pre></div>\n<p>그리고 또 하나 기억하면 좋을 것! swiper 컴포넌트에 tailwindcss의 className으로 <code class=\"language-text\">display</code> 속성을 적용하는 건 되지 않는다. 아마 기본적인 설정 자체가 <code class=\"language-text\">block</code>으로 되어있는 것 같다. 그래서 <code class=\"language-text\">display</code> 속성을 적용하고 싶다면 <code class=\"language-text\">style</code> 속성으로 직접 적용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SwiperSlide</span></span>\n  <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex h-full w-full items-center justify-center<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token comment\">// NOTE: Swiper 컴포넌트의 display는 테일윈드 클래스를 적용할 수 없다.</span>\n  <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> display<span class=\"token operator\">:</span> <span class=\"token string\">'flex'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentSlideIndex <span class=\"token operator\">!==</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clickedSlideIndex <span class=\"token operator\">!==</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setClickedSlideIndex</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setClickedSlideIndex</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n// 생략</span></code></pre></div>\n<h2 id=\"httpclient로-확장성-생각하기추후-의존성-주입도-고려해보기\" style=\"position:relative;\"><a href=\"#httpclient%EB%A1%9C-%ED%99%95%EC%9E%A5%EC%84%B1-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0%EC%B6%94%ED%9B%84-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%EB%8F%84-%EA%B3%A0%EB%A0%A4%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"httpclient로 확장성 생각하기추후 의존성 주입도 고려해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>httpClient로 확장성 생각하기(추후 의존성 주입도 고려해보기)</h2>\n<p>아래와 같이 api 통신하는 로직을 관리하면 더 깔끔하게 추상화가 될뿐만 아니라 나중에 다른 의존성을 주입받아 사용하기 좋아진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> baseUrl<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">=</span> baseUrl<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>path<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>options<span class=\"token punctuation\">,</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>아래는 위의 HttpClient 클래스를 사용하는 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HttpClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../http'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getRecommendations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEXT_PUBLIC_BASE_API_URL</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'존재하지 않는 환경변수입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> httpClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEXT_PUBLIC_BASE_API_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/recommendations'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"고민-여러-기기에-대응하기\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EB%AF%BC-%EC%97%AC%EB%9F%AC-%EA%B8%B0%EA%B8%B0%EC%97%90-%EB%8C%80%EC%9D%91%ED%95%98%EA%B8%B0\" aria-label=\"고민 여러 기기에 대응하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고민: 여러 기기에 대응하기</h2>\n<p>swiper를 통해 Carousel 컴포넌트를 구현하는데, 현재 slide의 양 옆 slide에 대한 style을 변경하는 작업을 했다. 그런데 다양한 화면크기에 따라 Carousel 컴포넌트의 ui를 세밀하게 조정하는 게 정말 어려웠다.(지금도 어느정도만 대응했지… 완벽하게는 못했다.) 기기마다 다른 화면에 대해서는 실제 현업에선 어떻게 대응할지 너무 알고싶다. 그저 media query를 사용하기에는 스마트폰의 화면이 너무 다양한데… 흠 계속 이 부분을 어떻게 효율적으로 처리할지 찾아봐야겠다.</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>사실 위의 내용말고도 Carousel에서 사용되는 image 크기 조절부터 짜잘한 tailwind 오류까지… 많았지만 이건 Carousel 컴포넌트를 정리할 때 한번에 작성해야겠다. 그나저나 오늘은 진짜 일찍 자려했는데… 얼른 자야지!!!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://swiperjs.com/react\">Swiper react</a></li>\n<li><a href=\"https://github.com/nolimits4web/swiper/issues/3344\">Multiple slideChange events triggered when looping</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#swiper-%EC%82%AC%EC%9A%A9-%ED%9B%84%EA%B8%B0\">Swiper 사용 후기</a></li>\n<li><a href=\"#httpclient%EB%A1%9C-%ED%99%95%EC%9E%A5%EC%84%B1-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0%EC%B6%94%ED%9B%84-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%EB%8F%84-%EA%B3%A0%EB%A0%A4%ED%95%B4%EB%B3%B4%EA%B8%B0\">httpClient로 확장성 생각하기(추후 의존성 주입도 고려해보기)</a></li>\n<li><a href=\"#%EA%B3%A0%EB%AF%BC-%EC%97%AC%EB%9F%AC-%EA%B8%B0%EA%B8%B0%EC%97%90-%EB%8C%80%EC%9D%91%ED%95%98%EA%B8%B0\">고민: 여러 기기에 대응하기</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 10, 2023","title":"231010(화) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/10/"}},"prev":{"id":"8db9a1d9-059f-5da8-9dee-58aaa0483281","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"nextjs의-image-src-에러\" style=\"position:relative;\"><a href=\"#nextjs%EC%9D%98-image-src-%EC%97%90%EB%9F%AC\" aria-label=\"nextjs의 image src 에러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js의 Image src 에러</h2>\n<p>Image 컴포넌트의 src에 백엔드에서 받아온 이미지 url을 넣어주었는데, 아래와 같은 에러가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Error: Invalid src prop...</code></pre></div>\n<p>이는 Next.js 공식문서에서도 확인할 수 있는데, 외부 url을 통해 이미지를 가져올 때 악성 이미지를 가져오지 않기 위함이라고 한다. 해결법은 생각보다 너무 간단하다. <code class=\"language-text\">next.config.js</code> 파일을 생성하고 아래와 같이 작성해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">images</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">domains</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'images.unsplash.com'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 외부 url을 통해 이미지를 가져올 때, 허용할 도메인을 적어준다.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"pwa가-가능하게-해주는-서비스워커\" style=\"position:relative;\"><a href=\"#pwa%EA%B0%80-%EA%B0%80%EB%8A%A5%ED%95%98%EA%B2%8C-%ED%95%B4%EC%A3%BC%EB%8A%94-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9B%8C%EC%BB%A4\" aria-label=\"pwa가 가능하게 해주는 서비스워커 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PWA가 가능하게 해주는 서비스워커?</h2>\n<p>서비스워커란 우리가 작성한 웹 앱을 브라우저가 백그라운드에서 실행할 수 있게 해주는 브라우저 기능이다. 기본적으로 서비스워커는 우리 서비스의 실행유무와 상관없이 백그라운드에서 실행되기 때문에 브라우저가 종료되어도 서비스워커는 계속 실행된다. 이를 이용해서 우리는 브라우저가 종료되어도 서비스워커가 실행되는 동안에는 푸시 알림을 보내거나, 오프라인에서도 웹 앱을 사용할 수 있는 것이다.\n조금 단순하게 생각하면 브라우저와 네트워크 사이에서 프록시 서버의 역할처럼 동작한다고 보면된다. 예를 들면 오프라인 상태에서도 서비스워커는 브라우저와 네트워크 사이에서 요청을 받아서 캐싱된 데이터를 응답해준다. 또한 우리가 오프라인일 때 채팅을 보내거나 특정 유저의 알림을 받아야되는 상황에서 온라인이 되자마자 보냈던 채팅이 전송된다거나 알림이 뜨는 것도 서비스워커를 통해 가능하다.</p>\n<h2 id=\"마이그레이션-포팅-컨버팅\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%ED%8F%AC%ED%8C%85-%EC%BB%A8%EB%B2%84%ED%8C%85\" aria-label=\"마이그레이션 포팅 컨버팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마이그레이션, 포팅, 컨버팅</h2>\n<p>아주 사소한 차이지만(사실 거의 마이그레이션이라는 표현을 쓰지만), 이력서를 작성하다가 React에서 Next로 <code class=\"language-text\">마이그레이션한다</code>는 말이 맞는건가 싶어서 찾아보았다.</p>\n<ul>\n<li>마이그레이션: 기존 시스템을 새로운 시스템으로 옮기는 것, 보통은 더 나은 운영 체제나 더 나은 하드웨어로 옮기는 것을 의미한다.</li>\n<li>포팅: 컴퓨터 프로그램을 다른 컴퓨터 플랫폼으로 옮기는 것을 의미한다. 예를 들어 iOS 동작하는 어플리케이션을 안드로이드에서 동작하게 하는 것도 포팅이다.</li>\n<li>컨버팅: 컴퓨터 프로그램을 다른 프로그래밍 언어로 옮기는 것을 의미한다. 예를 들어 C++로 작성된 프로그램을 Java로 옮기는 것도 컨버팅이다.</li>\n</ul>\n<p>위의 정의들을 보니 보통 서비스 개발자들이 사용하는 <code class=\"language-text\">마이그레이션</code>은 <code class=\"language-text\">컨버팅</code>에 가까운 것 같다. 딱 잘라서 정해진 표현들은 아니니까 그냥 마이그레이션으로 써도 큰 문제는 없을 것 같다.</p>\n<h2 id=\"robotstxt와-sitemapxml\" style=\"position:relative;\"><a href=\"#robotstxt%EC%99%80-sitemapxml\" aria-label=\"robotstxt와 sitemapxml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>robots.txt와 sitemap.xml</h2>\n<p>SEO를 위해 robots.txt와 sitemap.xml를 추가해주었다.</p>\n<ul>\n<li>robots.txt: 검색엔진이 사이트를 크롤링할 때 어떤 페이지를 크롤링할지, 어떤 페이지를 크롤링하지 않을지를 정의해주는 파일이다.</li>\n<li>sitemap.xml: 검색엔진에게 사이트의 구조를 알려주는 파일이다.</li>\n</ul>\n<p>보통은 이 둘을 추가해주면 검색엔진이 사이트를 크롤링할 때 더 효율적으로 크롤링을 할 수 있다고 한다. 또한 sitemap.xml을 추가해주면 검색엔진이 사이트를 크롤링할 때 더 빠르게 크롤링을 할 수 있다고 한다(페이지의 구조를 더 명확하게 알려주니까!).</p>\n<p>Next에서는 위 두 파일을 <code class=\"language-text\">app</code> 최상위 루트에 추가하거나 간단한 js(혹은 ts) 코드로 생성할 수 있다. 나는 간단하게 ts로 작성해서 생성해주었다.</p>\n<p>robots.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MetadataRoute <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">robots</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> MetadataRoute<span class=\"token punctuation\">.</span>Robots <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      userAgent<span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n      allow<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    sitemap<span class=\"token operator\">:</span> <span class=\"token string\">'https://best-robbins-fe.vercel.app/sitemap.xml'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>sitemap.ts</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MetadataRoute <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sitemap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> MetadataRoute<span class=\"token punctuation\">.</span>Sitemap <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">'https://best-robbins-fe.vercel.app/'</span><span class=\"token punctuation\">,</span>\n      lastModified<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      changeFrequency<span class=\"token operator\">:</span> <span class=\"token string\">'yearly'</span><span class=\"token punctuation\">,</span>\n      priority<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">'https://best-robbins-fe.vercel.app/size'</span><span class=\"token punctuation\">,</span>\n      lastModified<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      changeFrequency<span class=\"token operator\">:</span> <span class=\"token string\">'yearly'</span><span class=\"token punctuation\">,</span>\n      priority<span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">'https://best-robbins-fe.vercel.app/ingredient'</span><span class=\"token punctuation\">,</span>\n      lastModified<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      changeFrequency<span class=\"token operator\">:</span> <span class=\"token string\">'monthly'</span><span class=\"token punctuation\">,</span>\n      priority<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"packagejson의-틸드와-캐럿\" style=\"position:relative;\"><a href=\"#packagejson%EC%9D%98-%ED%8B%B8%EB%93%9C%EC%99%80-%EC%BA%90%EB%9F%BF\" aria-label=\"packagejson의 틸드와 캐럿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json의 틸드와 캐럿</h2>\n<p>package.json에서 버전을 명시할 때 <code class=\"language-text\">~</code>와 <code class=\"language-text\">^</code>를 사용하는데, 이 둘의 차이점을 몰랐다. 찾아보니 아래와 같은 차이가 있다고 한다.</p>\n<p>기본적으로 js 라이브러리의 버전은 <code class=\"language-text\">Semantic Versioning</code>을 따르는데, 그 구조는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MAJOR.MINOR.PATCH\n\n- MAJOR: 기존 버전과 호환되지 않는 새로운 버전(하위 호환되지 않음)\n- MINOR: 기존 버전과 호환되는 새로운 기능이 추가된 버전(하위 호환됨)\n- PATCH: 기존 버전과 호환되는 버그 수정 버전(하위 호환됨)</code></pre></div>\n<p>위의 내용을 기억하면 틸드와 캐럿은 구분하기 쉽다.</p>\n<ul>\n<li>\n<p>틸드(<code class=\"language-text\">~</code>): <code class=\"language-text\">MAJOR.MINOR</code>까지만 고정하고 <code class=\"language-text\">PATCH</code>는 최신 버전으로 업데이트한다. 예를 들어 <code class=\"language-text\">~1.2.3</code>이라고 하면 <code class=\"language-text\">1.2.3</code> 버전을 사용하고, <code class=\"language-text\">1.2.4</code> 버전이 나오면 <code class=\"language-text\">1.2.4</code> 버전으로 업데이트한다. 즉, 버그 수정 버전은 업데이트하지만 새로운 기능이 추가되는 버전은 업데이트하지 않는다.</p>\n</li>\n<li>\n<p>캐럿(<code class=\"language-text\">^</code>): <code class=\"language-text\">MAJOR</code>까지만 고정하고 <code class=\"language-text\">MINOR.PATCH</code>는 최신 버전으로 업데이트한다. 예를 들어 <code class=\"language-text\">^1.2.3</code>이라고 하면 <code class=\"language-text\">1.2.3</code> 버전을 사용하고, <code class=\"language-text\">1.3.0</code> 버전이 나오면 <code class=\"language-text\">1.3.0</code> 버전으로 업데이트한다. 즉, 새로운 기능이 추가되는 버전은 업데이트하지만 하위 호환되지 않는 MAJOR 업데이트는 하지 않는다.</p>\n</li>\n</ul>\n<p>아무래도 하위호환이 보장되는 선에서 최신 버전으로 업데이트하는 게 편하기 때문에 보통 기본적으로 캐럿을 사용한다.</p>\n<p>이 때, 특이사항으로 라이브러리의 버전이 <code class=\"language-text\">1.0.0</code> 이전인 경우는 <code class=\"language-text\">pre-release</code>라고 해서 <code class=\"language-text\">MAJOR</code> 업데이트가 아니라도 하위호환이 되지 않는 api 변경이 빈번하게 일어난다. 이런 경우에는 틸드와 캐럿 모두 틸드처럼 동작한다고 한다. 즉, 최대한 하위호환을 보장하면서 버그 수정 버전만 업데이트한다.</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>아직 완벽하진 않지만, 어느정도 기본 구현으로는 Next.js로 마이그레이션을 맞췄다! 리드미도 1차 정리가 끝이 났고..! 후… 이제 남은 페이지랑 더 구현하고 싶었던 기능들을 얼른 구현해야지!!!!!!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://nextjs.org/docs/app/building-your-application/optimizing/images#remote-images\">Next Image safely allow</a></li>\n<li><a href=\"https://so-so.dev/web/service-worker/\">서비스 워커란?</a></li>\n<li><a href=\"https://freemoa-blog.com/940\">마이그레이션, 포팅, 컨버팅</a></li>\n<li><a href=\"https://nextjs.org/docs/app/api-reference/file-conventions/metadata\">Next robots.txt</a></li>\n<li><a href=\"https://nextjs.org/docs/app/api-reference/file-conventions/metadata/sitemap\">Next sitemap.xml</a></li>\n<li><a href=\"https://blog.outsider.ne.kr/1041\">npm package.json에서 틸드(~) 대신 캐럿(^) 사용하기</a></li>\n<li><a href=\"https://umanking.github.io/2022/05/05/npm-version-tilde-caret/\">package.json의 틸드와 캐럿</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#nextjs%EC%9D%98-image-src-%EC%97%90%EB%9F%AC\">Next.js의 Image src 에러</a></li>\n<li><a href=\"#pwa%EA%B0%80-%EA%B0%80%EB%8A%A5%ED%95%98%EA%B2%8C-%ED%95%B4%EC%A3%BC%EB%8A%94-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9B%8C%EC%BB%A4\">PWA가 가능하게 해주는 서비스워커?</a></li>\n<li><a href=\"#%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98-%ED%8F%AC%ED%8C%85-%EC%BB%A8%EB%B2%84%ED%8C%85\">마이그레이션, 포팅, 컨버팅</a></li>\n<li><a href=\"#robotstxt%EC%99%80-sitemapxml\">robots.txt와 sitemap.xml</a></li>\n<li><a href=\"#packagejson%EC%9D%98-%ED%8B%B8%EB%93%9C%EC%99%80-%EC%BA%90%EB%9F%BF\">package.json의 틸드와 캐럿</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 13, 2023","title":"231013(금) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/13/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/10/11/","nextSlug":"/steadily/growth-diary/2023/10/10/","prevSlug":"/steadily/growth-diary/2023/10/13/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}