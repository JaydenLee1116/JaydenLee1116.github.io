{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/10/24/","result":{"data":{"cur":{"id":"2dd78477-8c36-5d09-8d5b-54884b15978a","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"toast-컴포넌트-구현하기\" style=\"position:relative;\"><a href=\"#toast-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"toast 컴포넌트 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Toast 컴포넌트 구현하기</h2>\n<p>살짝 애매한 감이 있지만, tailwindcss를 사용해서 Toast 컴포넌트를 구현해보았다. 우선 브라우저 하단에서 위로 튀어나오는 토스트와 그 반대로 이동하는 토스트를 구현하고 싶었기 때문에 아래와 같이 tailwindcss config를 설정하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> type <span class=\"token punctuation\">{</span> Config <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'tailwindcss'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> Config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'./src/pages/**/*.{js,ts,jsx,tsx,mdx}'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./src/components/**/*.{js,ts,jsx,tsx,mdx}'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./src/app/**/*.{js,ts,jsx,tsx,mdx}'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">keyframes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">slideUpFadeOut</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'0%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token string\">'100'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'90%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(-90%)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token string\">'100'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'100%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(-100%)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">slideDownFadeOut</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'0%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(-100%)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token string\">'100'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'90%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(-10%)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token string\">'100'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'100%'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token string\">'translateY(0)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token string\">'0'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">animation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">slideUpFadeOut</span><span class=\"token operator\">:</span> <span class=\"token string\">'slideUpFadeOut 1s ease-in-out forwards'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">slideDownFadeOut</span><span class=\"token operator\">:</span> <span class=\"token string\">'slideDownFadeOut 1s ease-in-out forwards'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게만 하면 사실 거의 끝이 났다. 이제는 토스트 컴포넌트를 구현하면 된다. 토스트 컴포넌트는 아래와 같이 구현하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Props</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode<span class=\"token punctuation\">;</span>\n  direction<span class=\"token operator\">:</span> <span class=\"token string\">'up'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'down'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Toast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> direction <span class=\"token operator\">=</span> <span class=\"token string\">'up'</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'down'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fixed bottom-0 z-50 flex h-20 w-32 animate-slideDownFadeOut items-center justify-center rounded-lg bg-yellow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-xl font-bold leading-xl text-black_100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fixed bottom-0 z-50 flex h-20 w-32 animate-slideUpFadeOut items-center justify-center rounded-lg bg-blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-xl font-bold leading-xl text-white_100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>props로 children과 direction을 받아서 토스트의 내용은 children으로 전달하고 위에서 구현했던 애니메이션 중 하나를 direction에 따라서 적용하도록 하였다. 이제 토스트를 사용해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ToastMachine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>upToast<span class=\"token punctuation\">,</span> setUpToast<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>downToast<span class=\"token punctuation\">,</span> setDownToast<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>upToast <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toast</span></span> <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>up<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">스크랩 완료!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Toast</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>downToast <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Toast</span></span> <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>down<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">스크랩 취소!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Toast</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 각각의 방향에 맞는 상태를 설정해주고 사용하면 된다. 이 때, 각 토스트의 상태는 특정 이벤트에 따라서 변경되도록 하면 된다. ex) 어떤 버튼을 클릭했을 때, 토스트 상태를 변경하는 handler를 전달하면 된다.</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>후아… 프로젝트를 하는 동안 코드는 엉망이지만… 그래도 어지저찌 필수 기능과 내가 좀더 욕심 냈던 부분들까지 구현을 마칠 수 있었다. 생각보다 프로젝트 기간 동안 받는 압박감(?)이 작지 않은 것 같다. 일주일을 휘리릭 보낸만큼 다시 계획부터 재정비하고 내일부터 또 열심히 달려봐야지.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#toast-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\">Toast 컴포넌트 구현하기</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","excerpt":"🚤 성장일지 7.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! ⚛ (7.0)<완전 개편> 을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다. Toast 컴포넌트 구현하기 살짝 애매한 감이 있지만, tailwindcss를 사용해서 Toast 컴포넌트를 구현해보았다. 우선 브라우저 하단에서 위로 튀어나오는 토스트와 그 반대로 이동하는 토스트를 구현하고 싶었기 때문에 아래와 같이 tailwindcss config를 설정하였다. 이렇게만 하면 사실 거의 끝이 났다. 이제는 토스트 컴포넌트를 구현하면 된다. 토스트 컴포넌트는 아래와 같이 구현하였다. props로 children과 direction을 받아서 토스트의 내용은 children으로 전달하고 위에서 구현했던 애니메이션 중 하나를 direction에 따라서 적용하도록 하였다. 이제 토스트…","frontmatter":{"date":"October 24, 2023","title":"231024(화) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/24/"}},"next":{"id":"d50d4889-1f56-5bed-9b1b-f6897b2adb48","html":"<h1 id=\"-성장일지-70\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-70\" aria-label=\" 성장일지 70 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 7.0</h1>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>⚛ (7.0)&#x3C;완전 개편> <code class=\"language-text\">파인만 학습법</code>을 알게 된만큼, 성장일지는 정말 그 날의 키워드 중심으로 간단하게 정리하도록 한다.</p>\n</blockquote>\n<h2 id=\"nextjs의-parallel-routes\" style=\"position:relative;\"><a href=\"#nextjs%EC%9D%98-parallel-routes\" aria-label=\"nextjs의 parallel routes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js의 Parallel Routes</h2>\n<p>Next.js의 Route 관련 공식문서를 보다가 재미있는 기능을 발견했다. 바로 Parallel Routes이다. 말 그대로 평행으로(병렬로) 라우팅을 할 수 있는 기능이다. layout.tsx 컴포넌트를 기준으로 해당 파일이 위치한 곳에서 폴더명 앞에 <code class=\"language-text\">@</code>를 붙이면 해당 폴더의 이름에 해당하는 컴포넌트는 layout.tsx 컴포넌트의 props로 가져올 수 있다. 말로 하면 되게 복잡해보이는데 아래 예시를 보면 이해가 쉽다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> aa<span class=\"token punctuation\">,</span> bb <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Layout</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> // 기본적으로 layout.tsx가 위치한 계층의 page.tsx 컴포넌트가 렌더링된다.\n      </span><span class=\"token punctuation\">{</span>aa<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> // @aa 폴더의 page.tsx 컴포넌트가 렌더링된다.\n      </span><span class=\"token punctuation\">{</span>bb<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> // 마찬가지\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  );\n}</span></code></pre></div>\n<p>이 때 또 중요한 게 있다. 바로 <code class=\"language-text\">default.tsx</code>인데, 이 파일의 역할은 위와 같이 동일한 위치에서 다른 컴포넌트는 그 내부에 경로가 있는데 다른 컴포넌트는 없는 경우에 기본적으로 렌더링할 컴포넌트를 정의하는 것이다. 예를 들어, <code class=\"language-text\">@aa</code> 폴더에 <code class=\"language-text\">page.tsx</code>가 있고 <code class=\"language-text\">@bb</code> 폴더에는 <code class=\"language-text\">page.tsx</code>가 없는 경우에 <code class=\"language-text\">@bb</code> 폴더의 <code class=\"language-text\">page.tsx</code>가 없는 경우에 <code class=\"language-text\">@bb</code> 폴더의 <code class=\"language-text\">default.tsx</code>가 렌더링된다.</p>\n<blockquote>\n<p>사실 이 부분은 말로 설명이 어려워서 아래 참고에 공식문서를 읽어보는 걸 추천한다!</p>\n</blockquote>\n<p>그리고 이제 정말 재미있었던 부분..!(사실 처음에 이해하는데 머리가 아팠음…)</p>\n<p>공식문서에서는 위의 기능을 통해서 <code class=\"language-text\">Modal(모달)</code>을 구현할 수 있다고 한다!!!(<a href=\"https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#modals\">참고</a>)</p>\n<p>안그래도 Next.js에서도 React와 비슷하게 Portal을 써야하나 했는데, 이렇게 쉽게 구현이 가능하다니! 라는 마음으로 구현해보았다.(구현하면서 이해하느라 머리가 아팠따…) 결론부터 내가 구현한 방법의 구조 예시를 보면 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">└─ src\n   └─ app\n      ├─ example\n      │  ├─ @exampleModal\n      │  │  └─ filter\n      │  │     └─ page.tsx\n      │  └─ default.tsx, layout.tsx, page.tsx\n      ├─ @homeModal\n      │  ├─ filter\n      │  │  └─ page.tsx\n      │  └─ default.tsx\n      └─ default.tsx, layout.tsx, page.tsx</code></pre></div>\n<p>위와 같은 구조가 된다. 이렇게 되면 home에서는 ’/‘로 접근 시에 home 컴포넌트가 렌더링 되면서 @homeModal에 해당하는 default가 렌더링된다.(modal이 보이면 안되니까 null을 반환하게 처리한다.) 그리고 반대로 ‘/filter’로 접근할 때는 @homeModal에 있는 filter에 있는 page.tsx가 렌더링된다. 이 때, 모달의 기능을 해야하므로(즉, 기존 home 컴포넌트는 렌더링 되어야하기 때문에) home의 default.tsx에는 home의 page.tsx를 반환하게 하면 된다. 그러면 home 컴포넌트는 렌더링되고, @homeModal의 filter에 있는 page.tsx가 렌더링되면서 모달이 렌더링된다. 처음엔 이 부분 자체가 이해가 잘 안돼서 많이 헤맸는데 한 번 이해하면 나름..? 직관적이고 좋은 방법이라고 생각한다. 그리고 또 이렇게 구현해보고 싶었던 이유 중 하나는 모달임에도 불구하고 뒤로가기가 적용되었으면 했기 때문이다! 위와 같이 모달 자체가 라우팅으로 구현된 것이기 때문에, 모달창이 떴을 때 뒤로가기를 하면 모달이 사라진 화면이 렌더링되게 할 수 있다.</p>\n<p>좀더 자세한 내용은 꼭 공식문서를 보는 걸 추천한다!</p>\n<h1 id=\"-회고\" style=\"position:relative;\"><a href=\"#-%ED%9A%8C%EA%B3%A0\" aria-label=\" 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 회고</h1>\n<p>이해하는데 시간이 좀 걸렸지만 새로운 재미를 발견한 하루였다. 나중에 시간이 될 때, Next의 내부 구현 코드도 한번 봐야지!!!</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://nextjs.org/docs/app/building-your-application/routing/parallel-routes\">Next.js 공식문서: Parallel</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#nextjs%EC%9D%98-parallel-routes\">Next.js의 Parallel Routes</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 20, 2023","title":"231020(금) 성장","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/10/20/"}},"prev":{"id":"3a1bc8f6-55b3-5885-a672-4a7f47ee5b49","html":"<h2 id=\"-기분전환\" style=\"position:relative;\"><a href=\"#-%EA%B8%B0%EB%B6%84%EC%A0%84%ED%99%98\" aria-label=\" 기분전환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💠 기분전환</h2>\n<p>아무리 몰입하고 즐겁더라도 매일 공부하고 개발만 하다보면 삶이 다소 피폐(?)해지는 느낌이 들 때가 있다. 어딘가 몸도 뻐근한 것 같고 머리도 무거운 것 같고…! 요즘엔 이런 상태가 오면 빠르게 벗어나기 위한 여러가지 취미 혹은 습관을 만들어보고 있다. 대체로 이런 행동들은 순간적인 기분을 전환시키기 위함인데, 최근에 배드민턴 치기와 무작정 한강으로 드라이브해서 차 안에서 개발하는 게 가장 효과적인 것 같다. 배드민턴은 치다보면 꽤나 몸을 쓰게 돼서 개운하다. 한편 한강 드라이브, 차 안에서 공부는 탁트인 한강을 보면 스트레스도 풀리고 차 안에서 개발까지 할 수 있으니 일석이조다.</p>\n<p>예전에 나는 이런 상태가 오더라도 그 자리에 앉아서 무작정 더 머리에 우겨넣으려고 애쓰는 타입이었다.(사실 지금도 완전히 자유롭진 못한 것 같지만) 지금 내가 하는 개발, 공부를 함에 있어서 어떤 게 더 효율적이라고는 말할 수 없다. 다만, 지금 내가 하는 경험들과 시간들이 단순히 개발자가 되기 위함이 아니라 더 나은 사람이 되고 조금더 내 삶의 기반을 행복에 두는 것이기에 최근의 기분전환을 위한 행동들이 꽤나 만족스럽다.</p>\n<h2 id=\"️-개발-공부-방법\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EA%B0%9C%EB%B0%9C-%EA%B3%B5%EB%B6%80-%EB%B0%A9%EB%B2%95\" aria-label=\"️ 개발 공부 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌨️ 개발 공부 방법</h2>\n<p>개발 공부 초창기에는 아무래도 공부라는 걸 책으로만 해봐서 그런지 심화 학습서부터 공식문서를 하나한 읽는 게 재미있었다. 아마 익숙하지 않은 코드를 치는 행위보다 오랫동안 해왔고 나름 잘했던 지식 때려박기가 더 쉬웠기 때문이지 않을까 싶다. 헌데 요즘엔 조금 반대로 흘러가는 느낌이다. 물론 깊은 내용을 학습하고 공식문서를 읽는 것도 좋지만, 마냥 텍스트만 보는 행위보단 일단 내가 만들어보고 싶은 걸 우영부영 만드는 게 더 재미있고 마음이 간다. 더 개발자스러워진(?) 태도인 것 같긴한데, 정말 모든 게 트레이드 오프인지 한편으론 또 더 깊게 학습해야하는 게 아닌가 하는 생각이 든다. 이 2가지의 밸런스를 본인에게 맞게 맞춰가는 과정이라고 생각해서 크게 스트레스는 아니지만, 확실한 건 이 비율을 토대로 본인에게 맞는 학습법을 체계화해두는 게 좋을 것 같다.</p>\n<h2 id=\"-길게-생각하기\" style=\"position:relative;\"><a href=\"#-%EA%B8%B8%EA%B2%8C-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0\" aria-label=\" 길게 생각하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐾 길게 생각하기</h2>\n<p>인생은 길다. 작은 일에 연연하지 말자. 실패를 하자. 실패를 했다는 것은 도전했다는 의미이고 도전했다는 것은 성장했다는 것이다. 성공과 실패를 이분법적으로 생각하지 말고 실패 또한 성공임을 늘 새기고 기억하자. 계속 노력하자. 때로는 운을 통해 앞으로 나아가는 이를 보면, 노력에 대한 의구심이 들기도 할 것이다. 세상은 원래 그렇다는 것을 인지하자. 그리고 앞서 말한 인생을 길게 생각하는 것과 노력은 절대 배신하지 않는다는 확고한 믿음이 있다면 노력에 대한 의구심이 얼마나 쓸데없는 생각인지 알 수 있다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EA%B8%B0%EB%B6%84%EC%A0%84%ED%99%98\">💠 기분전환</a></li>\n<li><a href=\"#%EF%B8%8F-%EA%B0%9C%EB%B0%9C-%EA%B3%B5%EB%B6%80-%EB%B0%A9%EB%B2%95\">⌨️ 개발 공부 방법</a></li>\n<li><a href=\"#-%EA%B8%B8%EA%B2%8C-%EC%83%9D%EA%B0%81%ED%95%98%EA%B8%B0\">🐾 길게 생각하기</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 26, 2023","title":"기분전환","categories":"생각","author":"제이든","emoji":"💠"},"fields":{"slug":"/from-time-to-time/think/18/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/10/24/","nextSlug":"/steadily/growth-diary/2023/10/20/","prevSlug":"/from-time-to-time/think/18/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}