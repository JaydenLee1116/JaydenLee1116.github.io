{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/1/4-gl/","result":{"data":{"cur":{"id":"e3287c39-563c-5283-a9b0-434c73c74c00","html":"<h2 id=\"-성장일지-31\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\" aria-label=\" 성장일지 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 3.1</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드 (1.0)<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 경험 위주로 (2.0)<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ 정해진 템플릿에 맞춰서 (3.0)<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1) 230102부터 시작되는 학습에 관한 내용 추가</p>\n</blockquote>\n<h3 id=\"-오늘의-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 키워드</h3>\n<ol>\n<li>백준 입력 받기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">'linux'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'/dev/stdin'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'../input.txt'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 입력값마다 그 때 그 때 처리</span></code></pre></div>\n<ol start=\"2\">\n<li>Vscode에서 <code class=\"language-text\">\\n</code>과 <code class=\"language-text\">\\r\\n</code> 설정</li>\n</ol>\n<ul>\n<li>vscode 맨 아래 보통은 <code class=\"language-text\">LF</code>라고 되어있는 부분을 <code class=\"language-text\">CRLF</code>로 변경하면 줄 변경 방식이 바뀐다.\n<ul>\n<li>LF(Line Feed): <code class=\"language-text\">\\n</code>로 줄 변경</li>\n<li>CR(Carriage Return): <code class=\"language-text\">\\r</code>로 줄 변경</li>\n<li>CRLF(Carriage Return Line Feed): <code class=\"language-text\">\\r\\n</code>로 줄 변경\n<blockquote>\n<p>윈도우는 CRLF 방식, 맥은 초기에는 CR 방식이나 현재는 LF 방식, 유닉스와 리눅스는 LF 방식</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><code class=\"language-text\">.gitignore</code>을 하기 전에 이미 <code class=\"language-text\">node_modules</code>를 커밋하여 푸시한 경우</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 원격, 로컬 저장소 모두 삭제</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span>\n<span class=\"token comment\"># 원격 저장소에서만 삭제</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> --cached\n<span class=\"token comment\"># 예시) node_modules</span>\n<span class=\"token function\">git</span> <span class=\"token function\">rm</span> --cached -r node_modules\n<span class=\"token comment\"># 이후에 커밋과 푸시해주면 된다.</span></code></pre></div>\n<h3 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h3>\n<p>오늘은 오랜만에 백준 문제를 풀었다. 사실 그 동안 입력받는 게 불편해서(+ 프로그래머스 플랫폼이 깔끔해서) 프로그래머스만 사용했다. 그러다보니 입력받는 것조차 다소 낯설었다.(물론 금방 생각났지만!ㅋㅋㅋ)\n그러던 중 예전에 풀었던 백준 알고리즘 코드들을 보게 되었다. 확실히 지금 내가 예전에 비해 많이 성장했다는 걸 느낄 수 있어서 내심 뿌듯했다. 지금은 알아서 lint, prettier도 적용하고 가능하면 함수를 분리해보려 하고\nconst와 let도 최대한 구분해서 사용하려 하며 변수명 짓는 것 또한 아주 조금은 능숙해진 거 같다. 자신감이 떨어질 때, 과거 기록을 보며 현재의 나를 돌아볼 수 있는 시간을 갖는 것도 좋을 거 같다. 그러기 위해서는\n과거의 나보다 발전해있는 현재를 계속 만들어 나가야 한다. 너무 이것저것 신경쓰지말고 꾸준히 나아갈 수 있는 개발자가 되자.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\">🎄 성장일지 3.1</a></p>\n<ul>\n<li><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 키워드</a></li>\n<li><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🎄 성장일지 3.1 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 키워드 (1.0)\n최대한 간단하게 정리, 추후에 보면서 스스로 설명\n🍉 경험 위주로 (2.0)\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성\n❄️ 정해진 템플릿에 맞춰서 (3.0)\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1) 230102부터 시작되는 학습에 관한 내용 추가 🔑 오늘의 키워드 백준 입력 받기 Vscode에서 과  설정 vscode 맨 아래 보통은 라고 되어있는 부분을 로 변경하면 줄 변경 방식이 바뀐다. LF(Line Feed): 로 줄 변경 CR(Carriage Return): 로 줄 변경 CRLF(Carriage Return Line Feed): 로 줄 변경 윈도우는 CRLF 방식, …","frontmatter":{"date":"January 04, 2023","title":"230104(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/1/4-gl/"}},"next":{"id":"8ef56f33-9d8f-51c6-895b-1c1091d9afa3","html":"<h2 id=\"-성장일지-31\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\" aria-label=\" 성장일지 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 3.1</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드 (1.0)<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 경험 위주로 (2.0)<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ 정해진 템플릿에 맞춰서 (3.0)<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1) 230102부터 시작되는 학습에 관한 내용 추가</p>\n</blockquote>\n<h3 id=\"-오늘의-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 키워드</h3>\n<p>가상 머신(Virtual Machine)과 우분투 리눅스(Ubuntu Linux)</p>\n<ul>\n<li>가상 머신: 물리적 컴퓨터의 디지털 버전. 우리가 사용하는 현실의 컴퓨터가 있고 가상으로 그 컴퓨터를 구현한 것이 가상 머신이다. 가상 머신에서 가상 머신을 돌리는 것도 가능하다.(비효율적이지만)\n<ul>\n<li>한편, JVM(JAVA Virtual Machine)처럼 특정 언어로 쓰여진 프로그램을 돌리기 위한 인터프리터를 가리키기도 한다.</li>\n</ul>\n</li>\n<li>우분투 리눅스\n<ul>\n<li>리눅스: 윈도우, 맥 다음으로 가장 많이 사용되는 운영체제(OS). 사실상 무료이다.(자유롭게 공유하고 개발이 가능하다. 굉장한 장점.) 유닉스를 기반으로 한다.</li>\n<li>우분투: 리눅스의 여러 배포판 중 하나. 개인용, 데스크탑 환경에 최적화되어있으며 마찬가지로 자유 소프트웨어에 기반한다.(무료라는 얘기)</li>\n</ul>\n</li>\n</ul>\n<p>SSH(Secure SHell)</p>\n<ul>\n<li>\n<p>ssh: 네트워크 상의 다른 컴퓨터에 로그인하거나 원격 시스템에서 명령을 실행하고 다른 시스템으로 파일을 복사할 수 있도록 해주는 응용 프로그램 또는 그 프로토콜을 의미한다. 즉, 네트워크 프로토콜 중 하나로 컴퓨터와 컴퓨터가 인터넷과 같은 Public Network를 통해서 서로 통신할 때 보안 상 안전하게 통신하기 위해 사용하는 프로토콜이다.</p>\n<ul>\n<li>참고) 기존 원격 접속은 텔넷(Telnet)이라는 방식을 사용했다. 그러나 암호화를 제공하지 않아 보안상 취약하다는 단점이 존재하여 SSH를 사용한다.</li>\n<li>ssh의 작동원리\n<ul>\n<li>사용자(클라이언트)와 서버(호스트)는 각각의 키(KEY)를 보유하고 있다. 이 키를 이용해 연결 상대를 인증하고 안전하게 데이터를 주고 받을 수 있다. 키를 생성하는 방식은 대표적으로 <code class=\"language-text\">대칭키</code>와 <code class=\"language-text\">비대칭키</code>가 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>비대칭키 방식</p>\n<ul>\n<li>가장 먼저 사용자와 서버가 서로의 정체를 증명해야 한다. 이 때 사용되는 것이 비대칭키 방식이다. 서버 또는 사용자가 키 페어(키 쌍)을 생성한다. 이 때, 키 페어는 공개키와 개인키로 이루어진 한 쌍을 의미한다. 보통 공개키는 <code class=\"language-text\">.pub</code>, 개인키는 <code class=\"language-text\">.pem</code>의 파일 형식을 갖는다.</li>\n<li>예시) 사용자가 키 페어를 생성하여 공개키를 서버에 전송한다. 서버는 공개키를 통해 어떠한 값을 생성하고 사용자에게 보낸다. 이 값은 공개키와 태생이 같은(키 페어인) 개인키를 통해서만 알 수 있다. 사용자는 개인키를 통해 이 값을 알아내고 값을 서버에 보낸다. 서버는 본인이 생성했던 값과 사용자가 보낸 값을 비교한다. 이 둘이 같다면 서로 간의 인증이 완료된다.</li>\n</ul>\n</li>\n<li>\n<p>대칭키 방식</p>\n<ul>\n<li>비대칭키 방식을 통해 서로 인증이 완료된(서로가 안전한 상대라는 걸 확인한) 후 정보를 주고 받을 때 사용되는 방식이다. 사용자와 서버는 하나의 대칭키를 만들어서 서로 공유한다.(서로 인증이 되었기 때문에 키 페어를 둘 필요가 없다.)</li>\n<li>예시) 사용자가 대칭키를 생성하여 그 키를 통해 어떤 정보(값)을 서버에게 전달한다. 서버도 이 대칭키를 사용하여 그 정보(값)을 얻어낸다. 이렇게 정보를 서로 교환하고 나면 대칭키는 폐기된다. (접속 혹은 정보 교환 때마다 새로운 대칭키를 생성하여 사용한다.)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h3>\n<p>오늘은 드디어 우분투 리눅스를 설치한 VM에 ssh로 접근하여 직접 git, node, npm 등의 패키지를 설치해서 개발환경을 구성했다. 또, root권한을 내 개인 계정에도\n허락함으로써 접근권한을 얻었다. 사실 앞의 내용들은 구글링하면서 어떻게 어떻게 해결했는데, 제일 성취감 있던 건 로컬에서 원격으로 VM에 접속하고 그 로컬 터미널에서 바로\n자바스크립트 작업을 한 것이었다. 이게 왜 기분이 좋냐면, 다른 에디터나 IDE 없이 터미널에서만 (물론 엄밀히는 터미널에서 사용하는 nano 에디터(?)를 사용했지만) 코드를 작성한 게 너무 재미있었다.\n메모장도 없었을 시기의 개발자들이 이런 기분이었을까? 분명 CLI로만 작업하는 게 불편한데, 재미있다.ㅋㅋㅋ 그리고 더 웃긴건 이렇게 작업하다가 다시 로컬 IDE를 보면\n얼마나 감사한지… 특히나 eslint, prettier 정말 최고다ㅋㅋㅋㅋㅋ</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\">🎄 성장일지 3.1</a></p>\n<ul>\n<li><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 키워드</a></li>\n<li><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 03, 2023","title":"230103(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/1/3-gl/"}},"prev":{"id":"99dd1333-333d-59bd-be31-a55b23c25944","html":"<h2 id=\"-성장일지-31\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\" aria-label=\" 성장일지 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 3.1</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드 (1.0)<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 경험 위주로 (2.0)<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ 정해진 템플릿에 맞춰서 (3.0)<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1) 230102부터 시작되는 학습에 관한 내용 추가</p>\n</blockquote>\n<h3 id=\"-오늘의-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 키워드</h3>\n<h4 id=\"storage-memory-cpu\" style=\"position:relative;\"><a href=\"#storage-memory-cpu\" aria-label=\"storage memory cpu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storage, Memory, CPU</h4>\n<ul>\n<li>Storage: 디스켓, CD, HDD, SDD와 같은 저장소. 용량이 크고 비교적 가격이 싸다. 자료를 <code class=\"language-text\">저장</code>하는 용도. 컴퓨터를 꺼도 남아있다.</li>\n<li>Memory: 흔히 RAM이라고 부르는 메모리. 용량이 작고 컴퓨터를 종료하면 데이터가 사라진다. 데이터를 빠르게 <code class=\"language-text\">운반</code>할 수 있다.(가져올 수 있다.)</li>\n<li>CPU: 중앙처리장치. 데이터를 처리하는 속도가 가장 빠르다.</li>\n</ul>\n<blockquote>\n<p>그렇기 때문에 Storage -> Memory -> CPU 순서로 데이터를 운반하게 된다.(저장소 -> 빠른 운반책 -> 빠른 처리소)\n자료 구조의 가장 중요한 미션은 Memory 사용을 줄이는 것이다.</p>\n</blockquote>\n<ul>\n<li>각각의 주소(데이터가 저장되어있는)에 접근하는 걸리는 시간이 동일한 메모리를 <code class=\"language-text\">RAM(Random Access Memory)</code>라고 한다.\n<ul>\n<li>즉, 주소만 안다면 원하는 데이터를 빠르게 가져올 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"array-array-list-linked-list\" style=\"position:relative;\"><a href=\"#array-array-list-linked-list\" aria-label=\"array array list linked list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array, Array List, Linked List</h4>\n<ul>\n<li>Array(배열)\n<ul>\n<li>index를 통해 value에 접근한다.</li>\n<li>배열 가운데의 원소가 삭제되면 null값이 된다.</li>\n<li>index를 통한 탐색 시, O(1)</li>\n</ul>\n</li>\n<li>Array List(연속 배열, 연속 리스트)\n<ul>\n<li>각각의 데이터가 연속된 메모리 주소에 나열되어 저장된다.</li>\n<li>index를 통해 value에 접근한다.</li>\n<li>배열 가운데의 원소가 삭제되면 뒤의 원소가 한 칸 당겨진다. -> 삽입/삭제 시 각 원소가 이동하므로 효율적이지 못하다.</li>\n<li>탐색은 용이하지만, 삽입/삭제의 효율은 떨어진다.(탐색: O(1), 삽입/삭제: O(n))</li>\n</ul>\n</li>\n<li>Linked List(연결 리스트)\n<ul>\n<li>각각의 데이터가 메모리 곳곳에 흩어져 있되, 각 데이터가 다음 데이터에 대한 정보를 담고 있어 연결되어있다.</li>\n<li>포인터 부분(다음 데이터를 가리키는, 참조하는 부분)이 필요하기 때문에 공간 효율은 좋지 못하다.</li>\n<li>탐색은 처음부터 하나하나 포인터를 통해 가기 때문에 효율적이지 못하지만, 삽입/삭제 시 포인터만 연결 혹은 제거하면 되기 때문에 효율적이다.(탐색: O(n), 삽입/삭제: O(1))</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"자바스크립트에서-변수의-메모리-주소를-확인할-수-있는가\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A3%BC%EC%86%8C%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80\" aria-label=\"자바스크립트에서 변수의 메모리 주소를 확인할 수 있는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트에서 변수의 메모리 주소를 확인할 수 있는가?</h4>\n<ul>\n<li>결론: <code class=\"language-text\">알 수 없다.</code></li>\n</ul>\n<p>자바스크립트 언어는 C++로 만들어진 V8엔진을 통해 파싱되어 코드가 해석된다.(chrome, nodejs 모두) 이 때, 중간에 V8엔진이 개입하기 때문에 C++처럼 메모리 주소를 얻을 수 없다.</p>\n<blockquote>\n<p>참고로 C++에서 보여지는 메모리 주소도 실제 물리적인 메모리 주소가 아니다. 각 운영체제에서 할당한 가상 메모리 주소이다.\n추가: 크롬 개발자 도구에서 Memory를 통해 확인 가능한 주소가 있기는 한데, 이게 실제 물리적인 메모리인지는 확실치 않다.(아마도 아닌 것 같다.)</p>\n</blockquote>\n<h4 id=\"uuiduniversal-unique-identifier-범용-고유-식별자\" style=\"position:relative;\"><a href=\"#uuiduniversal-unique-identifier-%EB%B2%94%EC%9A%A9-%EA%B3%A0%EC%9C%A0-%EC%8B%9D%EB%B3%84%EC%9E%90\" aria-label=\"uuiduniversal unique identifier 범용 고유 식별자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UUID(Universal Unique IDentifier, 범용 고유 식별자)</h4>\n<ul>\n<li>UUID: 어떤 개체(데이터)를 고유하게 식별하는 데 사용되는 표준</li>\n<li>주로 네트워크 상 서로 모르는 개체들을 식별하기 위해 사용된다.</li>\n<li>아주 엄밀히 따지면 완벽하게 고유성을 갖지는 않지만, 사실상 중복될 가능성이 거의 없다고 인정되기 때문에 많이 사용된다.</li>\n</ul>\n<blockquote>\n<p>자바스크립트의 Math.random()은 암호학적으로 안전한 난수를 생성하는 것이 아니다. 그러므로 보안이 중요한 로직에서는 사용하지 않는 게 좋다.</p>\n</blockquote>\n<p>Web Crypto API</p>\n<ul>\n<li>브라우저에서 사용방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span><span class=\"token function\">getRandomValues</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// arr가 어떻게 변했는지 확인해보자</span></code></pre></div>\n<ul>\n<li>Nodejs에서 사용방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUuid</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> randomBytes <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> randomNumber <span class=\"token operator\">=</span> randomBytes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> randomNumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5 id=\"참고-자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 자료</h5>\n<ul>\n<li><a href=\"https://poiemaweb.com/js-array-is-not-arrray\">자바스크립트 배열은 배열이 아니다.</a></li>\n<li><a href=\"https://yjh5369.tistory.com/entry/javascript-random-number-generation\">UUID와 자바스크립트 난수 생성기 feat. crypto API</a></li>\n</ul>\n<h3 id=\"-요약-및-하루-간단-회고\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\" aria-label=\" 요약 및 하루 간단 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 요약 및 하루 간단 회고</h3>\n<p>자바스크립트의 배열에 대해서 좀더 깊게 알 수 있는 하루였다. 또, 매번 Memory에 대한 개념을 막연하게만 기억하고 있었는데 오늘을 계기로 좀 확실히 알 것 같다. 공부할 때마다 느끼지만, 공부할수록 컴퓨터가\n어떻게 발전해왔는지 느껴지는 게 재미있다. 당시 사람들이 필요에 의해서 다양한 자료 구조들을 구현하고 알고리즘을 생각해내고 나아가 하드웨어 구성을 한 게 참 신기하다. 그 당시에 프로그래밍을 공부했다면, 정말\n<code class=\"language-text\">새로운 시도</code>가 될만한 것들이 많을 것 같다. 아마 미래에는 지금도 정말 정말 다양한 기술들이 없었던 시기로 느껴지지 않을까 싶다. 계속 더 공부하고 배움에 재미를 느끼는 개발자가 되자!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-31\">🎄 성장일지 3.1</a></p>\n<ul>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 키워드</a></p>\n<ul>\n<li>\n<p><a href=\"#storage-memory-cpu\">Storage, Memory, CPU</a></p>\n</li>\n<li>\n<p><a href=\"#array-array-list-linked-list\">Array, Array List, Linked List</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-%EB%B3%80%EC%88%98%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A3%BC%EC%86%8C%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80\">자바스크립트에서 변수의 메모리 주소를 확인할 수 있는가?</a></p>\n</li>\n<li>\n<p><a href=\"#uuiduniversal-unique-identifier-%EB%B2%94%EC%9A%A9-%EA%B3%A0%EC%9C%A0-%EC%8B%9D%EB%B3%84%EC%9E%90\">UUID(Universal Unique IDentifier, 범용 고유 식별자)</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\">참고 자료</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%9A%94%EC%95%BD-%EB%B0%8F-%ED%95%98%EB%A3%A8-%EA%B0%84%EB%8B%A8-%ED%9A%8C%EA%B3%A0\">📝 요약 및 하루 간단 회고</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 05, 2023","title":"230105(목)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/1/5-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/1/4-gl/","nextSlug":"/steadily/growth-diary/2023/1/3-gl/","prevSlug":"/steadily/growth-diary/2023/1/5-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}