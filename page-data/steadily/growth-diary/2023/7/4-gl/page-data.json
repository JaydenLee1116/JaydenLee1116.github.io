{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/7/4-gl/","result":{"data":{"cur":{"id":"5a6ca729-6675-54c0-ac2f-51f9927ad8e3","html":"<h2 id=\"-성장일지-60\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\" aria-label=\" 성장일지 60 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚤 성장일지 6.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/>\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!<br/>\n🍉 (6.0)&#x3C;완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기.<br/></p>\n<ul>\n<li>🍉 (6.1)&#x3C;수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자</li>\n</ul>\n</blockquote>\n<h2 id=\"-오늘의-감정\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\" aria-label=\" 오늘의 감정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈 오늘의 감정</h2>\n<ul>\n<li>조금 피곤하지만 매우 매우 좋음! 내가 원하던 회사에 다녀와볼 수 있어서!</li>\n</ul>\n<h2 id=\"-오늘의-고민\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\" aria-label=\" 오늘의 고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🫧 오늘의 고민</h2>\n<ul>\n<li>Array의 map 함수 구현 시, this에 대한 타입을 어떻게 지정할지?</li>\n</ul>\n<h2 id=\"️-오늘의-실패\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EC%8B%A4%ED%8C%A8\" aria-label=\"️ 오늘의 실패 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️ 오늘의 실패</h2>\n<ul>\n<li>Array의 map 함수로 구현하는 방법… this를 써서 하고 싶은데 타입 에러가 난다.</li>\n</ul>\n<h2 id=\"-오늘의-성공\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EC%84%B1%EA%B3%B5\" aria-label=\" 오늘의 성공 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨ 오늘의 성공</h2>\n<ul>\n<li>일반 함수로 map 함수 구현하기 => 제네릭을 배우는데 도움이 돼서 진짜 좋은듯!\n<ul>\n<li>테스트 코드부터 작성도 성공</li>\n<li>그리고 여차하면 <code class=\"language-text\">d.ts</code>에 있는 타입에서 힌트를 얻으면 되긴하니까!(봐도 잘 모르겠네… 이런ㅋㅋㅋㅋㅋㅋ)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'map 함수 숫자 배열'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'주어진 배열 [1, 2, 3]에 대해서 각 원소에 +1을 한 새로운 배열 [2, 3, 4] 객체를 반환한다.'</span> <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'map 함수 문자 배열'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"주어진 배열 ['jayden', 'sori', 'hodu']에 대해서 각 원소의 앞에 'hi, '를 더한 새로운 배열 ['hi, jayden', 'hi, sori', 'hi, hodu'] 객체를 반환한다.\"</span> <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'jayden'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hodu'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hi, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>v<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'hi, jayden'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi, sori'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi, hodu'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'map 함수 숫자에서 문자 배열'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"주어진 배열 [1, 2, 3]에 대해서 각 원소를 문자열로 바꾼 ['1', '2', '3'] 객체를 반환한다.\"</span> <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>v<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">CallbackFn<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> array<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">U</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">map</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>targetArray<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> callback<span class=\"token operator\">:</span> CallbackFn<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">U</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> returnArray<span class=\"token operator\">:</span> <span class=\"token constant\">U</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> targetArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    returnArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>targetArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> returnArray<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪵 참고</h2>\n<ul>\n<li>없음</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-60\">🚤 성장일지 6.0</a></li>\n<li><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B0%90%EC%A0%95\">🌈 오늘의 감정</a></li>\n<li><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EA%B3%A0%EB%AF%BC\">🫧 오늘의 고민</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%98%A4%EB%8A%98%EC%9D%98-%EC%8B%A4%ED%8C%A8\">☀️ 오늘의 실패</a></li>\n<li><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EC%84%B1%EA%B3%B5\">✨ 오늘의 성공</a></li>\n<li><a href=\"#-%EC%B0%B8%EA%B3%A0\">🪵 참고</a></li>\n</ul>\n</div>","excerpt":"🚤 성장일지 6.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!\n🥊 (5.0)학습 키워드는 한줄의 핵심으로만 정리, 성공/실패 일지 작성하기! 이 때, 실패의 경험은 자세히 적기!\n🍉 (6.0)<완전 개편!!!> 매일 습관적으로 핵심만 적을 수 있게 프레임 변경. 성공보단 실패에 초점을 맞추기. 🍉 (6.1)<수정> 매번 성공, 실패를 따로 적는 것보단 경험으로 표현하자 🌈 오늘의 감정 조금 피곤하지만 매우 매우 좋음! 내가 원하던 회사에 다녀와볼 수 있어서! 🫧 오늘의 고민 Array의 map 함수 구현 시, this에 대한 타입을 어떻게 지정할지? ☀️ 오늘의 실패 Array의 map 함수로 구현하는 방법… this를 써서 하고 싶은데 타입 에러가 난다. ✨ 오늘의 성공 일반 함수…","frontmatter":{"date":"July 04, 2023","title":"230704(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/7/4-gl/"}},"next":{"id":"380bae28-b5c0-54a1-9967-fc6620d8ff13","html":"<h2 id=\"-잡동사니\" style=\"position:relative;\"><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\" aria-label=\" 잡동사니 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📦 잡동사니</h2>\n<p>하나의 키워드를 잡고 좀 편하게 정리하고 싶어 만든 <code class=\"language-text\">잡동사니</code><br/></p>\n<blockquote>\n<p>잡동사니는 조선 후기 학자 <code class=\"language-text\">안정복</code>이 편찬한 <code class=\"language-text\">잡동산이(雜同散異)</code>에서 유래된 말이다.<br/>\n잡동산이는 <code class=\"language-text\">잡기(雜記)</code>의 형태를 빌려온 책으로 구체적인 체계가 잡혀있지 않은 형식이다.<br/>\n항목이 다소 난잡하고 내용의 구분이 혼동되어있다고 한다. 🤣</p>\n</blockquote>\n<h2 id=\"들어가기에-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기에 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기에 앞서</h2>\n<p>이 글은 <a href=\"https://www.wanted.co.kr/jobsfeed\">원티드</a>에서 주관하는\n<a href=\"https://www.wanted.co.kr/events/pre_challenge_fe_11\">프리온보딩 프론트엔드 챌린지 7월 직접 만져보는 Next.js 해부학 교실 - CSR / SSR with Next.js</a>\n에 제출할 사전과제를 기반으로 작성한 글입니다.</p>\n<h2 id=\"️-csrclient-side-rendering이란-그리고-장단점\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-csrclient-side-rendering%EC%9D%B4%EB%9E%80-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"️ csrclient side rendering이란 그리고 장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ CSR(Client-side Rendering)이란? 그리고 장단점</h2>\n<p>서버와의 최초 통신에서 HTML, CSS, JS를 응답받아온 후 JS의 코드에 따라 데이터만 요청하여 <code class=\"language-text\">클라이언트의 브라우저에서 화면을 렌더링하는 방식</code><br/>\n웹 페이지가 복잡해짐에 따라 매번 페이지마다 새로운 HTML을 받아오는 방식에서 벗어나 한번에 받아온 후 동작하는 CSR 방식이 많아졌다.</p>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ol>\n<li>유저와의 인터렉션에 따라 필요한 데이터만 요청하여 받아오기 때문에 부분적으로 빠르게 인터렉션할 수 있다.</li>\n</ol>\n<ul>\n<li>서버의 부하를 줄일 수 있다는 의미이기도 하다.</li>\n</ul>\n<ol start=\"2\">\n<li>페이지를 이동할 때마다 네트워크 통신으로 HTML을 받아오는 형태가 아니기 때문에 깜빡임없이 데이터 변경이 가능하고 모바일 환경에서도 빠른 속도를 자랑한다.</li>\n<li><code class=\"language-text\">Lazy loading</code>을 지원한다.</li>\n</ol>\n<ul>\n<li>Lazy loading: 페이지 로딩 시 중요하지 않은 리소스는 나중에 로딩하는 기술 ex) 스크롤을 내렸을 때, 새로운 데이터가 보이는 것</li>\n</ul>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ol>\n<li><code class=\"language-text\">root</code> 태그만 있는 비어있는 HTML을 가져와서 JS로 렌더링하기 때문에, 크롤링봇에게 해당 웹에 대한 정보를 줄 수가 없다. 즉, SEO에 대해 최적화 하기가 어렵다.</li>\n</ol>\n<ul>\n<li>다시 말해서, CSR로 구현된 웹의 경우 검색어 최상단에 노출되기가 어렵다는 의미이다.</li>\n<li>단, 구글의 검색엔진은 JS까지 실행시켜 판단하는 검색엔진이기 때문에 예외이다.</li>\n</ul>\n<ol start=\"2\">\n<li>초기에 HTML, CSS, JS 코드를 모두 받아오기 때문에 모든 컨텐츠가 유저에게 노출되는데 시간이 걸린다.</li>\n</ol>\n<h2 id=\"️-ssrserver-side-rendering이란-그리고-장단점\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-ssrserver-side-rendering%EC%9D%B4%EB%9E%80-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"️ ssrserver side rendering이란 그리고 장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ SSR(Server-side Rendering)이란? 그리고 장단점</h2>\n<p>CSR과 반대로 서버에서 렌더링을 진행한다. 클라이언트가 페이지를 요청하면 서버측에서 데이터를 가져와서(주로 DB) 페이지를 구성한 후 브라우저에게 전달한다.<br>\n유저가 페이지를 이동할 때마다 서버에게 다시 HTML, CSS, JS 등의 파일을 응답받아서 보여준다.</p>\n<h3 id=\"장점-1\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90-1\" aria-label=\"장점 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ol>\n<li>사용자가 느끼기에 CSR보다 빠르게 첫 페이지를 볼 수 있다.</li>\n<li>SEO(검색 엔진 최적화)가 좋다.</li>\n</ol>\n<h3 id=\"단점-1\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90-1\" aria-label=\"단점 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ol>\n<li>서버의 부하가 심한 편이다.</li>\n<li>개발자가 신경써야할 부분들이 CSR보다 다소 많다.</li>\n</ol>\n<h2 id=\"️-spasingle-page-application로-구성된-웹-앱에서-ssrserver-side-rendering이-필요한-이유\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-spasingle-page-application%EB%A1%9C-%EA%B5%AC%EC%84%B1%EB%90%9C-%EC%9B%B9-%EC%95%B1%EC%97%90%EC%84%9C-ssrserver-side-rendering%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"️ spasingle page application로 구성된 웹 앱에서 ssrserver side rendering이 필요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ SPA(Single Page Application)로 구성된 웹 앱에서 SSR(Server-side Rendering)이 필요한 이유?</h2>\n<p>CSR만을 이용하여 SPA를 구성하게 되면 첫 통신에서 번들된 HTML, CSS, JS를 받아와서 렌더링하기 때문에 모든 컨텐츠를 보여주는데 다소 시간이 오래 걸리게 되는 단점이 존재한다.<br/>\n또한 HTML 파일에는 JS 코드가 진입하게 될 entry root를 제외하곤 어떤 내용도 없기 때문에 검색 엔진 최적화가 좋지 않게 된다.<br/>\n이 때, 초기에 필요한 부분들만 SSR을 통해 유저에게 보여주고 그 뒤에는 CSR처럼 유저의 인터렉션에 따라 데이터를 가져오는 식으로 처리하게 되면 위의 단점들을 해결할 수 있게 된다.</p>\n<h2 id=\"️-nextjs-까보기\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-nextjs-%EA%B9%8C%EB%B3%B4%EA%B8%B0\" aria-label=\"️ nextjs 까보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗂️ Next.js 까보기</h2>\n<h3 id=\"nextjs-프로젝트에서-code-classlanguage-textnpm-run-startcode를-하게-되면-어떤-코드들이-실행될까\" style=\"position:relative;\"><a href=\"#nextjs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C-code-classlanguage-textnpm-run-startcode%EB%A5%BC-%ED%95%98%EA%B2%8C-%EB%90%98%EB%A9%B4-%EC%96%B4%EB%96%A4-%EC%BD%94%EB%93%9C%EB%93%A4%EC%9D%B4-%EC%8B%A4%ED%96%89%EB%90%A0%EA%B9%8C\" aria-label=\"nextjs 프로젝트에서 code classlanguage textnpm run startcode를 하게 되면 어떤 코드들이 실행될까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js 프로젝트에서 <code class=\"language-text\">npm run start</code>를 하게 되면 어떤 코드들이 실행될까?</h3>\n<p>먼저 Next.js의 repo를 가보자. 그곳에서 잘 찾아보면 <code class=\"language-text\">packages/next/src/cli/next-start.ts</code>가 있는 걸 확인할 수 있다. 즉, next로 작성된 프로젝트에서\n<code class=\"language-text\">npm run start</code>를 입력하게 되면 실행되는 코드가 이 파일에 작성되어있는 것이다.</p>\n<p>코드를 보기 전에, <code class=\"language-text\">npm run start</code>는 어떤 명력어를 실행하게 될까?</p>\n<p>이를 알아보기 위해 <code class=\"language-text\">npx create-next-app@latest</code>을 실행하여 최신 버전의 next 프로젝트를 생성해주었다. 그리고 <code class=\"language-text\">package.json</code>을 보면 아래와 같이 스크립트에 대해 정의하는 걸\n볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next dev\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next start\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next lint\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>즉, <code class=\"language-text\">npm run start</code>는 <code class=\"language-text\">next start</code>를 실행시켜주는 것이다. <code class=\"language-text\">next start</code>는 production 레벨에서 어플리케이션을 띄워준다. 우리가 리액트에서 <code class=\"language-text\">npm run start</code>하게 되면\n포트 3000번으로 우리의 앱이 띄워지게 되는 것처럼 말이다. 이 때, 주의할 점은 순수 react에서의 <code class=\"language-text\">npm run start</code>는 next에서의 <code class=\"language-text\">npm run dev</code>와 같다는 것이다.(이 둘 모두 development 레벨에서\n포트 3000번으로 앱을 띄운다.)</p>\n<p>자, 그럼 이제 한 번 코드를 봐보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token hashbang comment\">#!/usr/bin/env node</span>\n\n<span class=\"token comment\">// jayden: 뭔가 많은 것들을 import 중... 일단 무시하자</span>\n<span class=\"token keyword\">import</span> arg <span class=\"token keyword\">from</span> <span class=\"token string\">'next/dist/compiled/arg/index.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> startServer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../server/lib/start-server'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getPort<span class=\"token punctuation\">,</span> printAndExit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../server/lib/utils'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> isError <span class=\"token keyword\">from</span> <span class=\"token string\">'../lib/is-error'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getProjectDir <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../lib/get-project-dir'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CliCommand <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../lib/commands'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resolve <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">PHASE_PRODUCTION_SERVER</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../shared/lib/constants'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> loadConfig <span class=\"token keyword\">from</span> <span class=\"token string\">'../server/config'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> nextStart<span class=\"token operator\">:</span> <span class=\"token function-variable function\">CliCommand</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// jayden: next start 명령어 뒤에 붙일 수 있는 옵션에 대한 타입 지정같다.</span>\n  <span class=\"token keyword\">const</span> validArgs<span class=\"token operator\">:</span> arg<span class=\"token punctuation\">.</span>Spec <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Types</span>\n    <span class=\"token string-property property\">'--help'</span><span class=\"token operator\">:</span> Boolean<span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'--port'</span><span class=\"token operator\">:</span> Number<span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'--hostname'</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'--keepAliveTimeout'</span><span class=\"token operator\">:</span> Number<span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Aliases</span>\n    <span class=\"token string-property property\">'-h'</span><span class=\"token operator\">:</span> <span class=\"token string\">'--help'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'-p'</span><span class=\"token operator\">:</span> <span class=\"token string\">'--port'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'-H'</span><span class=\"token operator\">:</span> <span class=\"token string\">'--hostname'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// jayden: 명령어 뒤의 옵션을 argv로 받고 그에 대한 어떤 객체를 만들어서 args로 초기화하는 것 같다.</span>\n  <span class=\"token keyword\">let</span> args<span class=\"token operator\">:</span> arg<span class=\"token punctuation\">.</span>Result<span class=\"token operator\">&lt;</span>arg<span class=\"token punctuation\">.</span>Spec<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    args <span class=\"token operator\">=</span> <span class=\"token function\">arg</span><span class=\"token punctuation\">(</span>validArgs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> argv <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">.</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'ARG_UNKNOWN_OPTION'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">printAndExit</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// jayden: args 객체에서 key가 `--help`인 value가 있다면 아래의 코드를 실행한다.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">'--help'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      Description\n        Starts the application in production mode.\n        The application should be compiled with \\`next build\\` first.\n\n      Usage\n        $ next start &lt;dir> -p &lt;port>\n\n      &lt;dir> represents the directory of the Next.js application.\n      If no directory is provided, the current directory will be used.\n\n      Options\n        --port, -p          A port number on which to start the application\n        --hostname, -H      Hostname on which to start the application (default: 0.0.0.0)\n        --keepAliveTimeout  Max milliseconds to wait before closing inactive connections\n        --help, -h          Displays this message\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> dir <span class=\"token operator\">=</span> <span class=\"token function\">getProjectDir</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'--hostname'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// jayden: keepAliveTimeout 값에 대해서 에러처리</span>\n  <span class=\"token keyword\">const</span> keepAliveTimeoutArg<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'--keepAliveTimeout'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">typeof</span> keepAliveTimeoutArg <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>keepAliveTimeoutArg<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n      <span class=\"token operator\">!</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isFinite</span><span class=\"token punctuation\">(</span>keepAliveTimeoutArg<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n      keepAliveTimeoutArg <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printAndExit</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Invalid --keepAliveTimeout, expected a non negative number but received \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>keepAliveTimeoutArg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> keepAliveTimeout <span class=\"token operator\">=</span> keepAliveTimeoutArg <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>keepAliveTimeoutArg<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">loadConfig</span><span class=\"token punctuation\">(</span>\n    <span class=\"token constant\">PHASE_PRODUCTION_SERVER</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>dir <span class=\"token operator\">||</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// jayden: 위의 조건들에 따라서 서버 시작</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">startServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    dir<span class=\"token punctuation\">,</span>\n    isDev<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    hostname<span class=\"token operator\">:</span> host<span class=\"token punctuation\">,</span>\n    port<span class=\"token punctuation\">,</span>\n    keepAliveTimeout<span class=\"token punctuation\">,</span>\n    useWorkers<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>config<span class=\"token punctuation\">.</span>experimental<span class=\"token punctuation\">.</span>appDir<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> nextStart <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://web.dev/rendering-on-the-web/?hl=ko\">Rendering on the web</a></li>\n<li><a href=\"https://velog.io/@kykim_dev/WEB-12-SPA-vs-MPA-CSR-vs-SSR\">SPA vs MPA 그리고 CSR vs SSR</a></li>\n<li><a href=\"https://80000coding.oopy.io/fde38c6f-e65d-4c1a-af45-176abee40389\">CSR과 SSR 톺아보기</a></li>\n<li><a href=\"https://github.com/vercel/next.js/\">Next.js repo</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%9E%A1%EB%8F%99%EC%82%AC%EB%8B%88\">📦 잡동사니</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C\">들어가기에 앞서</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-csrclient-side-rendering%EC%9D%B4%EB%9E%80-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9E%A5%EB%8B%A8%EC%A0%90\">🗂️ CSR(Client-side Rendering)이란? 그리고 장단점</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-ssrserver-side-rendering%EC%9D%B4%EB%9E%80-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9E%A5%EB%8B%A8%EC%A0%90\">🗂️ SSR(Server-side Rendering)이란? 그리고 장단점</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90-1\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90-1\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-spasingle-page-application%EB%A1%9C-%EA%B5%AC%EC%84%B1%EB%90%9C-%EC%9B%B9-%EC%95%B1%EC%97%90%EC%84%9C-ssrserver-side-rendering%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\">🗂️ SPA(Single Page Application)로 구성된 웹 앱에서 SSR(Server-side Rendering)이 필요한 이유?</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-nextjs-%EA%B9%8C%EB%B3%B4%EA%B8%B0\">🗂️ Next.js 까보기</a></p>\n<ul>\n<li><a href=\"#nextjs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C-npm-run-start%EB%A5%BC-%ED%95%98%EA%B2%8C-%EB%90%98%EB%A9%B4-%EC%96%B4%EB%96%A4-%EC%BD%94%EB%93%9C%EB%93%A4%EC%9D%B4-%EC%8B%A4%ED%96%89%EB%90%A0%EA%B9%8C\">Next.js 프로젝트에서 <code class=\"language-text\">npm run start</code>를 하게 되면 어떤 코드들이 실행될까?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 02, 2023","title":"CSR/SSR with Next.js","categories":"잡동사니","author":"제이든","emoji":"📦"},"fields":{"slug":"/from-time-to-time/oddments/csr-ssr-with-nextjs/"}},"prev":{"id":"cbeef6ee-fa80-5b07-b9ff-8e517026eb89","html":"<h2 id=\"️-신문스크랩-21\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\" aria-label=\"️ 신문스크랩 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞️ 신문스크랩 2.1</h2>\n<p>기존 티스토리 블로그에서 매일 작성하던 신문 스크랩을 다시 시작하기로 했다.<br/>\n개발자는 문제를 해결하는 사람이다. 그러니 항상 세상에서 일어나는 일(문제)에 관심을 가져야 한다.<br/>\n인상깊은 기사의 헤드라인을 적고 모르는 단어에 대한 정리, 그리고 내 생각을 간단하게 덧붙이는 것으로 가볍게 시작해보자.<br/>\n(v2.1 추가) 기사의 핵심 키워드를 추가해보자.</p>\n<h2 id=\"-주요-기사\" style=\"position:relative;\"><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\" aria-label=\" 주요 기사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌻 주요 기사</h2>\n<p><code class=\"language-text\">대화 테이블 앉기도 전에... 미중, 폭탄부터 던졌다.</code></p>\n<ul>\n<li>옐런 미국 재무장관, 7월 6일 방중 예정</li>\n<li>중국, 방중 하루 앞두고 반도체용 희귀금속 수출 통제 계획 발표</li>\n<li>미국, 중국의 반간첩법 강화에 따른 미국인의 중국 여행 주의 안내</li>\n</ul>\n<h3 id=\"-키워드\" style=\"position:relative;\"><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗞 키워드</h3>\n<ul>\n<li>국제정세, 경제, 미국, 중국</li>\n</ul>\n<h3 id=\"-단어-정리\" style=\"position:relative;\"><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\" 단어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔤 단어 정리</h3>\n<ul>\n<li>없음</li>\n</ul>\n<h3 id=\"-내-생각\" style=\"position:relative;\"><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\" aria-label=\" 내 생각 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 내 생각</h3>\n<p>요즘 바쁘게 개발 공부하느라 신문을 읽기만 하다가 오랜만에 스크랩을 한다.ㅎㅎㅎ 어제까지만 해도 그나마 미국과 중국이 협상을 통해 올바른 방향으로 나아가나 싶었는데,\n역시나… 미국 장관급의 방중 이전부터 이렇게 서로 으르렁 대다니… 물론 서로 우선순위를 선점하기 위한 카드를 만들어내려는 건 이해된다. 그리고 그 뒤에는 여러\n정치, 전략 등이 계산되고 있을 것이다. 참 웃긴건 이미 세상은 너무나 큰 네트워크로 엮여있기 때문에 상대만 손해보게 할 수는 없다는 것이다. 미국이 엔비디아의 AI\n반도체 수출을 금지하면 미국의 회사인 엔비디아도 타격이 간다. 또, 중국의 AI 학습이 불가능하게 하려고 클라우드 금지를 한다? 이것도 마찬가지로 클라우드 서비스를 제공하는\n미국 기업들에 타격이 간다. 결국 본인 몸에 상처 내면서 상대를 베는 꼴… 그래도 저 위치까지 간 사람들이니, 부디 현명하게 해결했으면 좋겠다. 과연 내일 방중의 결과는 어떻게\n될지가 너무 궁금해진다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EF%B8%8F-%EC%8B%A0%EB%AC%B8%EC%8A%A4%ED%81%AC%EB%9E%A9-21\">🗞️ 신문스크랩 2.1</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%82%AC\">🌻 주요 기사</a></p>\n<ul>\n<li><a href=\"#-%ED%82%A4%EC%9B%8C%EB%93%9C\">🗞 키워드</a></li>\n<li><a href=\"#-%EB%8B%A8%EC%96%B4-%EC%A0%95%EB%A6%AC\">🔤 단어 정리</a></li>\n<li><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81\">🤔 내 생각</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 05, 2023","title":"230705(수) 미중, 용호상박","categories":"신문스크랩","author":"제이든","emoji":"📰"},"fields":{"slug":"/from-time-to-time/newspaper/2023/7/5-np/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/7/4-gl/","nextSlug":"/from-time-to-time/oddments/csr-ssr-with-nextjs/","prevSlug":"/from-time-to-time/newspaper/2023/7/5-np/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}