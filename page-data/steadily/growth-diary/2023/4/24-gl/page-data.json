{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2023/4/24-gl/","result":{"data":{"cur":{"id":"d7a78b8b-1157-5da7-a733-80f8440a7070","html":"<h2 id=\"-성장일지-40\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\" aria-label=\" 성장일지 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 4.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 (1.0)키워드<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 (2.0)경험 위주로<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ (3.0)정해진 템플릿에 맞춰서<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성<br/>\n(3.1)230102부터 시작되는 학습에 관한 내용 추가<br/>\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!<br/>\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/></p>\n</blockquote>\n<h2 id=\"-고민-사항\" style=\"position:relative;\"><a href=\"#-%EA%B3%A0%EB%AF%BC-%EC%82%AC%ED%95%AD\" aria-label=\" 고민 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧐 고민 사항</h2>\n<h2 id=\"-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 학습 키워드</h2>\n<ul>\n<li>리팩토링</li>\n</ul>\n<h2 id=\"-학습-내용\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9\" aria-label=\" 학습 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥳 학습 내용</h2>\n<h3 id=\"리팩토링-성공\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%EC%84%B1%EA%B3%B5\" aria-label=\"리팩토링 성공 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리팩토링 성공?!</h3>\n<p>드디어… 몇일동안 혼자 끙끙거리던 리팩토링을 성공했다!!! 아주 간단한 Header만 기존과 비교해보자면 Header는 Model, Component, View 이 3가지로 구성되어있다.</p>\n<p>Model은 큰 변화가 없기에 View와 Component만 살펴보려 한다.</p>\n<h4 id=\"리팩토링-전-코드\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%EC%A0%84-%EC%BD%94%EB%93%9C\" aria-label=\"리팩토링 전 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리팩토링 전 코드</h4>\n<p>View</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> State <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AbstractView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/abstracts.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractView</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">protected</span> <span class=\"token function\">setWrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_wrapperElement<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;header class=\"h-1/6 bg-green-100 border border-green-500 text-3xl text-gray-500 grid place-content-center\">Header&lt;/header></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Component</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Props<span class=\"token punctuation\">,</span> State <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/interfaces'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HeaderModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@components/header/HeaderModel.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HeaderView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@components/header/HeaderView.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _model<span class=\"token operator\">:</span> HeaderModel<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _view<span class=\"token operator\">:</span> HeaderView<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HeaderModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HeaderView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">element</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_view<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">attachTo</span><span class=\"token punctuation\">(</span>component<span class=\"token operator\">:</span> Component<span class=\"token punctuation\">,</span> position<span class=\"token operator\">:</span> InsertPosition <span class=\"token operator\">=</span> <span class=\"token string\">'beforeend'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    component<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">insertAdjacentElement</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위에서 문제는 View의 render 메서드가 단순히 이미 만들어진 템플릿에 이벤트를 붙이거나 dom api를 통한 직접 접근으로 바뀐 state를 전달하고 ui의 모습이 변한다는 점이다.\n또, Component에서 구현된 attachTo라는 메서드는 가독성은 좋지만 부모에 한번 element 형태로 붙여버리면 이후에 이 element에 innerHTML 형태로 새로운 state를 넘긴\ntemplate literal을 전달할 수 없게 된다.(부모에 붙인 순간 이미 정적인 element가 붙어버리고 그 뒤에 값은 바꾼다고 부모에 붙은 element가 변하지 않기 때문이다.)\n그리고 가장 큰 문제는 처음 내가 설계했던 컴포넌트마다 Model, View를 갖고 있는 리액트스러운 느낌이 아니라는 것이다. setState가 일어날 때마다 render 메서드가 실행되면서\n새로운 state가 반영된 ui로 변경되어야 하는데 위 코드는 앞서 말한 문제들로 되지 않는다.</p>\n<p>그럼 이제 새로운 코드를 살펴보자..!</p>\n<h4 id=\"리팩토링-후-코드\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%ED%9B%84-%EC%BD%94%EB%93%9C\" aria-label=\"리팩토링 후 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리팩토링 후 코드</h4>\n<p>View</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> State <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TempAbstractView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/abstracts.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TempAbstractView</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>$target<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>$target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">template</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;header class=\"h-full bg-green-100 border border-green-500 text-3xl text-gray-500 grid place-content-center\">Header&lt;/header></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$target<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">template</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addChildren</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setEvents</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setEvents</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addChildren</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Component</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Props<span class=\"token punctuation\">,</span> State <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TempComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@custom-types/interfaces'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HeaderModel <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@components/header/HeaderModel.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HeaderView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@components/header/HeaderView.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderComponent</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TempComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _model<span class=\"token operator\">:</span> HeaderModel<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _view<span class=\"token operator\">:</span> HeaderView<span class=\"token punctuation\">;</span>\n  $target<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>targetElement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">,</span> props<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$target <span class=\"token operator\">=</span> targetElement <span class=\"token keyword\">as</span> HTMLElement<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HeaderModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HeaderView</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">:</span> State<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_view<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_model<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 Header 컴포넌트는 따로 자식 컴포넌트가 없어서 props를 전달하거나 자식을 붙일 일이 없다. 위에서 핵심은 부모(target)을 전달하여 자식에서 부모의 element에 접근이 가능하게 함으로써\ninnerHTML로 새로운 state에 따른 ui를 변경할 수 있게 한 점이다.</p>\n<p>위의 내용들은 추후에 더 자세히 길게 다뤄볼 예정이다.(리팩토링 정말 힘들었다…ㅠ 물론 이제서야 웃으면서 할 수 있게 되었지만..!)</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\">🎄 성장일지 4.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EA%B3%A0%EB%AF%BC-%EC%82%AC%ED%95%AD\">🧐 고민 사항</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 학습 키워드</a></p>\n</li>\n<li>\n<p><a href=\"#-%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9\">🥳 학습 내용</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%EC%84%B1%EA%B3%B5\">리팩토링 성공?!</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%EC%A0%84-%EC%BD%94%EB%93%9C\">리팩토링 전 코드</a></li>\n<li><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%ED%9B%84-%EC%BD%94%EB%93%9C\">리팩토링 후 코드</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🎄 성장일지 4.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 (1.0)키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명\n🍉 (2.0)경험 위주로\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성\n❄️ (3.0)정해진 템플릿에 맞춰서\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성\n(3.1)230102부터 시작되는 학습에 관한 내용 추가\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자! 🧐 고민 사항 🔑 오늘의 학습 키워드 리팩토링 🥳 학습 내용 리팩토링 성공?! 드디어… 몇일동안 혼자 끙끙거리던 리팩토링을 성공했다!!! 아주 간단한 Header만 기존과 비교해보자면 He…","frontmatter":{"date":"April 24, 2023","title":"230424(월)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/4/24-gl/"}},"next":{"id":"59f40624-0b70-5971-9576-2673d808eb5e","html":"<h2 id=\"-성장일지-40\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\" aria-label=\" 성장일지 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 4.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 (1.0)키워드<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 (2.0)경험 위주로<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ (3.0)정해진 템플릿에 맞춰서<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성<br/>\n(3.1)230102부터 시작되는 학습에 관한 내용 추가<br/>\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!<br/>\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/></p>\n</blockquote>\n<h2 id=\"-고민-사항\" style=\"position:relative;\"><a href=\"#-%EA%B3%A0%EB%AF%BC-%EC%82%AC%ED%95%AD\" aria-label=\" 고민 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧐 고민 사항</h2>\n<h3 id=\"1-컴포넌트-리팩토링-하위-컴포넌트들을-상위-컴포넌트에-element로-attach-후-setstate-했을-때-변경-사항이-반영되게-어떻게-하지\" style=\"position:relative;\"><a href=\"#1-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%ED%95%98%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%93%A4%EC%9D%84-%EC%83%81%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90-element%EB%A1%9C-attach-%ED%9B%84-setstate-%ED%96%88%EC%9D%84-%EB%95%8C-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD%EC%9D%B4-%EB%B0%98%EC%98%81%EB%90%98%EA%B2%8C-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%98%EC%A7%80\" aria-label=\"1 컴포넌트 리팩토링 하위 컴포넌트들을 상위 컴포넌트에 element로 attach 후 setstate 했을 때 변경 사항이 반영되게 어떻게 하지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. [컴포넌트 리팩토링] 하위 컴포넌트들을 상위 컴포넌트에 element로 attach 후 setState 했을 때, 변경 사항이 반영되게 어떻게 하지..?</h3>\n<p>일단 리팩토링을 통해서 하위 컴포넌트들의 constructor에서 setState를 통해 화면을 바꾸는 것까지는 성공했다. 그런데 문제는 부모컴포넌트에서 하위 컴포넌트를 붙이고 나서\n하위 컴포넌트의 element가 바뀌었을 때..! 이 때 변경사항이 반영이 되어야하는데… constructor에서 setState 되는 것외에 setTimeout이나 setInterval을 통해 나중에 변경되었을 때는\n당연히 변경 사항이 적용되지 않는다. 왜냐하면 이미 attachTo 했을 때 붙은 element와 나중에 비동기적으로 생성한 element가 다른 element이기 때문이다.\nattach 하는 부분을 innerHTML과 outerHTML을 이용해서 어떻게 하면 될 거 같은데… 흐어 진짜 이 부분때문에 너무 힘들다ㅠ 그래도 차근차근 리팩토링해보자!!!</p>\n<h3 id=\"2-테스트-코드-서버와-통신하는-로직에-대한-테스트-코드-작성-시-server에-대한-의존성을-없앨-수-있는-방법이-없을까\" style=\"position:relative;\"><a href=\"#2-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%84%9C%EB%B2%84%EC%99%80-%ED%86%B5%EC%8B%A0%ED%95%98%EB%8A%94-%EB%A1%9C%EC%A7%81%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EC%8B%9C-server%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%98%EC%A1%B4%EC%84%B1%EC%9D%84-%EC%97%86%EC%95%A8-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%B4-%EC%97%86%EC%9D%84%EA%B9%8C\" aria-label=\"2 테스트 코드 서버와 통신하는 로직에 대한 테스트 코드 작성 시 server에 대한 의존성을 없앨 수 있는 방법이 없을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. [테스트 코드] 서버와 통신하는 로직에 대한 테스트 코드 작성 시, server에 대한 의존성을 없앨 수 있는 방법이 없을까?</h3>\n<p>아래 코드를 보면 테스트 코드를 실행할 때도, fetch를 통해 서버에서 데이터를 가져온 후 그 값을 테스트하게 된다.\n헌데 만약에 서버가 꺼진다면..? 서버가 당장 없다면..? 이럴 때 테스트 코드를 어떻게 작성하고 실행해볼 수 있을까?\n일단 알아본 바로는 mock server라는 가짜 서버를 만들어서 테스트해보는 방법이 있는 것 같다. 이 부분에 대해서도 알아봐야겠다..!\n(예전에 써보려다가 번들러 없이는 안되었던 MSW와 깊은 연관이 있는듯!!)</p>\n<h2 id=\"-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 학습 키워드</h2>\n<ul>\n<li>리팩토링과 테스트 코드</li>\n</ul>\n<h2 id=\"-학습-내용\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9\" aria-label=\" 학습 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥳 학습 내용</h2>\n<h3 id=\"리팩토링을-위한-테스트-코드-작성feat-jest\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1feat-jest\" aria-label=\"리팩토링을 위한 테스트 코드 작성feat jest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리팩토링을 위한 테스트 코드 작성(feat. Jest)</h3>\n<p>기존의 MVC, Observer pattern에서 Flux pattern으로 리팩토링하기에 앞서 테스트 코드부터 작성하고 연습해보았다.(고난길 가기 전 그나마 심적 대비ㅠㅋㅋ)</p>\n<h4 id=\"예시3-fetch에-대한-테스트-그리고-error에-대한-테스트\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C3-fetch%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B7%B8%EB%A6%AC%EA%B3%A0-error%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"예시3 fetch에 대한 테스트 그리고 error에 대한 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시3) fetch에 대한 테스트 그리고 error에 대한 테스트</h4>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customGet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@utils/customFetch.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">BASIC_URL</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/constants/constants.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 서버가 켜져있어야지만 fetch가 되는데, 이 부분에 대한 의존성을 낮추는 방법은 없을까..?</span>\n<span class=\"token comment\">// 서버가 꺼지면 test도 실패가 되어버리니까!</span>\n<span class=\"token comment\">// 추후에 mock server 알아보기</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Custom GET'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'About Left Issue data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> issues <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">await</span> <span class=\"token function\">customGet</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">BASIC_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/issues</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> leftIssues <span class=\"token operator\">=</span> issues<span class=\"token punctuation\">.</span>leftRollingData<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> firstIssue <span class=\"token operator\">=</span> leftIssues<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>firstIssue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"납치·살인 3인조 영장심사…'왜 죽였나' 묻자 묵묵부답\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'About Error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mockPromise</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">await</span> <span class=\"token function\">customGet</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">BASIC_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/none</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>mockPromise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rejects<span class=\"token punctuation\">.</span><span class=\"token function\">toThrow</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error: 404 Not Found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>fetch에 관한 테스트는 비동기 처리해주는 것이라 크게 다를 게 없는데, error를 처리하는 부분이 재미있었다.\n일부러 에러를 내고 그에 대한 promise를 reject 처리하여 에러를 잡아내고 그 때의 값과 예상값을 비교한다.\n앞으로도 다양한 테스트 코드를 작성해봐야겠다!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\">🎄 성장일지 4.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EA%B3%A0%EB%AF%BC-%EC%82%AC%ED%95%AD\">🧐 고민 사항</a></p>\n<ul>\n<li><a href=\"#1-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%ED%95%98%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%93%A4%EC%9D%84-%EC%83%81%EC%9C%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90-element%EB%A1%9C-attach-%ED%9B%84-setstate-%ED%96%88%EC%9D%84-%EB%95%8C-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD%EC%9D%B4-%EB%B0%98%EC%98%81%EB%90%98%EA%B2%8C-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%98%EC%A7%80\">1. [컴포넌트 리팩토링] 하위 컴포넌트들을 상위 컴포넌트에 element로 attach 후 setState 했을 때, 변경 사항이 반영되게 어떻게 하지..?</a></li>\n<li><a href=\"#2-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%84%9C%EB%B2%84%EC%99%80-%ED%86%B5%EC%8B%A0%ED%95%98%EB%8A%94-%EB%A1%9C%EC%A7%81%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1-%EC%8B%9C-server%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%98%EC%A1%B4%EC%84%B1%EC%9D%84-%EC%97%86%EC%95%A8-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%B4-%EC%97%86%EC%9D%84%EA%B9%8C\">2. [테스트 코드] 서버와 통신하는 로직에 대한 테스트 코드 작성 시, server에 대한 의존성을 없앨 수 있는 방법이 없을까?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 학습 키워드</a></p>\n</li>\n<li>\n<p><a href=\"#-%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9\">🥳 학습 내용</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1feat-jest\">리팩토링을 위한 테스트 코드 작성(feat. Jest)</a></p>\n<ul>\n<li><a href=\"#%EC%98%88%EC%8B%9C3-fetch%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B7%B8%EB%A6%AC%EA%B3%A0-error%EC%97%90-%EB%8C%80%ED%95%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\">예시3) fetch에 대한 테스트 그리고 error에 대한 테스트</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 20, 2023","title":"230420(목)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/4/20-gl/"}},"prev":{"id":"01030cd6-59f8-5f20-b9e6-f767bd9388b6","html":"<h2 id=\"-성장일지-40\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\" aria-label=\" 성장일지 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎄 성장일지 4.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 (1.0)키워드<br/>\n최대한 간단하게 정리, 추후에 보면서 스스로 설명<br/>\n🍉 (2.0)경험 위주로<br/>\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성<br/>\n❄️ (3.0)정해진 템플릿에 맞춰서<br/>\n키워드, 경험 모두 좋다. 다만 매일 작성하기로 마음 먹은만큼 핵심만 간결하게 정리할 수 있게 템플릿을 작성<br/>\n(3.1)230102부터 시작되는 학습에 관한 내용 추가<br/>\n(3.2)230313부터 좀더 경험, 감정 위주의 내용도 담기!<br/>\n🌾 (4.0)학습 키워드에서 최대한 간단한 정보 제공, 고민에서 내 경험을 자세히 적자!<br/></p>\n</blockquote>\n<h2 id=\"-고민-사항\" style=\"position:relative;\"><a href=\"#-%EA%B3%A0%EB%AF%BC-%EC%82%AC%ED%95%AD\" aria-label=\" 고민 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧐 고민 사항</h2>\n<h2 id=\"-오늘의-학습-키워드\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" 오늘의 학습 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑 오늘의 학습 키워드</h2>\n<ul>\n<li>특별 강의, 리액트</li>\n</ul>\n<h2 id=\"-학습-내용\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9\" aria-label=\" 학습 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥳 학습 내용</h2>\n<h3 id=\"q-좋은-개발자란\" style=\"position:relative;\"><a href=\"#q-%EC%A2%8B%EC%9D%80-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9E%80\" aria-label=\"q 좋은 개발자란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 좋은 개발자란?</h3>\n<p>열린 마음을 갖고 학습 속도가 빠른 사람\n타 학문에 비해서 컴퓨터 공학쪽은 새로운 게 너무 빨리 나온다.\n그렇기 때문에 이를 빠르게 배울 수 있는 사람이 좋은 개발자라고 생각한다.\n돈이 많이 움직이고 사회적 영향도 크기 때문에 빠르게 넓은 시야로 볼 수 있는 사람이 좋은 개발자가 될 수 있지 않을까.</p>\n<h3 id=\"q-주니어-개발자가-갖추면-좋은-역량\" style=\"position:relative;\"><a href=\"#q-%EC%A3%BC%EB%8B%88%EC%96%B4-%EA%B0%9C%EB%B0%9C%EC%9E%90%EA%B0%80-%EA%B0%96%EC%B6%94%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EC%97%AD%EB%9F%89\" aria-label=\"q 주니어 개발자가 갖추면 좋은 역량 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 주니어 개발자가 갖추면 좋은 역량?</h3>\n<ol>\n<li>모르면 질문을 좀 해라</li>\n<li>검색은 먼저 좀 해보고</li>\n<li>착했으면 좋겠다.</li>\n<li>말을 잘 했으면 좋겠다. 말하기, 글쓰기, 듣기, 읽기</li>\n<li>건강했으면 좋겠다.</li>\n<li>코딩은 기본이다.</li>\n</ol>\n<blockquote>\n<p>단, 지금 당장 코딩을 잘하는 것은 생각보다 중요하지 않다.\n회사마다, 팀마다, 집단마다 그 입장에 따라 다르지만 코딩을 너무 잘하는 것도 문제 못하는 것도 문제다.\n지금 당장 코딩을 잘하는 것보다 성장할 수 있는 사람!</p>\n</blockquote>\n<h3 id=\"멱등성\" style=\"position:relative;\"><a href=\"#%EB%A9%B1%EB%93%B1%EC%84%B1\" aria-label=\"멱등성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멱등성</h3>\n<ul>\n<li>f(x) = f(f(x))</li>\n<li>ex) 통장에 입금시키는 로직</li>\n<li>여러번 실행되어도 1번만 실행되게!</li>\n</ul>\n<h3 id=\"결정론적\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EC%A0%95%EB%A1%A0%EC%A0%81\" aria-label=\"결정론적 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결정론적</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  b <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 함수들은 비결정론적이다. 호출 때마다 다른 값이 나온다.\n즉, 결정론적인 코드는 어제하든, 오늘하든, 내일하든 같은 결과가 나온다.\n테스트하기 좋아진다. 테스트가 가능해지고 테스트가 완결해진다.\n또한 코드를 보기도 굉장히 쉬워진다.</p>\n<p>flux 패턴에서도 이와 같은 걸 원한 것이다.\nreducer를 순수함수로 만들자!!\n복잡하게 연결된 것이 아니라 아주 간단한 in, 아주 간단한 out을 만들자!\n멱등성과 결정론적인 함수. 물론 이걸 다 지킬 수 있는 건 아니다.\n어플리케이션에 따라서 비결정론적이긴 하다.</p>\n<h3 id=\"flux-패턴\" style=\"position:relative;\"><a href=\"#flux-%ED%8C%A8%ED%84%B4\" aria-label=\"flux 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flux 패턴</h3>\n<blockquote>\n<p>dispatch 는 reducer로 액션에 대해서 새로운 state를 만들고 새로운 애를 만들어서 넣어준다. 그리고 기존 애는 지워준다.</p>\n</blockquote>\n<p>회사가 잘 돌아가고 있다.\nceo가 새로 왔다. 그 ceo가 원하는 모습으로 세팅을 해달라고 한다.</p>\n<ol>\n<li>있는 사람들을 원하는대로 재배치하고 바꾼다.</li>\n</ol>\n<ul>\n<li>Stateful한 방식</li>\n<li>재활용의 이점</li>\n<li>복잡하다.</li>\n</ul>\n<ol start=\"2\">\n<li>아예 새로운 사람들을 뽑는다.</li>\n</ol>\n<ul>\n<li>Stateless한 방식</li>\n<li>재활용할 수 없다.</li>\n<li>그냥 다 밀어버리고 새로 채우니까 깔끔하다.</li>\n</ul>\n<p>2번이 깔끔하지만, 2번은 비용이 많이 든다. 심지어 아주 조금만 바꾸는건데 2번으로 하는 건 비효율적이다.</p>\n<p>위의 예시에서 리액트의 경우는 아래와 같다.</p>\n<p>이전의 state에 대한 가상 dom tree와 새로운 state에 따른 가상 dom tree를 만든 뒤에\n변경 사항을 비교해서 변경된 부분에 대해서만 변형을 일으킨다.</p>\n<p>위의 ceo 예시를 든다면, 기존의 회사 모습을 가상으로 두고 새롭게 원하는 회사의 모습을 가상으로 만든 뒤 이 2개의 자료를 컨설팅 회사에 가져가서 변경해야되는 부분만 바꾸는 것이다.\n그 중간에 컨설팅을 해주는 게 <code class=\"language-text\">Diff, PATCH</code>의 역할이다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-40\">🎄 성장일지 4.0</a></p>\n</li>\n<li>\n<p><a href=\"#-%EA%B3%A0%EB%AF%BC-%EC%82%AC%ED%95%AD\">🧐 고민 사항</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%ED%95%99%EC%8A%B5-%ED%82%A4%EC%9B%8C%EB%93%9C\">🔑 오늘의 학습 키워드</a></p>\n</li>\n<li>\n<p><a href=\"#-%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9\">🥳 학습 내용</a></p>\n<ul>\n<li><a href=\"#q-%EC%A2%8B%EC%9D%80-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9E%80\">Q. 좋은 개발자란?</a></li>\n<li><a href=\"#q-%EC%A3%BC%EB%8B%88%EC%96%B4-%EA%B0%9C%EB%B0%9C%EC%9E%90%EA%B0%80-%EA%B0%96%EC%B6%94%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EC%97%AD%EB%9F%89\">Q. 주니어 개발자가 갖추면 좋은 역량?</a></li>\n<li><a href=\"#%EB%A9%B1%EB%93%B1%EC%84%B1\">멱등성</a></li>\n<li><a href=\"#%EA%B2%B0%EC%A0%95%EB%A1%A0%EC%A0%81\">결정론적</a></li>\n<li><a href=\"#flux-%ED%8C%A8%ED%84%B4\">flux 패턴</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 25, 2023","title":"230425(화)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2023/4/25-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2023/4/24-gl/","nextSlug":"/steadily/growth-diary/2023/4/20-gl/","prevSlug":"/steadily/growth-diary/2023/4/25-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}