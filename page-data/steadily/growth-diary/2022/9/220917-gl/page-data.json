{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2022/9/220917-gl/","result":{"data":{"cur":{"id":"8eeea7ec-b53e-5cad-a6d0-56fd3143cfce","html":"<h2 id=\"-성장일지-20\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-20\" aria-label=\" 성장일지 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지 2.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드 (1.0)\n최대한 간단하게 정리, 추후에 보면서 스스로 설명\n🍉 경험 위주로 (2.0)\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성하자</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textprojectcode-get-shit-done\" style=\"position:relative;\"><a href=\"#code-classlanguage-textprojectcode-get-shit-done\" aria-label=\"code classlanguage textprojectcode get shit done permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Project</code> get-shit-done</h3>\n<p>목표</p>\n<ul>\n<li>webpack을 통한 개발 환경 설정 더 깊고 다양하게 적용해보기</li>\n<li>web component를 염두에 두고 프로젝트 구성하기</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-20\">🪴 성장일지 2.0</a></p>\n<ul>\n<li><a href=\"#project-get-shit-done\"><code class=\"language-text\">Project</code> get-shit-done</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🪴 성장일지 2.0 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 키워드 (1.0)\n최대한 간단하게 정리, 추후에 보면서 스스로 설명\n🍉 경험 위주로 (2.0)\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성하자  get-shit-done 목표 webpack을 통한 개발 환경 설정 더 깊고 다양하게 적용해보기 web component를 염두에 두고 프로젝트 구성하기 🪴 성장일지 2.0  get-shit-done","frontmatter":{"date":"September 17, 2022","title":"220917(토)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220917-gl/"}},"next":{"id":"d18bef19-5fef-586f-be00-586cf9fcc0e7","html":"<h2 id=\"-성장일지-20\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-20\" aria-label=\" 성장일지 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지 2.0</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드 (1.0)\n최대한 간단하게 정리, 추후에 보면서 스스로 설명\n🍉 경험 위주로 (2.0)\n단순 정보를 전달하기보다 무엇을 배웠고 어떻게 해결했는지 짧고 간단하게 작성하자</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textcsscode-반응형feat-media-query\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcsscode-%EB%B0%98%EC%9D%91%ED%98%95feat-media-query\" aria-label=\"code classlanguage textcsscode 반응형feat media query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">CSS</code> 반응형(feat. media query)</h3>\n<p>하나의 css 템플릿 내에서 media query를 통해 특정 조건(기기의 종류, 화면 크기 등등)에 맞는 스타일을 적용하는 방법<br/>\n<br/></p>\n<p>사용 방법</p>\n<ul>\n<li>(1) html link에서 조건을 주고 그 조건에 맞는 css 파일을 적용하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>screen and (max-width: 768px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jaystyle.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token comment\">&lt;!-- 가로폭이 768px이 최대 즉, 768px 이하이고 media type이 screen인 경우 jaystyle.css를 적용한다는 의미 --></span></code></pre></div>\n<ul>\n<li>(2) css의 media query 자체를 이용하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* 이곳에는 desktop을 위한 style 작성 */</span>\n\n<span class=\"token comment\">/* (1) media rule */</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 가로폭 768px이하, media type이 screen -> 보통 모바일 전용 style에 해당\n  여기에 일반적인 style 문법 작성하면 된다. */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* (2) import rule */</span>\n<span class=\"token comment\">/* media type이 screen이고 가로폭이 768px이하일 때 `style.css`를 import하여 적용한다는 의미*/</span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> url <span class=\"token punctuation\">(</span>style.css<span class=\"token punctuation\">)</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<h3 id=\"code-classlanguage-textcsscode-flex---grow와-shrink\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcsscode-flex---grow%EC%99%80-shrink\" aria-label=\"code classlanguage textcsscode flex   grow와 shrink permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">CSS</code> flex - grow와 shrink</h3>\n<h4 id=\"flex-basis\" style=\"position:relative;\"><a href=\"#flex-basis\" aria-label=\"flex basis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flex-basis</h4>\n<p>얼핏보면 width와 유사하다.</p>\n<ul>\n<li>flex-direction에 따라서 주축에 해당하는 부분의 길이를 결정한다.</li>\n<li>부모 태그 아래에 자식 태그가 있을 때, 자식 태그의 크기를 width, height으로 지정한 경우 부모 태그를 강제적으로 넘어간다.</li>\n<li>그러나 flex-basis를 사용 시, 부모 태그의 크기를 고려해서 넘어가지 않는 선에서 최대의 크기를 갖게 된다.</li>\n<li>flex-basis와 width를 동시 적용 시, flex-basis가 더 우선권을 갖는다.</li>\n<li>flex-grow와 flex-shrink를 통해 크기를 줄이거나 늘리기 전의 기본 크기를 결정</li>\n</ul>\n<h4 id=\"flex-wrap\" style=\"position:relative;\"><a href=\"#flex-wrap\" aria-label=\"flex wrap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flex-wrap</h4>\n<p>기본적으로 nowrap이 적용되어있다.</p>\n<ul>\n<li>flex-wrap: nowrap - 부모 태그의 크기보다 자식 태그들의 크기 합이 더 클 때, 알아서 부모 태그의 크기에 맞게 자식 태그를 줄여서 한 줄에 넣게 된다.(일반적인 flex)</li>\n<li>flex-wrap: wrap - 부모 태그의 크기를 자식 태그들이 넘어갈 때, 넘어가는 자식 태그들을 자동으로 다음 줄로 옮겨준다.</li>\n</ul>\n<h4 id=\"code-classlanguage-textflex-growcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textflex-growcode\" aria-label=\"code classlanguage textflex growcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">flex-grow</code></h4>\n<p>부모 태그가 자식 태그들보다 클 때, 부모 태그의 크기에 대해서 자식 태그들이 남긴 공간을 채우기 위한 속성<br/>\n자식 태그마다 늘어나서 남은 공간을 채울 비율을 할당해줄 수 있다.<br/>\n부모 태그의 크기를 x, 자식 태그들의 크기 합을 y라고 할 때 (x - y)값을 아래 정한 비율만큼 나눠갖고 크기를 키운다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.child:nth-child(1)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 1\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.child:nth-child(2)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-grow</span><span class=\"token punctuation\">:</span> 2</code></pre></div>\n<h4 id=\"code-classlanguage-textflex-shrinkcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textflex-shrinkcode\" aria-label=\"code classlanguage textflex shrinkcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">flex-shrink</code></h4>\n<p>grow의 반대 개념으로 부모 태그가 자식 태그들보다 작을 때, 부모 태그의 크기에 대해서 자식 태그들이 넘어간 공간을 줄이기 위한 속성<br/>\n자식 태그마다 넘어가는 공간에 대해 줄어들게 할 비율을 할당해줄 수 있다.<br/>\n부모 태그의 크기를 x, 자식 태그들의 크기 합을 y라고 할 때 (y - x)값을 아래 정한 비율만큼 나눠갖고 크기를 키운다.<br/>\n즉, 아래에서 2번째 자식 태그는 1번째 자식 태그보다 2배 더 줄어드는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.child:nth-child(1)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> 1\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.child:nth-child(2)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> 2</code></pre></div>\n<h4 id=\"추가-flex-flow\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-flex-flow\" aria-label=\"추가 flex flow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가: flex-flow</h4>\n<ul>\n<li>flex-flow: row wrap; -> flex-direction과 flex-wrap을 한 줄에 표현하게 해준다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80-20\">🪴 성장일지 2.0</a></p>\n<ul>\n<li>\n<p><a href=\"#css-%EB%B0%98%EC%9D%91%ED%98%95feat-media-query\"><code class=\"language-text\">CSS</code> 반응형(feat. media query)</a></p>\n</li>\n<li>\n<p><a href=\"#css-flex---grow%EC%99%80-shrink\"><code class=\"language-text\">CSS</code> flex - grow와 shrink</a></p>\n<ul>\n<li><a href=\"#flex-basis\">flex-basis</a></li>\n<li><a href=\"#flex-wrap\">flex-wrap</a></li>\n<li><a href=\"#flex-grow\"><code class=\"language-text\">flex-grow</code></a></li>\n<li><a href=\"#flex-shrink\"><code class=\"language-text\">flex-shrink</code></a></li>\n<li><a href=\"#%EC%B6%94%EA%B0%80-flex-flow\">추가: flex-flow</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 16, 2022","title":"220916(금)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220916-gl/"}},"prev":{"id":"862603ab-629d-5734-af93-844f64c4dcc8","html":"<h2 id=\"-f-lab-멘토링-기록\" style=\"position:relative;\"><a href=\"#-f-lab-%EB%A9%98%ED%86%A0%EB%A7%81-%EA%B8%B0%EB%A1%9D\" aria-label=\" f lab 멘토링 기록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌕 F-lab 멘토링 기록</h2>\n<p>멘토링 이후 부족한 부분을 채우기 위한 기록</p>\n<h3 id=\"폴리필polyfill이란\" style=\"position:relative;\"><a href=\"#%ED%8F%B4%EB%A6%AC%ED%95%84polyfill%EC%9D%B4%EB%9E%80\" aria-label=\"폴리필polyfill이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폴리필(polyfill)이란?</h3>\n<p>바벨: 새로운 문법을 사용해 코드를 작성하면 트랜스파일링을 통해 구 표준을 준수하는 코드로 변경\n폴리필: 새롭게 추가된 함수나 메서드는 명세서 내 정의를 읽고 이에 맞게 직접 함수를 구현해야 사용이 가능하다. 즉, 이렇게 변경된 표준을 준수할 수 있도록 기존 함수의 동작 방식을 수정하거나 새롭게 구현한 함수의 내용을 메꿔주는 역할을 하는 것이 폴리필!</p>\n<h4 id=\"폴리필에서-core-js란\" style=\"position:relative;\"><a href=\"#%ED%8F%B4%EB%A6%AC%ED%95%84%EC%97%90%EC%84%9C-core-js%EB%9E%80\" aria-label=\"폴리필에서 core js란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폴리필에서 core-js란?</h4>\n<p>기존 폴리필 라이브러리들</p>\n<ul>\n<li>\n<p>@babel/polyfill</p>\n<ul>\n<li>전역공간에 폴리필을 채워 넣기 때문에 전역공간의 오염으로 폴리필 충돌 가능성이 있다.</li>\n<li>브라우저에서 이미 구현된 폴리필까지 전부 번들에 포함되어있어 크기가 커지는 단점</li>\n<li>번들 크기는 커지지만 실행 시에는 브라우저에서 미구현된 문법만 실행하기 때문에 빠르다는 장점</li>\n<li>바벨 7.4버전부터 depeciated됨</li>\n</ul>\n</li>\n<li>\n<p>@babel/plugin-transform-runtime</p>\n<ul>\n<li>바벨이 ES6+의 문법들을 자체 구현한 함수로 트랜스파일링</li>\n<li>번들 크기가 작은 장점이 있지만, Array.prototype.includes()와 같은 메소드는 제대로 트랜스파일링 되지 않는 이슈 존재</li>\n</ul>\n</li>\n</ul>\n<p>개선된 폴리필</p>\n<ul>\n<li>core-js@3\n<ul>\n<li>위에서의 2가지 문제(전역공간 오염문제, 메서드 문제) 모두 해결</li>\n<li>아래와 같이 웹팩을 통한 바벨로더-preset-env와 함께 사용한다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                  <span class=\"token literal-property property\">targets</span><span class=\"token operator\">:</span> <span class=\"token string\">'> 2%, not dead'</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">corejs</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">useBuiltIns</span><span class=\"token operator\">:</span> <span class=\"token string\">'entry'</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">modules</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">shippedProposals</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h3 id=\"npm이란\" style=\"position:relative;\"><a href=\"#npm%EC%9D%B4%EB%9E%80\" aria-label=\"npm이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm이란</h3>\n<p>Node Packaged Manager의 약자로, Node.js로 만들어진 패키지(모듈)을 관리해주는 툴이다.</p>\n<h4 id=\"packagejson에서-dependency란\" style=\"position:relative;\"><a href=\"#packagejson%EC%97%90%EC%84%9C-dependency%EB%9E%80\" aria-label=\"packagejson에서 dependency란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json에서 dependency란</h4>\n<p>말 그대로 의존성을 나타내며, npm을 통해 모듈을 추가할 때 기본적으로 dependencies 리스트에 추가된다.</p>\n<ul>\n<li>dependencies: 실제로 어플리케이션 운용에 필요한 모듈을 추가한다. —save 옵션을 추가한다.</li>\n<li>devdependencies: 어플리케이션 개발에 필요한 모듈을 추가한다. —save-dev 혹은 -D 옵션을 추가한다.</li>\n</ul>\n<p>왜 나눌까?</p>\n<ul>\n<li>가독성의 차이</li>\n<li>배포 환경에서 해당 프로젝트를 가져와 의존성을 설치해 프로젝트를 빌드하는 경우, devdependencies의 모듈들은 필요하지 않기 때문</li>\n</ul>\n<h5 id=\"추가-peer-dependencies\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-peer-dependencies\" aria-label=\"추가 peer dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(추가) peer dependencies</h5>\n<p>‘동료’의 의미를 가진 peer 의존성을 의미한다. 예를 들어, A 패키지를 사용하기 위해서 B 패키지의 17.0.0 버전이 필요하다고 할 때, <code class=\"language-text\">A 패키지는 B 패키지의 17.0.0에 의존한다</code>라고 한다. <br/>\n즉, A패키지를 사용하게 될 프로젝트에 <code class=\"language-text\">B패키지는 17.0.0을 사용해주세요!</code>라고 알려주는 역할을 하는 것<br/>\nnpm 7버전부터는 peer dependency의 버전이 맞지 않으면 패키지가 설치되지 않는다.</p>\n<h3 id=\"바벨의-동작원리\" style=\"position:relative;\"><a href=\"#%EB%B0%94%EB%B2%A8%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC\" aria-label=\"바벨의 동작원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바벨의 동작원리</h3>\n<ol>\n<li>(1) 파싱(Parsing)</li>\n</ol>\n<ul>\n<li>소스코드를 통해 추상적인 형태의 코드로 변환하는 과정</li>\n<li>AST(Abstract Systax Tree; 추상구문트리)로 코드를 변환한다.</li>\n<li>babel-parser(bablyon이라고도 부른다.)가 이 과정을 담당한다.</li>\n</ul>\n<ol start=\"2\">\n<li>(2) 변환(Transformation)</li>\n</ol>\n<ul>\n<li>추상구문트리를 받아와 각 브라우저의 환경에 맞는 내용물로 변환하는 작업</li>\n<li>babel preset/plugin에 의해 처리되는 과정</li>\n<li>각 브라우저에서 코드 구문이 어떻게 바뀌어야하는지에 대한 내용을 기술</li>\n</ul>\n<ol start=\"3\">\n<li>(3) 코드 생성(Code Generation)</li>\n</ol>\n<ul>\n<li>2단계에서 생성된 새로운 추상구문트리를 바탕으로 실제 브라우저 환경에 맞는 소스코드로 변환하는 과정</li>\n<li>babel-generator에 의해 이뤄지는 과정</li>\n</ul>\n<h3 id=\"es6-모듈-등장-전\" style=\"position:relative;\"><a href=\"#es6-%EB%AA%A8%EB%93%88-%EB%93%B1%EC%9E%A5-%EC%A0%84\" aria-label=\"es6 모듈 등장 전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>es6 모듈 등장 전</h3>\n<p>html에서 script 태그를 하나하나 다 붙여서 사용<br/>\n파일은 달라도 하나의 전역을 가지기 때문에 문제가 발생한다.</p>\n<h3 id=\"webpack의-대체제-다른-번들러들\" style=\"position:relative;\"><a href=\"#webpack%EC%9D%98-%EB%8C%80%EC%B2%B4%EC%A0%9C-%EB%8B%A4%EB%A5%B8-%EB%B2%88%EB%93%A4%EB%9F%AC%EB%93%A4\" aria-label=\"webpack의 대체제 다른 번들러들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack의 대체제, 다른 번들러들?</h3>\n<p>rollup, vite 등이 존재하며 자세한 사항은 <a href=\"https://ui.toast.com/weekly-pick/ko_20220127\">이곳</a>을 참고!!<br/>\n실제 현업에서는 webpack이 아닌 vite와 같은 다른 번들러를 많이 사용한다고 한다. 아무래도 번들링 속도에서 갖는 이점이 큰가보다!</p>\n<h3 id=\"webpack의-code-splitting이란\" style=\"position:relative;\"><a href=\"#webpack%EC%9D%98-code-splitting%EC%9D%B4%EB%9E%80\" aria-label=\"webpack의 code splitting이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack의 code splitting이란?</h3>\n<p>일반적으로 앱들은 번들러를 통해 하나의 파일로 번들링된다. 번들링은 훌륭한 기법이지만, 앱의 규모가 커짐에 따라서 하나의 번들이 되려 긴 로드시간을 가져오기도 한다. 이 때, code splitting을 통해 런타임시 필요한 코드만 로드할 수 있도록 여러 번들로 쪼개는 작업을 할 수 있다. 이렇게 되면 앱 전체 코드의 양이 줄어드는 것은 아니지만, 사용자가 필요로 하지 않은 코드 로드를 피하여 초기 페이지 로드 속도를 향상시킬 수 있다. 이렇게 나누어진 번들 파일들을 <code class=\"language-text\">chunk</code>라고 한다.</p>\n<h3 id=\"promiseall과-promiseallsettled\" style=\"position:relative;\"><a href=\"#promiseall%EA%B3%BC-promiseallsettled\" aria-label=\"promiseall과 promiseallsettled permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Promise.all과 Promise.allSettled</h3>\n<ul>\n<li>Promise.all: 비동기 처리를 병렬적으로 묶어 처리하게 해준다. and의 개념처럼 모든 promise가 fulfilled되어야 전체값이 반환된다.(하나라도 rejected되면 에러가 발생한다.)</li>\n<li>Promise.allSettled: all에서 하나의 promise라도 rejected되면 에러가 나는 것을 방지하기 위해 ES2020에 추가되었다. 하나가 rejected되어도 rejected된 값으로 반환되어 전체가 반환된다. 이후 값들에 대해 처리를 해주면 된다.</li>\n</ul>\n<blockquote>\n<p>그렇다고 반드시 allSettled가 상위호환인 것은 아니다! 일단 비교적 최신 문법이기에 브라우저 호환도 따져야하고 모든 로직이 완료되어야만 다음 단계로 넘어가는 로직의 경우엔 all을 사용하는 것이 맞다.</p>\n</blockquote>\n<h3 id=\"asyncawait의-내부-로직\" style=\"position:relative;\"><a href=\"#asyncawait%EC%9D%98-%EB%82%B4%EB%B6%80-%EB%A1%9C%EC%A7%81\" aria-label=\"asyncawait의 내부 로직 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>async/await의 내부 로직</h3>\n<ul>\n<li>🐾 Promise에 대해 제대로 공부한 후 다시 작성</li>\n</ul>\n<h3 id=\"모달을-개발할-때-싱글톤-패턴-사용--promise-패턴-사용의-장단점-및-차이\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8B%AC%EC%9D%84-%EA%B0%9C%EB%B0%9C%ED%95%A0-%EB%95%8C-%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4-%EC%82%AC%EC%9A%A9--promise-%ED%8C%A8%ED%84%B4-%EC%82%AC%EC%9A%A9%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90-%EB%B0%8F-%EC%B0%A8%EC%9D%B4\" aria-label=\"모달을 개발할 때 싱글톤 패턴 사용  promise 패턴 사용의 장단점 및 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모달을 개발할 때, 싱글톤 패턴 사용 / Promise 패턴 사용의 장단점 및 차이</h3>\n<ul>\n<li>ing</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-f-lab-%EB%A9%98%ED%86%A0%EB%A7%81-%EA%B8%B0%EB%A1%9D\">🌕 F-lab 멘토링 기록</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%8F%B4%EB%A6%AC%ED%95%84polyfill%EC%9D%B4%EB%9E%80\">폴리필(polyfill)이란?</a></p>\n<ul>\n<li><a href=\"#%ED%8F%B4%EB%A6%AC%ED%95%84%EC%97%90%EC%84%9C-core-js%EB%9E%80\">폴리필에서 core-js란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#npm%EC%9D%B4%EB%9E%80\">npm이란</a></p>\n<ul>\n<li>\n<p><a href=\"#packagejson%EC%97%90%EC%84%9C-dependency%EB%9E%80\">package.json에서 dependency란</a></p>\n<ul>\n<li><a href=\"#%EC%B6%94%EA%B0%80-peer-dependencies\">(추가) peer dependencies</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B0%94%EB%B2%A8%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC\">바벨의 동작원리</a></p>\n</li>\n<li>\n<p><a href=\"#es6-%EB%AA%A8%EB%93%88-%EB%93%B1%EC%9E%A5-%EC%A0%84\">es6 모듈 등장 전</a></p>\n</li>\n<li>\n<p><a href=\"#webpack%EC%9D%98-%EB%8C%80%EC%B2%B4%EC%A0%9C-%EB%8B%A4%EB%A5%B8-%EB%B2%88%EB%93%A4%EB%9F%AC%EB%93%A4\">webpack의 대체제, 다른 번들러들?</a></p>\n</li>\n<li>\n<p><a href=\"#webpack%EC%9D%98-code-splitting%EC%9D%B4%EB%9E%80\">webpack의 code splitting이란?</a></p>\n</li>\n<li>\n<p><a href=\"#promiseall%EA%B3%BC-promiseallsettled\">Promise.all과 Promise.allSettled</a></p>\n</li>\n<li>\n<p><a href=\"#asyncawait%EC%9D%98-%EB%82%B4%EB%B6%80-%EB%A1%9C%EC%A7%81\">async/await의 내부 로직</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%8B%AC%EC%9D%84-%EA%B0%9C%EB%B0%9C%ED%95%A0-%EB%95%8C-%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4-%EC%82%AC%EC%9A%A9--promise-%ED%8C%A8%ED%84%B4-%EC%82%AC%EC%9A%A9%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90-%EB%B0%8F-%EC%B0%A8%EC%9D%B4\">모달을 개발할 때, 싱글톤 패턴 사용 / Promise 패턴 사용의 장단점 및 차이</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 20, 2022","title":"멘토링 6번째","categories":"멘토링","author":"제이든","emoji":"🏋️"},"fields":{"slug":"/from-time-to-time/mentoring/220920-fl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2022/9/220917-gl/","nextSlug":"/steadily/growth-diary/2022/9/220916-gl/","prevSlug":"/from-time-to-time/mentoring/220920-fl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}