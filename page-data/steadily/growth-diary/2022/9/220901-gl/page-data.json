{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2022/9/220901-gl/","result":{"data":{"cur":{"id":"cb65482a-91a1-50bc-bdb6-9765d9b2b9ad","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-모듈\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EB%AA%A8%EB%93%88\" aria-label=\"code classlanguage textjavascriptcode 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 모듈</h3>\n<p>모듈: 애플리케이션을 구성하는 개별적 요소로서 재사용 가능한 코드 조각, 일반적으로 <code class=\"language-text\">기능을 기준으로 파일 단위로 분리</code></p>\n<p>자바스크립트는 주로 웹페이지의 보조로서 탄생한 언어이기 때문에, 일반적으로 모듈 기능을 갖고 있는 언어와 다르게 모듈 기능이 존재하지 않았음</p>\n<p>물론 클라이언트 사이드의 자바스크립트에선 <code class=\"language-text\">&lt;script></code>를 이용하여 여러 js 파일을 로드할 수는 있지만, 파일마다 독립적인 파일 스코프(모듈 스코프)가 없이 그냥 하나의 자바스크립트 파일처럼 작용함<br/>\n즉, 엄연히 기능적으로 파일이 구분되어있고 그 파일(모듈)을 불러와서 사용하는 모듈화가 아니었음</p>\n<h4 id=\"es6모듈esm\" style=\"position:relative;\"><a href=\"#es6%EB%AA%A8%EB%93%88esm\" aria-label=\"es6모듈esm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6모듈(ESM)</h4>\n<p>ES6에서 추가한 클라이언트 사이드 자바스크립트 모듈 기능<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app.mjs<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"export\" style=\"position:relative;\"><a href=\"#export\" aria-label=\"export permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export</h4>\n<p>모듈 내부에서 선언한 모든 식별자는 기본적으로 해당 모듈 내부에서만 참조 가능<br/>\n외부에 공개하기 위해 <code class=\"language-text\">export</code> 식별자를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// test_export.mjs 파일</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">TEST</span> <span class=\"token operator\">=</span> <span class=\"token number\">12345</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"import\" style=\"position:relative;\"><a href=\"#import\" aria-label=\"import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>import</h4>\n<p>반대로 다른 모듈에서 공개한 식별자를 사용하기 위해 <code class=\"language-text\">import</code>를 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">TEST</span><span class=\"token punctuation\">,</span> add <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./test_export.mjs'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"code-classlanguage-text네트워크code-기본-규칙\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%ACcode-%EA%B8%B0%EB%B3%B8-%EA%B7%9C%EC%B9%99\" aria-label=\"code classlanguage text네트워크code 기본 규칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">네트워크</code> 기본 규칙</h3>\n<ul>\n<li>\n<p>프로토콜: 네트워크끼리 통신하기 위해 정해놓은 <code class=\"language-text\">규칙</code></p>\n</li>\n<li>\n<p>OSI모델(OSI 7계층): 네트워크가 데이터를 주고받기 위한 표준 통신 규격</p>\n<ul>\n<li><code class=\"language-text\">응용</code> 계층(7)</li>\n<li><code class=\"language-text\">표현</code> 계층(6)</li>\n<li><code class=\"language-text\">세션</code> 계층(5)</li>\n<li><code class=\"language-text\">전송</code> 계층(4)</li>\n<li><code class=\"language-text\">네트워크</code> 계층(3)</li>\n<li><code class=\"language-text\">데이터 링크</code> 계층(2)</li>\n<li><code class=\"language-text\">물리</code> 계층(1)</li>\n</ul>\n</li>\n<li>\n<p>TCP/IP모델(TCP/IP 4계층): OSI 7계층을 4계층으로 간단화한 규격</p>\n<ul>\n<li><code class=\"language-text\">응용</code> 계층(4): OSI에서 응용, 표현, 세션</li>\n<li><code class=\"language-text\">전송</code> 계층(3): OSI에서 전송</li>\n<li><code class=\"language-text\">인터넷</code> 계층(2): OSI에서 네트워크</li>\n<li><code class=\"language-text\">네트워크 접속</code> 계층(1): OSI에서 데이터 링크, 물리</li>\n</ul>\n</li>\n<li>\n<p>캡슐화: OSI 7계층에서 표현, 세션 계층을 응용 계층에 포함하여 생각했을 때, 아래의 과정을 <code class=\"language-text\">캡슐화</code>라고 한다.</p>\n<hr>\n<p>응용 계층(<code class=\"language-text\">데이터</code> 전송) -><br/>\n전송 계층(<code class=\"language-text\">(전송)헤더</code> + 데이터 전송) -><br/>\n네트워크 계층(<code class=\"language-text\">(네트워크)헤더</code> + (전송)헤더 + 데이터 전송) -><br/>\n데이터링크 계층(<code class=\"language-text\">(네트워크 접속)헤더</code> + (인터넷)헤더 + (전송)헤더 + 데이터 + <code class=\"language-text\">트레일러</code> 전송) -><br/>\n물리 계층(<code class=\"language-text\">전기적 신호</code>로 수신 측에 전송)</p>\n<hr>\n</li>\n</ul>\n<blockquote>\n<p>위 과정이 거꾸로 수신 측에서 거꾸로 층을 올라가며 헤더를 해체하는 작업은 <code class=\"language-text\">역캡슐화</code></p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-함수-선언문과-함수-리터럴-구분\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8%EA%B3%BC-%ED%95%A8%EC%88%98-%EB%A6%AC%ED%84%B0%EB%9F%B4-%EA%B5%AC%EB%B6%84\" aria-label=\"code classlanguage textjavascriptcode 함수 선언문과 함수 리터럴 구분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 함수 선언문과 함수 리터럴 구분</h3>\n<p>함수 선언문은 값이 아닌 문이다! 즉, 표현식이 아니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그런데 함수를 이런 식으로 표현할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addMaker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>흠… 애매하다. 함수 표현식 같이 생겼는데, 뒤에는 익명이 아닌 기명으로 마치 함수 선언문을 변수 add에 할당하고 있는 것처럼 보인다.<br/>\n근데 위에 식은 분명히 작동하고, 그렇다는 것은 우변이 <code class=\"language-text\">값</code>으로 작용하여 변수에 할당된 게 아닐까 생각할 수 있다.<br/>\n위와 같은 상황에서 우변은 (모양은 함수 선언문과 같지만) 함수 리터럴로 해석된다.<br/>\n즉, 함수 선언문으로서 해석되는 게 아닌 <code class=\"language-text\">함수 리터럴</code>로서 해석되는 표현식인 것이다.</p>\n<blockquote>\n<p>{}도 상황에 따라 블록문 혹은 객체 리터럴로 해석될 수 있는 것과 유사!</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'()안에 있는 함수 선언문 모양은 함수 리터럴로 해석됩니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError: test is not defined -> 함수가 선언되지 않음</span>\n\n<span class=\"token comment\">/* 함수 리터럴이기에 즉시 실행 함수가 아래와 같은 모양으로 실행 가능한 것\n()안에서의 함수 선언문 모양은 함수 리터럴이기에 그 뒤에 바로 ()를 붙여서 실행해도 } 뒤에 ;가 자동으로 붙지 않는다. */</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'()안에 있는 함수 선언문 모양은 함수 리터럴로 해석됩니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li>\n<p><a href=\"#javascript-%EB%AA%A8%EB%93%88\"><code class=\"language-text\">JavaScript</code> 모듈</a></p>\n<ul>\n<li><a href=\"#es6%EB%AA%A8%EB%93%88esm\">ES6모듈(ESM)</a></li>\n<li><a href=\"#export\">export</a></li>\n<li><a href=\"#import\">import</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B8%B0%EB%B3%B8-%EA%B7%9C%EC%B9%99\"><code class=\"language-text\">네트워크</code> 기본 규칙</a></p>\n</li>\n<li>\n<p><a href=\"#javascript-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8%EA%B3%BC-%ED%95%A8%EC%88%98-%EB%A6%AC%ED%84%B0%EB%9F%B4-%EA%B5%AC%EB%B6%84\"><code class=\"language-text\">JavaScript</code> 함수 선언문과 함수 리터럴 구분</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🪴 성장일지 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명  모듈 모듈: 애플리케이션을 구성하는 개별적 요소로서 재사용 가능한 코드 조각, 일반적으로  자바스크립트는 주로 웹페이지의 보조로서 탄생한 언어이기 때문에, 일반적으로 모듈 기능을 갖고 있는 언어와 다르게 모듈 기능이 존재하지 않았음 물론 클라이언트 사이드의 자바스크립트에선 를 이용하여 여러 js 파일을 로드할 수는 있지만, 파일마다 독립적인 파일 스코프(모듈 스코프)가 없이 그냥 하나의 자바스크립트 파일처럼 작용함\n즉, 엄연히 기능적으로 파일이 구분되어있고 그 파일(모듈)을 불러와서 사용하는 모듈화가 아니었음 ES6모듈(ESM) ES6에서 추가한 클라이언트 사이드 자바스크립트 모듈 기능 export 모듈 내부에서 선언한 모든 식별자는 기본적으로 해당 모…","frontmatter":{"date":"September 01, 2022","title":"220901(목)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220901-gl/"}},"next":{"id":"3f632908-d48e-5e38-9bde-606c2e0cec65","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-함수형-프로그래밍\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"code classlanguage textjavascriptcode 함수형 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 함수형 프로그래밍</h3>\n<p>함수형 프로그래밍은 프로그래밍 패러다임 중 하나로 <code class=\"language-text\">수학적 함수의 계산을 통해 자료를 처리하고 상태와 가변 데이터를 멀리하는 프로그래밍 패러다임</code>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addMaker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"순수함수\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%88%98%ED%95%A8%EC%88%98\" aria-label=\"순수함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순수함수</h4>\n<ul>\n<li>동일 한입력에 대해 항상 같은 값을 반환하는 함수</li>\n<li>함수의 실행이 프로그램의 실행에 영향을 끼치지 않는 함수</li>\n<li>함수 내부에서 인자의 값이나 프로그램 상태를 변경하는 <code class=\"language-text\">부수 효과(side effect)</code>가 없는 함수</li>\n<li>흔히 우리가 생각하는 외부값을 참조하고 바꾸고, 인자의 값을 변경하는 <code class=\"language-text\">프로그래밍 함수</code>가 아닌 <code class=\"language-text\">수학에서의 함수</code>를 떠올리면 이해하기 좋다.</li>\n</ul>\n<blockquote>\n<p>수학에서의 함수\nex) <code class=\"language-text\">f(x, y) = 2x + 3y</code>처럼 인자 x, y에 대해 어떤 변경없이 동일한 인자에 대해 동일한 결과를 반환하며\n애초에 수학적 함수에서 <code class=\"language-text\">외부의 값을 참조한다.</code>는 개념 자체가 없다. 즉, 이것이 순수함수</p>\n</blockquote>\n<h4 id=\"비상태-불변성\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%83%81%ED%83%9C-%EB%B6%88%EB%B3%80%EC%84%B1\" aria-label=\"비상태 불변성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비상태, 불변성</h4>\n<ul>\n<li>함수형 프로그래밍에서의 데이터는 변하지 않는 <code class=\"language-text\">불변성</code>을 유지해야한다.</li>\n<li>⭐ 데이터의 변경이 필요한 경우, 원본 데이터 구조를 변경하지 않으며 그 데이터의 복사본을 만들어서 그 일부를 변경하고 변경한 복사본을 활용 혹은 반환한다.</li>\n</ul>\n<h4 id=\"일급-객체일급-함수\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4%EC%9D%BC%EA%B8%89-%ED%95%A8%EC%88%98\" aria-label=\"일급 객체일급 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일급 객체(일급 함수)</h4>\n<p>자바스크립트의 함수는 일급 객체로서 일급 함수로 다뤄진다. 함수가 <code class=\"language-text\">값으로</code> 다뤄질 수 있다는 의미이다.</p>\n<ul>\n<li>어떤 함수의 인자로 전달될 수 있다.</li>\n<li>어떤 함수의 반환값이 될 수 있다.</li>\n<li>어떤 자료구조에 저장될 수 있다.</li>\n<li>그 자체의 리터럴로 생성 가능하다.</li>\n</ul>\n<h3 id=\"code-classlanguage-text네트워크code-기초\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%ACcode-%EA%B8%B0%EC%B4%88\" aria-label=\"code classlanguage text네트워크code 기초 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">네트워크</code> 기초</h3>\n<ul>\n<li>네트워크란 <code class=\"language-text\">두 대 이상의 컴퓨터를 연결하여 서로 데이터를 전송할 수 있는 통신망</code>이다.<br/></li>\n<li>인터넷은 TCP/IP 프로토콜을 사용하는 세계 최대 규모의 네트워크이다. 전 세계의 컴퓨터가 서로 데이터를 전송할 수 있도록 만들어진 거대 통신망이다.</li>\n<li>패킷: 네트워크 통신 시 사용되는 작게 분할된 데이터 조각, 네트워크에서 전송하는 데이터의 기본 단위가 된다.\n<blockquote>\n<p>대역폭(최대 전송 속도로 전솔할 수 있는 단위 시간 당 데이터의 양)이 존재하기에 한 번에 큰 데이터를 보낼 수 없다. 그렇기에 데이터의 조각인 패킷으로 쪼개어 송신 후\n수신하여 다시 퍼즐을 맞추듯 그 패킷을 조합하여 원래의 형태를 갖추도록 한다. 이 때, 원래의 형태를 갖추기 위해 각 패킷에는 그 순서가 담긴 정보가 들어있다.</p>\n</blockquote>\n</li>\n<li>온프레미스와 클라우드\n<ul>\n<li>온프레미스: 회사의 서버를 운영하기 위해 사내에 서버를 두거나 데이터 센터에 두는 방식</li>\n<li>클라우드: 인터넷을 통해 제공되는 소프트웨어, 하드웨어 등의 컴퓨팅 서비스를 이용하여 서버를 빌리는 방식</li>\n</ul>\n</li>\n<li>DMZ: 네트워크 구성에서 외부 네트워크(인터넷)과 내부 네트워크(기업) 사이에 위치한 중간 지대로, 공개할 서버만 공개하고 공개하면 안되는 부분은 보안을 지키는 역할을 한다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li>\n<p><a href=\"#javascript-%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\"><code class=\"language-text\">JavaScript</code> 함수형 프로그래밍</a></p>\n<ul>\n<li><a href=\"#%EC%88%9C%EC%88%98%ED%95%A8%EC%88%98\">순수함수</a></li>\n<li><a href=\"#%EB%B9%84%EC%83%81%ED%83%9C-%EB%B6%88%EB%B3%80%EC%84%B1\">비상태, 불변성</a></li>\n<li><a href=\"#%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4%EC%9D%BC%EA%B8%89-%ED%95%A8%EC%88%98\">일급 객체(일급 함수)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B8%B0%EC%B4%88\"><code class=\"language-text\">네트워크</code> 기초</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 31, 2022","title":"220831(수)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/8/220831-gl/"}},"prev":{"id":"c706d4f8-c86b-52c6-8922-e6acbda4d2c9","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-text네트워크code-물리-계층osi의-1계층\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%ACcode-%EB%AC%BC%EB%A6%AC-%EA%B3%84%EC%B8%B5osi%EC%9D%98-1%EA%B3%84%EC%B8%B5\" aria-label=\"code classlanguage text네트워크code 물리 계층osi의 1계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">네트워크</code> 물리 계층(OSI의 1계층)</h3>\n<p>물리 계층</p>\n<ul>\n<li>0과 1만으로 이루어진 비트열을 전기 신호로 변환하기 위해 존재하는 계층</li>\n<li>컴퓨터와 네트워크 장비를 연결 및 서로 간에 전송되는 데이터를 전기 신호로 변환하는 계층</li>\n</ul>\n<h4 id=\"전기-신호-종류\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EA%B8%B0-%EC%8B%A0%ED%98%B8-%EC%A2%85%EB%A5%98\" aria-label=\"전기 신호 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전기 신호 종류</h4>\n<ul>\n<li>아날로그 신호: 파형(물결 모양)으로 주로 전화 회선, 라디오 방송 등에서 사용되는 신호</li>\n<li>디지털 신호: 막대 모양으로 컴퓨터의 0과 1 비트열을 전달하기 위해 사용되는 전기 신호</li>\n</ul>\n<h4 id=\"랜-카드\" style=\"position:relative;\"><a href=\"#%EB%9E%9C-%EC%B9%B4%EB%93%9C\" aria-label=\"랜 카드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>랜 카드</h4>\n<p>네트워크를 통해 데이터를 송수신할 수 있도록 메인 보드 내에 있는 랜 카드 혹은 별도의 랜 카드를 사용</p>\n<h4 id=\"네트워크-전송-매체\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A0%84%EC%86%A1-%EB%A7%A4%EC%B2%B4\" aria-label=\"네트워크 전송 매체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 전송 매체</h4>\n<p>전송 매체란 <code class=\"language-text\">데이터가 흐르는 물리적인 선로</code>로 크게 유선과 무선으로 구분</p>\n<h5 id=\"트위스트-페어-케이블유선\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EC%9C%84%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%96%B4-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%9C%A0%EC%84%A0\" aria-label=\"트위스트 페어 케이블유선 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트위스트 페어 케이블(유선)</h5>\n<p>일반적으로 흔히 <code class=\"language-text\">랜 케이블, 랜 선</code>이라 부르는 케이블\n케이블의 양쪽 끝에는 <code class=\"language-text\">RJ-45</code>라는 커넥터가 붙어있다.(랜 꽂으면 딸깍 소리나는 부분)</p>\n<p>케이블의 종류</p>\n<ul>\n<li>\n<p>UTP(Unshielded Twist Pair)</p>\n<ul>\n<li>구리 선 8개를 2개씩 꼬아 만든 네 쌍의 전선으로 따로 실드 보호가 되어있지 않아 노이즈의 영향을 받기 쉬움</li>\n<li>저렴하기 때문에 일반적으로 많이 사용</li>\n</ul>\n</li>\n<li>\n<p>STP(Shielded Twist Pair)</p>\n<ul>\n<li>2개씩 꼬아 만든 선을 실드로 보호한 케이블</li>\n<li>실드가 있어 노이즈가 적으나 가격이 비싸 보편적으로 사용하지는 않음</li>\n</ul>\n</li>\n</ul>\n<p>통신 규격에 따른 분류</p>\n<ul>\n<li>\n<p>다이렉트 케이블</p>\n<ul>\n<li>8개의 구리 선을 같은 순서로 커넥터에 연결한 케이블</li>\n<li>주로 컴퓨터와 스위치를 연결할 때 사용</li>\n</ul>\n</li>\n<li>\n<p>크로스 케이블</p>\n<ul>\n<li>8개의 구리 선 중 한쪽 커넥터의 1, 2번 연결을 다른 쪽 커넥터의 3, 6번에 연결한 케이블</li>\n<li>컴퓨터끼리 직접 연결할 때(컴퓨터 간 직접 데이터를 보낼 때는, 양쪽 모두 1,2번을 사용하기에 이렇게 크로스한 것)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"리피터와-허브\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0%EC%99%80-%ED%97%88%EB%B8%8C\" aria-label=\"리피터와 허브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리피터와 허브</h4>\n<h5 id=\"리피터\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0\" aria-label=\"리피터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리피터</h5>\n<p>일그러진 전기 신호를 복원(정형)하고 증폭하는 기능을 가진 네트워크 중계 장비<br/>\n즉, 케이블이 너무 길어지면 일어나는 전기 신호의 손실을 중간에서 복원(고속도로 휴게소처럼)</br>\n요즘엔 다른 네트워크 장비에서 리피터 기능을 지원하기에 장비로서 리피터는 거의 쓰지 않는다.</p>\n<h5 id=\"허브\" style=\"position:relative;\"><a href=\"#%ED%97%88%EB%B8%8C\" aria-label=\"허브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>허브</h5>\n<p>리피터와 마찬가지로 전기 신호를 복원하고 증폭하는 기능<br/>\n실제로 통신하는 통로인 포트를 여러개 가지고 있어 리피터 허브라고도 부른다.<br/>\n리피터와 다르게 포트를 여러 개 가지고 있어 컴퓨터 여러대와 통신 가능</p>\n<blockquote>\n<p>컴퓨터1, 2, 3, 4, 5가 허브에 연결되어있고 1에서 2로 데이터를 송신할 때, 허브에 연결된 나머지 컴퓨터(3, 4, 5)에도 데이터가 전송된다.\n3~5에게는 불필요한 데이터이기에 허브를 더미 허브라고 부르기도 하고 이를 해결하기 위해 존재하는 것이 <code class=\"language-text\">스위치</code></p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-프로퍼티-어트리뷰트\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%96%B4%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%8A%B8\" aria-label=\"code classlanguage textjavascriptcode 프로퍼티 어트리뷰트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 프로퍼티 어트리뷰트</h3>\n<p>자바스크립트 엔진은 프로퍼티를 생성할 때 <code class=\"language-text\">프로퍼티의 상태</code>를 나타내는 <code class=\"language-text\">프로퍼티 어트리뷰트</code>를 기본적으로 자동 정의한다.</p>\n<ul>\n<li>프로퍼티의 값(value)</li>\n<li>값의 갱신 가능 여부(writable)</li>\n<li>열거 가능 여부(enumerable)</li>\n<li>재정의 가능 여부(configurable)</li>\n</ul>\n<p>프로퍼티 어트리뷰트에는 직접 접근할 수는 없지만, Object.getOwnPropertyDescriptor 메서드를 사용하여 간접적으로 확인 가능하다.</p>\n<h4 id=\"데이터-프로퍼티와-접근자-프로퍼티\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EC%99%80-%EC%A0%91%EA%B7%BC%EC%9E%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"데이터 프로퍼티와 접근자 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 프로퍼티와 접근자 프로퍼티</h4>\n<ul>\n<li>데이터 프로퍼티: 키와 값으로 구성된 일반적인 프로퍼티(우리가 흔히 생각하는 키와 벨류)</li>\n<li>접근자 프로퍼티: 자체적으로 값을 갖지 않고 다른 데이터 프로퍼티의 값을 읽거나 저장할 때 호출되는 접근자 함수로 구성된 프로퍼티\n<ul>\n<li>get, set 같은 녀석들(ㅂㄷㅂㄷ)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"객체-변경-방지\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EB%B3%80%EA%B2%BD-%EB%B0%A9%EC%A7%80\" aria-label=\"객체 변경 방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 변경 방지</h4>\n<ul>\n<li>객체 확장 금지: Object.preventExtensions</li>\n<li>객체 밀봉: Object.seal</li>\n<li><code class=\"language-text\">객체 동결</code>: Object.freeze, 오로지 읽기만 가능 -> 얘만 기억해도 될듯</li>\n</ul>\n<blockquote>\n<p>다만, 객체 동결도 중첩 객체는 완전히 동결시키지 못한다.(얕은 복사와 깊은 복사처럼 얕은 동결임)\n재귀를 통한 <code class=\"language-text\">깊은 동결</code> 구현(깊은 복사처럼 무조건 알고 있어야하는 건 아니지만 기억해두자!)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> target <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isFrozen</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">freeze</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textjavascriptcode-생성자-함수\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"code classlanguage textjavascriptcode 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 생성자 함수</h3>\n<p>객체를 생성하는 방법 중 하나인 <code class=\"language-text\">생성자 함수</code></p>\n<ul>\n<li>함수는 new 연산자와 함께 호출되면 생성자 함수로 동작하며 암묵적으로 인스턴스르 반환한다.</li>\n<li>일반 객체는 호출할 수 없지만, 함수는 호출할 수 있다.</li>\n</ul>\n<h4 id=\"constructor\" style=\"position:relative;\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h4>\n<ul>\n<li>constructor: 함수 선언문, 함수 표현식, 클래스(클래스도 함수라는 점)</li>\n<li>non-constructor: 메서드(ES6에서의 메서드 축약 표현), 화살표 함수</li>\n</ul>\n<h4 id=\"newtarget과-스코프-세이프-생성자-패턴\" style=\"position:relative;\"><a href=\"#newtarget%EA%B3%BC-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%84%B8%EC%9D%B4%ED%94%84-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%8C%A8%ED%84%B4\" aria-label=\"newtarget과 스코프 세이프 생성자 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new.target과 스코프 세이프 생성자 패턴</h4>\n<p>new.target은 함수 자신(생성자 함수)를 가리킨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// new.target을 이용해 new 연산자를 안썼을 때에 대한 방지</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// new.target을 사용하지못할 때(ES6 이전)</span>\n<span class=\"token comment\">// 스코프 세이프 생성자 패턴 이용</span>\n<span class=\"token comment\">// new 키워드를 안쓰면 this가 전역 객체에 바인딩되므로</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"빌트인-생성자-함수\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%ED%8A%B8%EC%9D%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"빌트인 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌트인 생성자 함수</h4>\n<p>Object, Function 생성자 함수는 new 연산자가 없이 호출해도 new 연산자를 붙인 것처럼 동작한다.<br/>\n반면 String, Number, Boolean 생성자 함수는 new 연산자 없이 호출하면 각각 문자열, 숫자, 불리언 값을 반환한다.(우리가 데이터 타입을 변경할 때, String, Number, Boolean을 사용할 수 있는 이유)</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%AC%BC%EB%A6%AC-%EA%B3%84%EC%B8%B5osi%EC%9D%98-1%EA%B3%84%EC%B8%B5\"><code class=\"language-text\">네트워크</code> 물리 계층(OSI의 1계층)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%A0%84%EA%B8%B0-%EC%8B%A0%ED%98%B8-%EC%A2%85%EB%A5%98\">전기 신호 종류</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%9E%9C-%EC%B9%B4%EB%93%9C\">랜 카드</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A0%84%EC%86%A1-%EB%A7%A4%EC%B2%B4\">네트워크 전송 매체</a></p>\n<ul>\n<li><a href=\"#%ED%8A%B8%EC%9C%84%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%96%B4-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%9C%A0%EC%84%A0\">트위스트 페어 케이블(유선)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0%EC%99%80-%ED%97%88%EB%B8%8C\">리피터와 허브</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0\">리피터</a></li>\n<li><a href=\"#%ED%97%88%EB%B8%8C\">허브</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#javascript-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%96%B4%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%8A%B8\"><code class=\"language-text\">JavaScript</code> 프로퍼티 어트리뷰트</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EC%99%80-%EC%A0%91%EA%B7%BC%EC%9E%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">데이터 프로퍼티와 접근자 프로퍼티</a></li>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-%EB%B3%80%EA%B2%BD-%EB%B0%A9%EC%A7%80\">객체 변경 방지</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#javascript-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\"><code class=\"language-text\">JavaScript</code> 생성자 함수</a></p>\n<ul>\n<li><a href=\"#constructor\">constructor</a></li>\n<li><a href=\"#newtarget%EA%B3%BC-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%84%B8%EC%9D%B4%ED%94%84-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%8C%A8%ED%84%B4\">new.target과 스코프 세이프 생성자 패턴</a></li>\n<li><a href=\"#%EB%B9%8C%ED%8A%B8%EC%9D%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\">빌트인 생성자 함수</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 02, 2022","title":"220902(금)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220902-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2022/9/220901-gl/","nextSlug":"/steadily/growth-diary/2022/8/220831-gl/","prevSlug":"/steadily/growth-diary/2022/9/220902-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}