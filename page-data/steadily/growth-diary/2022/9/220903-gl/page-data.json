{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2022/9/220903-gl/","result":{"data":{"cur":{"id":"a1c07909-4121-5735-855b-eff9b235f7bf","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-바벨babel과-웹팩webpack\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EB%B0%94%EB%B2%A8babel%EA%B3%BC-%EC%9B%B9%ED%8C%A9webpack\" aria-label=\"code classlanguage textjavascriptcode 바벨babel과 웹팩webpack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 바벨(Babel)과 웹팩(Webpack)</h3>\n<h4 id=\"바벨\" style=\"position:relative;\"><a href=\"#%EB%B0%94%EB%B2%A8\" aria-label=\"바벨 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바벨</h4>\n<p>현재 많은 브라우저들이 대부분 ES6를 지원하고 있다.<br/>\n하지만 그 위의 버전과 제안 단계에 있는 ES.NEXT는 아무래도 브라우저가 지속적으로 따라가기 힘들다.</p>\n<p>이를 해결하기위해 최신 버전의 자바스크립트 코드를 ES5 버전의 코드로 바꿔주는 것이 <code class=\"language-text\">바벨</code>이며 이를 <code class=\"language-text\">트랜스파일링</code>이라고 한다.</p>\n<h4 id=\"웹팩\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9\" aria-label=\"웹팩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩</h4>\n<p>의존 관계에 있는 자바스크립트, CSS, 이미지 등의 리소스들을 하나(혹은 여러개)의 파일로 번들링하는 역할을 한다.(모듈 번들러)<br/>\n즉, 자바스크립트 파일들을 각 기능이나 목적에 맞는 모듈들로 구성 후 다시 이 모듈들을 하나로 합쳐주는 작업을 도와주는 것이 <code class=\"language-text\">웹팩</code><br/>\n또한 여러 개의 자바스크립트 파일을 하나로 번들링해주기 때문에 HTML 파일에서 여러 개의 script 파일을 로드할 필요가 없어진다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li>\n<p><a href=\"#javascript-%EB%B0%94%EB%B2%A8babel%EA%B3%BC-%EC%9B%B9%ED%8C%A9webpack\"><code class=\"language-text\">JavaScript</code> 바벨(Babel)과 웹팩(Webpack)</a></p>\n<ul>\n<li><a href=\"#%EB%B0%94%EB%B2%A8\">바벨</a></li>\n<li><a href=\"#%EC%9B%B9%ED%8C%A9\">웹팩</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🪴 성장일지 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명  바벨(Babel)과 웹팩(Webpack) 바벨 현재 많은 브라우저들이 대부분 ES6를 지원하고 있다.\n하지만 그 위의 버전과 제안 단계에 있는 ES.NEXT는 아무래도 브라우저가 지속적으로 따라가기 힘들다. 이를 해결하기위해 최신 버전의 자바스크립트 코드를 ES5 버전의 코드로 바꿔주는 것이 이며 이를 이라고 한다. 웹팩 의존 관계에 있는 자바스크립트, CSS, 이미지 등의 리소스들을 하나(혹은 여러개)의 파일로 번들링하는 역할을 한다.(모듈 번들러)\n즉, 자바스크립트 파일들을 각 기능이나 목적에 맞는 모듈들로 구성 후 다시 이 모듈들을 하나로 합쳐주는 작업을 도와주는 것이 \n또한 여러 개의 자바스크립트 파일을 하나로 번들링해주기 때문에 HTML 파일에…","frontmatter":{"date":"September 03, 2022","title":"220903(토)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220903-gl/"}},"next":{"id":"c706d4f8-c86b-52c6-8922-e6acbda4d2c9","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-text네트워크code-물리-계층osi의-1계층\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%ACcode-%EB%AC%BC%EB%A6%AC-%EA%B3%84%EC%B8%B5osi%EC%9D%98-1%EA%B3%84%EC%B8%B5\" aria-label=\"code classlanguage text네트워크code 물리 계층osi의 1계층 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">네트워크</code> 물리 계층(OSI의 1계층)</h3>\n<p>물리 계층</p>\n<ul>\n<li>0과 1만으로 이루어진 비트열을 전기 신호로 변환하기 위해 존재하는 계층</li>\n<li>컴퓨터와 네트워크 장비를 연결 및 서로 간에 전송되는 데이터를 전기 신호로 변환하는 계층</li>\n</ul>\n<h4 id=\"전기-신호-종류\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EA%B8%B0-%EC%8B%A0%ED%98%B8-%EC%A2%85%EB%A5%98\" aria-label=\"전기 신호 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전기 신호 종류</h4>\n<ul>\n<li>아날로그 신호: 파형(물결 모양)으로 주로 전화 회선, 라디오 방송 등에서 사용되는 신호</li>\n<li>디지털 신호: 막대 모양으로 컴퓨터의 0과 1 비트열을 전달하기 위해 사용되는 전기 신호</li>\n</ul>\n<h4 id=\"랜-카드\" style=\"position:relative;\"><a href=\"#%EB%9E%9C-%EC%B9%B4%EB%93%9C\" aria-label=\"랜 카드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>랜 카드</h4>\n<p>네트워크를 통해 데이터를 송수신할 수 있도록 메인 보드 내에 있는 랜 카드 혹은 별도의 랜 카드를 사용</p>\n<h4 id=\"네트워크-전송-매체\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A0%84%EC%86%A1-%EB%A7%A4%EC%B2%B4\" aria-label=\"네트워크 전송 매체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 전송 매체</h4>\n<p>전송 매체란 <code class=\"language-text\">데이터가 흐르는 물리적인 선로</code>로 크게 유선과 무선으로 구분</p>\n<h5 id=\"트위스트-페어-케이블유선\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EC%9C%84%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%96%B4-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%9C%A0%EC%84%A0\" aria-label=\"트위스트 페어 케이블유선 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트위스트 페어 케이블(유선)</h5>\n<p>일반적으로 흔히 <code class=\"language-text\">랜 케이블, 랜 선</code>이라 부르는 케이블\n케이블의 양쪽 끝에는 <code class=\"language-text\">RJ-45</code>라는 커넥터가 붙어있다.(랜 꽂으면 딸깍 소리나는 부분)</p>\n<p>케이블의 종류</p>\n<ul>\n<li>\n<p>UTP(Unshielded Twist Pair)</p>\n<ul>\n<li>구리 선 8개를 2개씩 꼬아 만든 네 쌍의 전선으로 따로 실드 보호가 되어있지 않아 노이즈의 영향을 받기 쉬움</li>\n<li>저렴하기 때문에 일반적으로 많이 사용</li>\n</ul>\n</li>\n<li>\n<p>STP(Shielded Twist Pair)</p>\n<ul>\n<li>2개씩 꼬아 만든 선을 실드로 보호한 케이블</li>\n<li>실드가 있어 노이즈가 적으나 가격이 비싸 보편적으로 사용하지는 않음</li>\n</ul>\n</li>\n</ul>\n<p>통신 규격에 따른 분류</p>\n<ul>\n<li>\n<p>다이렉트 케이블</p>\n<ul>\n<li>8개의 구리 선을 같은 순서로 커넥터에 연결한 케이블</li>\n<li>주로 컴퓨터와 스위치를 연결할 때 사용</li>\n</ul>\n</li>\n<li>\n<p>크로스 케이블</p>\n<ul>\n<li>8개의 구리 선 중 한쪽 커넥터의 1, 2번 연결을 다른 쪽 커넥터의 3, 6번에 연결한 케이블</li>\n<li>컴퓨터끼리 직접 연결할 때(컴퓨터 간 직접 데이터를 보낼 때는, 양쪽 모두 1,2번을 사용하기에 이렇게 크로스한 것)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"리피터와-허브\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0%EC%99%80-%ED%97%88%EB%B8%8C\" aria-label=\"리피터와 허브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리피터와 허브</h4>\n<h5 id=\"리피터\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0\" aria-label=\"리피터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리피터</h5>\n<p>일그러진 전기 신호를 복원(정형)하고 증폭하는 기능을 가진 네트워크 중계 장비<br/>\n즉, 케이블이 너무 길어지면 일어나는 전기 신호의 손실을 중간에서 복원(고속도로 휴게소처럼)</br>\n요즘엔 다른 네트워크 장비에서 리피터 기능을 지원하기에 장비로서 리피터는 거의 쓰지 않는다.</p>\n<h5 id=\"허브\" style=\"position:relative;\"><a href=\"#%ED%97%88%EB%B8%8C\" aria-label=\"허브 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>허브</h5>\n<p>리피터와 마찬가지로 전기 신호를 복원하고 증폭하는 기능<br/>\n실제로 통신하는 통로인 포트를 여러개 가지고 있어 리피터 허브라고도 부른다.<br/>\n리피터와 다르게 포트를 여러 개 가지고 있어 컴퓨터 여러대와 통신 가능</p>\n<blockquote>\n<p>컴퓨터1, 2, 3, 4, 5가 허브에 연결되어있고 1에서 2로 데이터를 송신할 때, 허브에 연결된 나머지 컴퓨터(3, 4, 5)에도 데이터가 전송된다.\n3~5에게는 불필요한 데이터이기에 허브를 더미 허브라고 부르기도 하고 이를 해결하기 위해 존재하는 것이 <code class=\"language-text\">스위치</code></p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-프로퍼티-어트리뷰트\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%96%B4%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%8A%B8\" aria-label=\"code classlanguage textjavascriptcode 프로퍼티 어트리뷰트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 프로퍼티 어트리뷰트</h3>\n<p>자바스크립트 엔진은 프로퍼티를 생성할 때 <code class=\"language-text\">프로퍼티의 상태</code>를 나타내는 <code class=\"language-text\">프로퍼티 어트리뷰트</code>를 기본적으로 자동 정의한다.</p>\n<ul>\n<li>프로퍼티의 값(value)</li>\n<li>값의 갱신 가능 여부(writable)</li>\n<li>열거 가능 여부(enumerable)</li>\n<li>재정의 가능 여부(configurable)</li>\n</ul>\n<p>프로퍼티 어트리뷰트에는 직접 접근할 수는 없지만, Object.getOwnPropertyDescriptor 메서드를 사용하여 간접적으로 확인 가능하다.</p>\n<h4 id=\"데이터-프로퍼티와-접근자-프로퍼티\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EC%99%80-%EC%A0%91%EA%B7%BC%EC%9E%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"데이터 프로퍼티와 접근자 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 프로퍼티와 접근자 프로퍼티</h4>\n<ul>\n<li>데이터 프로퍼티: 키와 값으로 구성된 일반적인 프로퍼티(우리가 흔히 생각하는 키와 벨류)</li>\n<li>접근자 프로퍼티: 자체적으로 값을 갖지 않고 다른 데이터 프로퍼티의 값을 읽거나 저장할 때 호출되는 접근자 함수로 구성된 프로퍼티\n<ul>\n<li>get, set 같은 녀석들(ㅂㄷㅂㄷ)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"객체-변경-방지\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EB%B3%80%EA%B2%BD-%EB%B0%A9%EC%A7%80\" aria-label=\"객체 변경 방지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 변경 방지</h4>\n<ul>\n<li>객체 확장 금지: Object.preventExtensions</li>\n<li>객체 밀봉: Object.seal</li>\n<li><code class=\"language-text\">객체 동결</code>: Object.freeze, 오로지 읽기만 가능 -> 얘만 기억해도 될듯</li>\n</ul>\n<blockquote>\n<p>다만, 객체 동결도 중첩 객체는 완전히 동결시키지 못한다.(얕은 복사와 깊은 복사처럼 얕은 동결임)\n재귀를 통한 <code class=\"language-text\">깊은 동결</code> 구현(깊은 복사처럼 무조건 알고 있어야하는 건 아니지만 기억해두자!)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> target <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isFrozen</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">freeze</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">deepFreeze</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"code-classlanguage-textjavascriptcode-생성자-함수\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"code classlanguage textjavascriptcode 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 생성자 함수</h3>\n<p>객체를 생성하는 방법 중 하나인 <code class=\"language-text\">생성자 함수</code></p>\n<ul>\n<li>함수는 new 연산자와 함께 호출되면 생성자 함수로 동작하며 암묵적으로 인스턴스르 반환한다.</li>\n<li>일반 객체는 호출할 수 없지만, 함수는 호출할 수 있다.</li>\n</ul>\n<h4 id=\"constructor\" style=\"position:relative;\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h4>\n<ul>\n<li>constructor: 함수 선언문, 함수 표현식, 클래스(클래스도 함수라는 점)</li>\n<li>non-constructor: 메서드(ES6에서의 메서드 축약 표현), 화살표 함수</li>\n</ul>\n<h4 id=\"newtarget과-스코프-세이프-생성자-패턴\" style=\"position:relative;\"><a href=\"#newtarget%EA%B3%BC-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%84%B8%EC%9D%B4%ED%94%84-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%8C%A8%ED%84%B4\" aria-label=\"newtarget과 스코프 세이프 생성자 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new.target과 스코프 세이프 생성자 패턴</h4>\n<p>new.target은 함수 자신(생성자 함수)를 가리킨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// new.target을 이용해 new 연산자를 안썼을 때에 대한 방지</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// new.target을 사용하지못할 때(ES6 이전)</span>\n<span class=\"token comment\">// 스코프 세이프 생성자 패턴 이용</span>\n<span class=\"token comment\">// new 키워드를 안쓰면 this가 전역 객체에 바인딩되므로</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"빌트인-생성자-함수\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%ED%8A%B8%EC%9D%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"빌트인 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌트인 생성자 함수</h4>\n<p>Object, Function 생성자 함수는 new 연산자가 없이 호출해도 new 연산자를 붙인 것처럼 동작한다.<br/>\n반면 String, Number, Boolean 생성자 함수는 new 연산자 없이 호출하면 각각 문자열, 숫자, 불리언 값을 반환한다.(우리가 데이터 타입을 변경할 때, String, Number, Boolean을 사용할 수 있는 이유)</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%AC%BC%EB%A6%AC-%EA%B3%84%EC%B8%B5osi%EC%9D%98-1%EA%B3%84%EC%B8%B5\"><code class=\"language-text\">네트워크</code> 물리 계층(OSI의 1계층)</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%A0%84%EA%B8%B0-%EC%8B%A0%ED%98%B8-%EC%A2%85%EB%A5%98\">전기 신호 종류</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%9E%9C-%EC%B9%B4%EB%93%9C\">랜 카드</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A0%84%EC%86%A1-%EB%A7%A4%EC%B2%B4\">네트워크 전송 매체</a></p>\n<ul>\n<li><a href=\"#%ED%8A%B8%EC%9C%84%EC%8A%A4%ED%8A%B8-%ED%8E%98%EC%96%B4-%EC%BC%80%EC%9D%B4%EB%B8%94%EC%9C%A0%EC%84%A0\">트위스트 페어 케이블(유선)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0%EC%99%80-%ED%97%88%EB%B8%8C\">리피터와 허브</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%ED%94%BC%ED%84%B0\">리피터</a></li>\n<li><a href=\"#%ED%97%88%EB%B8%8C\">허브</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#javascript-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%96%B4%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%8A%B8\"><code class=\"language-text\">JavaScript</code> 프로퍼티 어트리뷰트</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EC%99%80-%EC%A0%91%EA%B7%BC%EC%9E%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">데이터 프로퍼티와 접근자 프로퍼티</a></li>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-%EB%B3%80%EA%B2%BD-%EB%B0%A9%EC%A7%80\">객체 변경 방지</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#javascript-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\"><code class=\"language-text\">JavaScript</code> 생성자 함수</a></p>\n<ul>\n<li><a href=\"#constructor\">constructor</a></li>\n<li><a href=\"#newtarget%EA%B3%BC-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%84%B8%EC%9D%B4%ED%94%84-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%8C%A8%ED%84%B4\">new.target과 스코프 세이프 생성자 패턴</a></li>\n<li><a href=\"#%EB%B9%8C%ED%8A%B8%EC%9D%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\">빌트인 생성자 함수</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 02, 2022","title":"220902(금)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220902-gl/"}},"prev":{"id":"f00f786d-f3fb-5675-a056-73ce0ec55297","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textcsscode-bemblock__element--modifier\" style=\"position:relative;\"><a href=\"#code-classlanguage-textcsscode-bemblock__element--modifier\" aria-label=\"code classlanguage textcsscode bemblock__element  modifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">CSS</code> BEM(Block__Element—Modifier)</h3>\n<p>각 요소들에 CSS를 더 체계적이고 편리하게 관리하기 위한 방법론(약속)<br/>\n<code class=\"language-text\">어떻게 보이는가</code>가 아니라 <code class=\"language-text\">어떤 목적인가</code>에 맞춰 이름을 짓는다.</p>\n<ul>\n<li>요소에 id는 쓰지 않으며 오로지 class만을 이용한다.</li>\n<li>B(Block): 재사용이 가능하고 기능적으로 독립적인 페이지 컴포넌트, 즉 어딘가에 종속되지 않고 그 자체로 사용할 수 있는 단위</li>\n<li>E(Element): 블록을 구성하는 단위, 자신이 속한 블록 내에서만 의미를 가지기에 의존적인 형태. 즉, 블록처럼 똑 떼서 다른 곳에 사용할 수 없음.</li>\n<li>M(Modifier): 블록이나 엘리먼트의 속성을 담당. 생긴 게 조금 다르거나 기능이 조금 다르게 동작하는 것을 구분할 때 사용.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 아래와 같은 형태로 사용합니다. --></span>\nblock__element--modifier</code></pre></div>\n<p>장점</p>\n<ul>\n<li>클래스네임만으로도 마크업 구조를 파악 가능</li>\n<li>SASS의 부모참조자(&#x26;)와 궁합이 아주 좋다.</li>\n<li>작성된 SASS에서 요소를 쉽게 찾아낼 수 있다.</li>\n</ul>\n<p>간단한 토이프로젝트를 하며, css bem을 적용해보았다. 생각보다 그 명명법이 쉽지 않았지만, 확실히 하다보니까 조금씩 ‘아 대충 이런 느낌이구나~!’ 알 수 있었다! 한 번 잘 배워두면 아주 요긴하게 쓰일테니 앞으로 프로젝트 시에 신경써서 하도록 하자 :)</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li><a href=\"#css-bemblock__element--modifier\"><code class=\"language-text\">CSS</code> BEM(Block__Element—Modifier)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 05, 2022","title":"220905(월)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/9/220905-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2022/9/220903-gl/","nextSlug":"/steadily/growth-diary/2022/9/220902-gl/","prevSlug":"/steadily/growth-diary/2022/9/220905-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}