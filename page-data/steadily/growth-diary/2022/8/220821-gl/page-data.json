{"componentChunkName":"component---src-templates-blog-template-js","path":"/steadily/growth-diary/2022/8/220821-gl/","result":{"data":{"cur":{"id":"f00b5f6b-62ca-5392-86b1-b4b717bbfd8e","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-text메모앱code-obsidian\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EB%A9%94%EB%AA%A8%EC%95%B1code-obsidian\" aria-label=\"code classlanguage text메모앱code obsidian permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">메모앱</code> Obsidian</h3>\n<p>개발과 직접 관련있는 부분은 아니지만, 기존 여러 메모를 <code class=\"language-text\">노션</code>을 사용하고 있었는데 속도 면에서 너무 답답하여<br/>\n메모 앱을 고려하던 차에 <code class=\"language-text\">Obsidian</code>이라는 앱을 발견!<br/>\n일단 기본적인 기능은 무료라는 점과 완벽한 마크다운을 지원하고 속도 또한 굉장히 빠르다!<br/>\n그리고 굉장히 큰 장점인 제텔카스텐(메모 작성법)을 활용하기에 최적화되어있는 메모앱이라는 점!<br/>\n나에게 맞는 앱을 찾아서 사용해보고 공부하는 재미도 중요한 것 같다!</p>\n<ul>\n<li>좀더 자세한 사항은 앱에 익숙해지고 기록해보자 🥝</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li><a href=\"#%EB%A9%94%EB%AA%A8%EC%95%B1-obsidian\"><code class=\"language-text\">메모앱</code> Obsidian</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🪴 성장일지 책 의 내용에 자극받아 시작하는 소박한  살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?\n성장하고 있는 것이 살아 있는 것이다.\n생명의 유일한 증거는 성장이다! 🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명  Obsidian 개발과 직접 관련있는 부분은 아니지만, 기존 여러 메모를 을 사용하고 있었는데 속도 면에서 너무 답답하여\n메모 앱을 고려하던 차에 이라는 앱을 발견!\n일단 기본적인 기능은 무료라는 점과 완벽한 마크다운을 지원하고 속도 또한 굉장히 빠르다!\n그리고 굉장히 큰 장점인 제텔카스텐(메모 작성법)을 활용하기에 최적화되어있는 메모앱이라는 점!\n나에게 맞는 앱을 찾아서 사용해보고 공부하는 재미도 중요한 것 같다! 좀더 자세한 사항은 앱에 익숙해지고 기록해보자 🥝 🪴 성장일지  Obsidian","frontmatter":{"date":"August 21, 2022","title":"220821(일)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/8/220821-gl/"}},"next":{"id":"1aff8b9d-9420-5c35-bb2d-a93f664b56fe","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"클라이언트-및-서버-간-통신feat-js-jquery-python-flask-ajax\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%B0%8F-%EC%84%9C%EB%B2%84-%EA%B0%84-%ED%86%B5%EC%8B%A0feat-js-jquery-python-flask-ajax\" aria-label=\"클라이언트 및 서버 간 통신feat js jquery python flask ajax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트 및 서버 간 통신(feat. JS, JQuery, Python, flask, Ajax)</h3>\n<p>예제 코드(라이브러리나 프레임 워크를 호출하는 코드는 생략)</p>\n<ul>\n<li>코드 자체 단순한 예시 코드로 이 코드 자체에 집중하기보단 어떻게 클라이언트(프론트)와 서버(백)이 서로 통신하는지 감을 잡을 수 있게 하자!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 화면 초기화(body 태그를 빈값으로)</span>\n  <span class=\"token function\">showPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 특정 페이지를 보여주는 함수</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">showPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/page'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> pages <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pages<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">makePage</span><span class=\"token punctuation\">(</span>\n          pages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          pages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'second'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          pages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'_id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'$oid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 몽고DB의 데이터 id값을 가져오기 위함(고유값)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 이외에도 GET, POST 등을 이용하여 웹 서버와의 통신을 위한 기능 구현 가능</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## 이 두 녀석들은 몽고DB의 _id 객체가 단순 문자열이 아닌 ObjectID라는 특별한 객체이기 때문에</span>\n<span class=\"token comment\">## 따로 특별히 jsonify하기 위한 라이브러리</span>\n<span class=\"token keyword\">from</span> bson<span class=\"token punctuation\">.</span>json_util <span class=\"token keyword\">import</span> dumps\n<span class=\"token keyword\">from</span> bson<span class=\"token punctuation\">.</span>objectid <span class=\"token keyword\">import</span> ObjectId\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/page'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_pages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>pages<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> jsonify<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'result'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pages'</span><span class=\"token punctuation\">:</span> dumps<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n  app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span>port<span class=\"token operator\">=</span><span class=\"token number\">5000</span><span class=\"token punctuation\">,</span>debug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 클라이언트단과 마찬가지로 서버단에서는 다양한 응답에 대한 다양한 데이터 전달 방법(API)를 짤 수 있다.</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EB%B0%8F-%EC%84%9C%EB%B2%84-%EA%B0%84-%ED%86%B5%EC%8B%A0feat-js-jquery-python-flask-ajax\">클라이언트 및 서버 간 통신(feat. JS, JQuery, Python, flask, Ajax)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 20, 2022","title":"220820(토)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/8/220820-gl/"}},"prev":{"id":"d75f66dd-c760-57c4-bdd4-1d3f689b5e57","html":"<h2 id=\"-성장일지\" style=\"position:relative;\"><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\" aria-label=\" 성장일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🪴 성장일지</h2>\n<p>책 <code class=\"language-text\">행복한 이기주의자(웨인 다이어)</code>의 내용에 자극받아 시작하는 소박한 <code class=\"language-text\">성장기록</code></p>\n<blockquote>\n<p>살아있는 꽃과 죽은 꽃은 어떻게 구별하는가?<br/>\n성장하고 있는 것이 살아 있는 것이다.<br/>\n생명의 유일한 증거는 성장이다!</p>\n</blockquote>\n<blockquote>\n<p>🌳 키워드\n최대한 간단하게 정리, 추후에 보면서 스스로 설명</p>\n</blockquote>\n<h3 id=\"code-classlanguage-textjavascriptcode-데이터-타입remind\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85remind\" aria-label=\"code classlanguage textjavascriptcode 데이터 타입remind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 데이터 타입(remind)</h3>\n<ul>\n<li>원시형: 숫자형, 문자형, 불린형, null, undefined, Symbol</li>\n<li>참조형: Object(객체)</li>\n</ul>\n<p>원시형의 불변성: 데이터 영역에서 한번 저장된 데이터의 값 자체는 변경되지 않기 때문<br/>\n참조형의 가변성: 객체 내의 프로퍼티(변수) 영역은 참조하는 데이터값의 주소가 바뀔 수 있기 때문</p>\n<p>불변객체: 객체이면서 불변성을 갖게 하는 방법, 즉 복사하였을 때 깊은 복사가 가능하게 하는 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">cloneDeep</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> target <span class=\"token operator\">===</span> <span class=\"token string\">'targetect'</span> <span class=\"token operator\">&amp;&amp;</span> target <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">cloneDeep</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"code-classlanguage-textjavascriptcode-실행-컨텍스트remind\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8remind\" aria-label=\"code classlanguage textjavascriptcode 실행 컨텍스트remind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 실행 컨텍스트(remind)</h3>\n<p>실행 컨텍스트: 코드가 실행되기 위한 환경 정보를 담은 객체로, 함수가 호출될 때 만들어진다.</p>\n<ol>\n<li>VariableEnvironment</li>\n</ol>\n<ul>\n<li>EnvironmentRecord(초기값)</li>\n<li>OuterEnvironmentReference(초기값)</li>\n</ul>\n<ol start=\"2\">\n<li>LexicalEnvironment</li>\n</ol>\n<ul>\n<li>EnvironmentRecord</li>\n<li>OuterEnvironmentReference</li>\n</ul>\n<ol start=\"3\">\n<li>Thisbinding</li>\n</ol>\n<p>EnvironmentRecord: 호이스팅과 관련\nOuterEnvironmentReference: 스코프 체이닝과 관련</p>\n<h3 id=\"code-classlanguage-textjavascriptcode-thisremind\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-thisremind\" aria-label=\"code classlanguage textjavascriptcode thisremind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> This(remind)</h3>\n<p>This: 특정 실행 컨텍스트가 형성될 때, 특정 객체를 가리키는 특별한 객체</p>\n<p>그냥 함수로서 호출될 때는 전역객체(window)를 가리키며, 어떤 객체의 메소드로서 호출될 때는 해당 객체를 가리킴<br/>\n또한, 생성자 함수에서 인스턴스를 형성 시 해당 인스턴스를 가리킴</p>\n<p>콜백함수에서는 콜백함수마다 지정하는 this가 제각각</p>\n<p>특정 객체를 this로 지정하기 위한 방법으로는 call, apply, <code class=\"language-text\">bind</code>가 있음</p>\n<p>ES6에서 추가된 화살표 함수는 함수를 호출 시 this binding 과정이 빠져있음</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'jay'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">do</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">arrow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">arrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 함수로서 호출했음에도 this가 window가 아닌 obj를 가리킴(스코프 체이닝처럼)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"code-classlanguage-textjavascriptcode-콜백함수remind\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98remind\" aria-label=\"code classlanguage textjavascriptcode 콜백함수remind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 콜백함수(remind)</h3>\n<p>콜백함수: 다른 함수의 인자로 작용하는 함수로 그 제어권을 특정 함수에게 넘기게 됨</p>\n<p>보통 비동기 함수가 콜백함수를 인자로 받음 ex) setTimeout, addEventListener 등</p>\n<p>🌟 비동기 처리 관련 생각해보면 좋은 사항</p>\n<ul>\n<li>자바스크립트는 단일 쓰레드로 동기처리만 가능한데 어떻게 비동기 처리가 가능할까?\n<blockquote>\n<p>자바스크립트 코드가 돌아가는 환경(Web, Node 등등)에서 제공하는 API들이 비동기 처리를 가능하게 하며\n비동기 처리 후 일정 조건에 따라 Task Queue로 콜백함수가 이동하고 자바스크립트 엔진의 콜 스택이 모두 비어졌을 때\n이벤트루프가 테스크 큐의 함수를 콜 스택으로 넘겨주어 비동기 처리가 가능하다.</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"code-classlanguage-textjavascriptcode-클로저remind\" style=\"position:relative;\"><a href=\"#code-classlanguage-textjavascriptcode-%ED%81%B4%EB%A1%9C%EC%A0%80remind\" aria-label=\"code classlanguage textjavascriptcode 클로저remind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">JavaScript</code> 클로저(remind)</h3>\n<p>클로저: 함수의 변수를 참조하는 내부함수가 <code class=\"language-text\">외부로 전달</code>되어 호출될 때, 그 변수가 G.C(Garbage Collector)에 의해 수거되지 않고 남아있게 되는 현상<br/>\n<code class=\"language-text\">외부로 전달</code>: return 뿐만 아니라 비동기 함수 등을 통한 콜백함수 전달 또한 포함된다.</p>\n<p>클로저는 하나의 현상이지만, 수거되어야할 메모리가 계속 남아있기 때문에 따로 메모리 관리를 해주는 것도 필요합니다.</p>\n<p>대표적인 고차함수(함수를 인자로 받거나 함수를 리턴하는 함수)를 이용한 클로저 활용법</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">outer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">+</span> <span class=\"token string\">'hi, there'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// return되는 함수가 outer의 value를 참조하므로 클로저 현상</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>클로저 활용</p>\n<ul>\n<li>접근 권한 제어(정보 은닉)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 직접 a, b, c에 접근할 수 있는 방법이 없음(보안 강화)</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">security</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">234</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">345</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">a_ref</span><span class=\"token operator\">:</span> a <span class=\"token operator\">+</span> <span class=\"token number\">111</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">b_ref</span><span class=\"token operator\">:</span> b <span class=\"token operator\">+</span> <span class=\"token number\">222</span><span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">c_ref</span><span class=\"token operator\">:</span> c <span class=\"token operator\">+</span> <span class=\"token number\">333</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>부분 적용 함수</li>\n<li>커링 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">curry</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">curryArrow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">func</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%84%B1%EC%9E%A5%EC%9D%BC%EC%A7%80\">🪴 성장일지</a></p>\n<ul>\n<li><a href=\"#javascript-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85remind\"><code class=\"language-text\">JavaScript</code> 데이터 타입(remind)</a></li>\n<li><a href=\"#javascript-%EC%8B%A4%ED%96%89-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8remind\"><code class=\"language-text\">JavaScript</code> 실행 컨텍스트(remind)</a></li>\n<li><a href=\"#javascript-thisremind\"><code class=\"language-text\">JavaScript</code> This(remind)</a></li>\n<li><a href=\"#javascript-%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98remind\"><code class=\"language-text\">JavaScript</code> 콜백함수(remind)</a></li>\n<li><a href=\"#javascript-%ED%81%B4%EB%A1%9C%EC%A0%80remind\"><code class=\"language-text\">JavaScript</code> 클로저(remind)</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"August 22, 2022","title":"220822(월)","categories":"성장일지","author":"제이든","emoji":"🌱"},"fields":{"slug":"/steadily/growth-diary/2022/8/220822-gl/"}},"site":{"siteMetadata":{"siteUrl":"https://JaydenLee1116.github.io","comments":{"utterances":{"repo":"JaydenLee1116/JaydenLee1116.github.io"}}}}},"pageContext":{"slug":"/steadily/growth-diary/2022/8/220821-gl/","nextSlug":"/steadily/growth-diary/2022/8/220820-gl/","prevSlug":"/steadily/growth-diary/2022/8/220822-gl/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}